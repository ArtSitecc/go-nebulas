// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nvm.proto

package nvm

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NVMDeployRequest struct {
	ScriptSrc            string   `protobuf:"bytes,1,opt,name=script_src,json=scriptSrc,proto3" json:"script_src,omitempty"`
	FromAddr             string   `protobuf:"bytes,2,opt,name=from_addr,json=fromAddr,proto3" json:"from_addr,omitempty"`
	BlockHeight          int64    `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NVMDeployRequest) Reset()         { *m = NVMDeployRequest{} }
func (m *NVMDeployRequest) String() string { return proto.CompactTextString(m) }
func (*NVMDeployRequest) ProtoMessage()    {}
func (*NVMDeployRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_83a3db176960b780, []int{0}
}

func (m *NVMDeployRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NVMDeployRequest.Unmarshal(m, b)
}
func (m *NVMDeployRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NVMDeployRequest.Marshal(b, m, deterministic)
}
func (m *NVMDeployRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NVMDeployRequest.Merge(m, src)
}
func (m *NVMDeployRequest) XXX_Size() int {
	return xxx_messageInfo_NVMDeployRequest.Size(m)
}
func (m *NVMDeployRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NVMDeployRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NVMDeployRequest proto.InternalMessageInfo

func (m *NVMDeployRequest) GetScriptSrc() string {
	if m != nil {
		return m.ScriptSrc
	}
	return ""
}

func (m *NVMDeployRequest) GetFromAddr() string {
	if m != nil {
		return m.FromAddr
	}
	return ""
}

func (m *NVMDeployRequest) GetBlockHeight() int64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *NVMDeployRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type NVMDataRequest struct {
	RequestType          string   `protobuf:"bytes,1,opt,name=request_type,json=requestType,proto3" json:"request_type,omitempty"`
	ScriptSrc            string   `protobuf:"bytes,2,opt,name=script_src,json=scriptSrc,proto3" json:"script_src,omitempty"`
	FunctionName         string   `protobuf:"bytes,3,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	ContractAddr         string   `protobuf:"bytes,4,opt,name=contract_addr,json=contractAddr,proto3" json:"contract_addr,omitempty"`
	ExtraData            string   `protobuf:"bytes,5,opt,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NVMDataRequest) Reset()         { *m = NVMDataRequest{} }
func (m *NVMDataRequest) String() string { return proto.CompactTextString(m) }
func (*NVMDataRequest) ProtoMessage()    {}
func (*NVMDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_83a3db176960b780, []int{1}
}

func (m *NVMDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NVMDataRequest.Unmarshal(m, b)
}
func (m *NVMDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NVMDataRequest.Marshal(b, m, deterministic)
}
func (m *NVMDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NVMDataRequest.Merge(m, src)
}
func (m *NVMDataRequest) XXX_Size() int {
	return xxx_messageInfo_NVMDataRequest.Size(m)
}
func (m *NVMDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NVMDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NVMDataRequest proto.InternalMessageInfo

func (m *NVMDataRequest) GetRequestType() string {
	if m != nil {
		return m.RequestType
	}
	return ""
}

func (m *NVMDataRequest) GetScriptSrc() string {
	if m != nil {
		return m.ScriptSrc
	}
	return ""
}

func (m *NVMDataRequest) GetFunctionName() string {
	if m != nil {
		return m.FunctionName
	}
	return ""
}

func (m *NVMDataRequest) GetContractAddr() string {
	if m != nil {
		return m.ContractAddr
	}
	return ""
}

func (m *NVMDataRequest) GetExtraData() string {
	if m != nil {
		return m.ExtraData
	}
	return ""
}

type NVMResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NVMResponse) Reset()         { *m = NVMResponse{} }
func (m *NVMResponse) String() string { return proto.CompactTextString(m) }
func (*NVMResponse) ProtoMessage()    {}
func (*NVMResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83a3db176960b780, []int{2}
}

func (m *NVMResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NVMResponse.Unmarshal(m, b)
}
func (m *NVMResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NVMResponse.Marshal(b, m, deterministic)
}
func (m *NVMResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NVMResponse.Merge(m, src)
}
func (m *NVMResponse) XXX_Size() int {
	return xxx_messageInfo_NVMResponse.Size(m)
}
func (m *NVMResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NVMResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NVMResponse proto.InternalMessageInfo

func (m *NVMResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *NVMResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*NVMDeployRequest)(nil), "NVMDeployRequest")
	proto.RegisterType((*NVMDataRequest)(nil), "NVMDataRequest")
	proto.RegisterType((*NVMResponse)(nil), "NVMResponse")
}

func init() { proto.RegisterFile("nvm.proto", fileDescriptor_83a3db176960b780) }

var fileDescriptor_83a3db176960b780 = []byte{
	// 342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x80, 0x4d, 0xff, 0x30, 0xd3, 0x68, 0xeb, 0x0a, 0x12, 0x94, 0x42, 0x1b, 0x2f, 0x3d, 0x05,
	0x51, 0x50, 0xaf, 0xa2, 0x82, 0x97, 0xe6, 0x90, 0x4a, 0xaf, 0x61, 0xbb, 0x99, 0xb6, 0xc1, 0x66,
	0x37, 0xee, 0x6e, 0x4b, 0x7b, 0xf1, 0xe6, 0x53, 0xf9, 0x72, 0x92, 0xdd, 0x14, 0x34, 0xb7, 0xc9,
	0x97, 0x19, 0xe6, 0x9b, 0x99, 0x05, 0x97, 0x6f, 0xf3, 0xb0, 0x90, 0x42, 0x8b, 0xe0, 0xdb, 0x81,
	0x7e, 0x34, 0x9b, 0xbc, 0x60, 0xb1, 0x16, 0xfb, 0x18, 0x3f, 0x37, 0xa8, 0x34, 0x19, 0x00, 0x28,
	0x26, 0xb3, 0x42, 0x27, 0x4a, 0x32, 0xdf, 0x19, 0x3a, 0x63, 0x37, 0x76, 0x2d, 0x99, 0x4a, 0x46,
	0xae, 0xc0, 0x5d, 0x48, 0x91, 0x27, 0x34, 0x4d, 0xa5, 0xdf, 0x30, 0x7f, 0x8f, 0x4b, 0xf0, 0x94,
	0xa6, 0x92, 0x8c, 0xc0, 0x9b, 0xaf, 0x05, 0xfb, 0x48, 0x56, 0x98, 0x2d, 0x57, 0xda, 0x6f, 0x0e,
	0x9d, 0x71, 0x33, 0xee, 0x1a, 0xf6, 0x66, 0x10, 0x21, 0xd0, 0xd2, 0xfb, 0x02, 0xfd, 0x96, 0x29,
	0x35, 0x71, 0xf0, 0xe3, 0xc0, 0x69, 0xe9, 0x41, 0x35, 0x3d, 0x58, 0x8c, 0xc0, 0x93, 0x36, 0x4c,
	0x4c, 0xba, 0xf5, 0xe8, 0x56, 0xec, 0x7d, 0x5f, 0x60, 0x4d, 0xb4, 0x51, 0x17, 0xbd, 0x86, 0x93,
	0xc5, 0x86, 0x33, 0x9d, 0x09, 0x9e, 0x70, 0x9a, 0xa3, 0x91, 0x71, 0x63, 0xef, 0x00, 0x23, 0x9a,
	0x63, 0x99, 0xc4, 0x04, 0xd7, 0x92, 0x32, 0x6d, 0x27, 0xb2, 0x5a, 0xde, 0x01, 0x9a, 0xa9, 0x06,
	0x00, 0xb8, 0xd3, 0x92, 0x26, 0x29, 0xd5, 0xd4, 0x6f, 0xdb, 0x46, 0x86, 0x94, 0xc6, 0xc1, 0x03,
	0x74, 0xa3, 0xd9, 0x24, 0x46, 0x55, 0x08, 0xae, 0x90, 0x5c, 0x40, 0x47, 0xa2, 0xda, 0xac, 0xb5,
	0x71, 0x6e, 0xc7, 0xd5, 0x17, 0xe9, 0x43, 0x33, 0x57, 0xcb, 0xca, 0xb3, 0x0c, 0x6f, 0xbf, 0x00,
	0xa2, 0xd9, 0x64, 0x8a, 0x72, 0x9b, 0x31, 0x24, 0x8f, 0x70, 0x6e, 0x0f, 0x31, 0xcd, 0xa9, 0xd4,
	0xcf, 0x95, 0x00, 0x39, 0x0b, 0xeb, 0x17, 0xba, 0xf4, 0xc2, 0x3f, 0xfd, 0x82, 0x23, 0x72, 0x0f,
	0xbd, 0x6a, 0x7b, 0xaf, 0x3b, 0xb6, 0xa2, 0x7c, 0x89, 0xa4, 0x17, 0xfe, 0xdf, 0x67, 0xbd, 0x66,
	0xec, 0xdc, 0x38, 0xf3, 0x8e, 0x79, 0x05, 0x77, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x2b,
	0x56, 0x32, 0x12, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NVMServiceClient is the client API for NVMService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NVMServiceClient interface {
	DeploySmartContract(ctx context.Context, in *NVMDeployRequest, opts ...grpc.CallOption) (*NVMResponse, error)
	NVMDataExchange(ctx context.Context, opts ...grpc.CallOption) (NVMService_NVMDataExchangeClient, error)
}

type nVMServiceClient struct {
	cc *grpc.ClientConn
}

func NewNVMServiceClient(cc *grpc.ClientConn) NVMServiceClient {
	return &nVMServiceClient{cc}
}

func (c *nVMServiceClient) DeploySmartContract(ctx context.Context, in *NVMDeployRequest, opts ...grpc.CallOption) (*NVMResponse, error) {
	out := new(NVMResponse)
	err := c.cc.Invoke(ctx, "/NVMService/DeploySmartContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nVMServiceClient) NVMDataExchange(ctx context.Context, opts ...grpc.CallOption) (NVMService_NVMDataExchangeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NVMService_serviceDesc.Streams[0], "/NVMService/NVMDataExchange", opts...)
	if err != nil {
		return nil, err
	}
	x := &nVMServiceNVMDataExchangeClient{stream}
	return x, nil
}

type NVMService_NVMDataExchangeClient interface {
	Send(*NVMDataRequest) error
	Recv() (*NVMResponse, error)
	grpc.ClientStream
}

type nVMServiceNVMDataExchangeClient struct {
	grpc.ClientStream
}

func (x *nVMServiceNVMDataExchangeClient) Send(m *NVMDataRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *nVMServiceNVMDataExchangeClient) Recv() (*NVMResponse, error) {
	m := new(NVMResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NVMServiceServer is the server API for NVMService service.
type NVMServiceServer interface {
	DeploySmartContract(context.Context, *NVMDeployRequest) (*NVMResponse, error)
	NVMDataExchange(NVMService_NVMDataExchangeServer) error
}

func RegisterNVMServiceServer(s *grpc.Server, srv NVMServiceServer) {
	s.RegisterService(&_NVMService_serviceDesc, srv)
}

func _NVMService_DeploySmartContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NVMDeployRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NVMServiceServer).DeploySmartContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/NVMService/DeploySmartContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NVMServiceServer).DeploySmartContract(ctx, req.(*NVMDeployRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NVMService_NVMDataExchange_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(NVMServiceServer).NVMDataExchange(&nVMServiceNVMDataExchangeServer{stream})
}

type NVMService_NVMDataExchangeServer interface {
	Send(*NVMResponse) error
	Recv() (*NVMDataRequest, error)
	grpc.ServerStream
}

type nVMServiceNVMDataExchangeServer struct {
	grpc.ServerStream
}

func (x *nVMServiceNVMDataExchangeServer) Send(m *NVMResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *nVMServiceNVMDataExchangeServer) Recv() (*NVMDataRequest, error) {
	m := new(NVMDataRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _NVMService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "NVMService",
	HandlerType: (*NVMServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeploySmartContract",
			Handler:    _NVMService_DeploySmartContract_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "NVMDataExchange",
			Handler:       _NVMService_NVMDataExchange_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "nvm.proto",
}
