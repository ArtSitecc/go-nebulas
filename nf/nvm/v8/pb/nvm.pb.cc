// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nvm.proto

#include "nvm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class NVMCallRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NVMCallRequest>
      _instance;
} _NVMCallRequest_default_instance_;
class NVMDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NVMDataRequest>
      _instance;
} _NVMDataRequest_default_instance_;
class NVMRPCResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NVMRPCResponse>
      _instance;
} _NVMRPCResponse_default_instance_;
namespace protobuf_nvm_2eproto {
void InitDefaultsNVMCallRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_NVMCallRequest_default_instance_;
    new (ptr) ::NVMCallRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NVMCallRequest::InitAsDefaultInstance();
}

void InitDefaultsNVMCallRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNVMCallRequestImpl);
}

void InitDefaultsNVMDataRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_NVMDataRequest_default_instance_;
    new (ptr) ::NVMDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NVMDataRequest::InitAsDefaultInstance();
}

void InitDefaultsNVMDataRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNVMDataRequestImpl);
}

void InitDefaultsNVMRPCResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_NVMRPCResponse_default_instance_;
    new (ptr) ::NVMRPCResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NVMRPCResponse::InitAsDefaultInstance();
}

void InitDefaultsNVMRPCResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNVMRPCResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMCallRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMCallRequest, script_src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMCallRequest, script_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMCallRequest, func_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMCallRequest, enable_limits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMCallRequest, limits_exe_instruction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMCallRequest, limits_total_mem_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMCallRequest, from_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMCallRequest, block_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMCallRequest, func_args_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMDataRequest, script_src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMDataRequest, script_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMDataRequest, function_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMDataRequest, contract_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMDataRequest, extra_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMRPCResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMRPCResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMRPCResponse, msg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::NVMCallRequest)},
  { 14, -1, sizeof(::NVMDataRequest)},
  { 24, -1, sizeof(::NVMRPCResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_NVMCallRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_NVMDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_NVMRPCResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "nvm.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tnvm.proto\"\336\001\n\016NVMCallRequest\022\022\n\nscript"
      "_src\030\001 \001(\t\022\023\n\013script_type\030\002 \001(\t\022\021\n\tfunc_"
      "name\030\003 \001(\t\022\025\n\renable_limits\030\004 \001(\010\022\036\n\026lim"
      "its_exe_instruction\030\005 \001(\005\022\035\n\025limits_tota"
      "l_mem_size\030\006 \001(\005\022\021\n\tfrom_addr\030\007 \001(\t\022\024\n\014b"
      "lock_height\030\010 \001(\003\022\021\n\tfunc_args\030\t \003(\t\"{\n\016"
      "NVMDataRequest\022\022\n\nscript_src\030\001 \001(\t\022\023\n\013sc"
      "ript_type\030\002 \001(\t\022\025\n\rfunction_name\030\003 \001(\t\022\025"
      "\n\rcontract_addr\030\004 \001(\t\022\022\n\nextra_data\030\005 \001("
      "\t\"-\n\016NVMRPCResponse\022\016\n\006result\030\001 \001(\005\022\013\n\003m"
      "sg\030\002 \001(\t2\202\001\n\nNVMService\0229\n\023DeploySmartCo"
      "ntract\022\017.NVMCallRequest\032\017.NVMRPCResponse"
      "\"\000\0229\n\017NVMDataExchange\022\017.NVMDataRequest\032\017"
      ".NVMRPCResponse\"\000(\0010\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 549);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "nvm.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_nvm_2eproto

// ===================================================================

void NVMCallRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NVMCallRequest::kScriptSrcFieldNumber;
const int NVMCallRequest::kScriptTypeFieldNumber;
const int NVMCallRequest::kFuncNameFieldNumber;
const int NVMCallRequest::kEnableLimitsFieldNumber;
const int NVMCallRequest::kLimitsExeInstructionFieldNumber;
const int NVMCallRequest::kLimitsTotalMemSizeFieldNumber;
const int NVMCallRequest::kFromAddrFieldNumber;
const int NVMCallRequest::kBlockHeightFieldNumber;
const int NVMCallRequest::kFuncArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NVMCallRequest::NVMCallRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_nvm_2eproto::InitDefaultsNVMCallRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NVMCallRequest)
}
NVMCallRequest::NVMCallRequest(const NVMCallRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      func_args_(from.func_args_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  script_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.script_src().size() > 0) {
    script_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_src_);
  }
  script_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.script_type().size() > 0) {
    script_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_type_);
  }
  func_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.func_name().size() > 0) {
    func_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.func_name_);
  }
  from_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_addr().size() > 0) {
    from_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_addr_);
  }
  ::memcpy(&enable_limits_, &from.enable_limits_,
    static_cast<size_t>(reinterpret_cast<char*>(&limits_total_mem_size_) -
    reinterpret_cast<char*>(&enable_limits_)) + sizeof(limits_total_mem_size_));
  // @@protoc_insertion_point(copy_constructor:NVMCallRequest)
}

void NVMCallRequest::SharedCtor() {
  script_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  func_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&enable_limits_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limits_total_mem_size_) -
      reinterpret_cast<char*>(&enable_limits_)) + sizeof(limits_total_mem_size_));
  _cached_size_ = 0;
}

NVMCallRequest::~NVMCallRequest() {
  // @@protoc_insertion_point(destructor:NVMCallRequest)
  SharedDtor();
}

void NVMCallRequest::SharedDtor() {
  script_src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  func_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NVMCallRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NVMCallRequest::descriptor() {
  ::protobuf_nvm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_nvm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NVMCallRequest& NVMCallRequest::default_instance() {
  ::protobuf_nvm_2eproto::InitDefaultsNVMCallRequest();
  return *internal_default_instance();
}

NVMCallRequest* NVMCallRequest::New(::google::protobuf::Arena* arena) const {
  NVMCallRequest* n = new NVMCallRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NVMCallRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NVMCallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  func_args_.Clear();
  script_src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  func_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&enable_limits_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limits_total_mem_size_) -
      reinterpret_cast<char*>(&enable_limits_)) + sizeof(limits_total_mem_size_));
  _internal_metadata_.Clear();
}

bool NVMCallRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NVMCallRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string script_src = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_script_src()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->script_src().data(), static_cast<int>(this->script_src().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMCallRequest.script_src"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string script_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_script_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->script_type().data(), static_cast<int>(this->script_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMCallRequest.script_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string func_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_func_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->func_name().data(), static_cast<int>(this->func_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMCallRequest.func_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_limits = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_limits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 limits_exe_instruction = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limits_exe_instruction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 limits_total_mem_size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limits_total_mem_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_addr = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_addr().data(), static_cast<int>(this->from_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMCallRequest.from_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 block_height = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &block_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string func_args = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_func_args()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->func_args(this->func_args_size() - 1).data(),
            static_cast<int>(this->func_args(this->func_args_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMCallRequest.func_args"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NVMCallRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NVMCallRequest)
  return false;
#undef DO_
}

void NVMCallRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NVMCallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string script_src = 1;
  if (this->script_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_src().data(), static_cast<int>(this->script_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMCallRequest.script_src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->script_src(), output);
  }

  // string script_type = 2;
  if (this->script_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_type().data(), static_cast<int>(this->script_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMCallRequest.script_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->script_type(), output);
  }

  // string func_name = 3;
  if (this->func_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->func_name().data(), static_cast<int>(this->func_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMCallRequest.func_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->func_name(), output);
  }

  // bool enable_limits = 4;
  if (this->enable_limits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->enable_limits(), output);
  }

  // int32 limits_exe_instruction = 5;
  if (this->limits_exe_instruction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->limits_exe_instruction(), output);
  }

  // int32 limits_total_mem_size = 6;
  if (this->limits_total_mem_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->limits_total_mem_size(), output);
  }

  // string from_addr = 7;
  if (this->from_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_addr().data(), static_cast<int>(this->from_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMCallRequest.from_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->from_addr(), output);
  }

  // int64 block_height = 8;
  if (this->block_height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->block_height(), output);
  }

  // repeated string func_args = 9;
  for (int i = 0, n = this->func_args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->func_args(i).data(), static_cast<int>(this->func_args(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMCallRequest.func_args");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->func_args(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NVMCallRequest)
}

::google::protobuf::uint8* NVMCallRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NVMCallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string script_src = 1;
  if (this->script_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_src().data(), static_cast<int>(this->script_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMCallRequest.script_src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->script_src(), target);
  }

  // string script_type = 2;
  if (this->script_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_type().data(), static_cast<int>(this->script_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMCallRequest.script_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->script_type(), target);
  }

  // string func_name = 3;
  if (this->func_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->func_name().data(), static_cast<int>(this->func_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMCallRequest.func_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->func_name(), target);
  }

  // bool enable_limits = 4;
  if (this->enable_limits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->enable_limits(), target);
  }

  // int32 limits_exe_instruction = 5;
  if (this->limits_exe_instruction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->limits_exe_instruction(), target);
  }

  // int32 limits_total_mem_size = 6;
  if (this->limits_total_mem_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->limits_total_mem_size(), target);
  }

  // string from_addr = 7;
  if (this->from_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_addr().data(), static_cast<int>(this->from_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMCallRequest.from_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->from_addr(), target);
  }

  // int64 block_height = 8;
  if (this->block_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->block_height(), target);
  }

  // repeated string func_args = 9;
  for (int i = 0, n = this->func_args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->func_args(i).data(), static_cast<int>(this->func_args(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMCallRequest.func_args");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->func_args(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVMCallRequest)
  return target;
}

size_t NVMCallRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVMCallRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string func_args = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->func_args_size());
  for (int i = 0, n = this->func_args_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->func_args(i));
  }

  // string script_src = 1;
  if (this->script_src().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->script_src());
  }

  // string script_type = 2;
  if (this->script_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->script_type());
  }

  // string func_name = 3;
  if (this->func_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->func_name());
  }

  // string from_addr = 7;
  if (this->from_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_addr());
  }

  // bool enable_limits = 4;
  if (this->enable_limits() != 0) {
    total_size += 1 + 1;
  }

  // int32 limits_exe_instruction = 5;
  if (this->limits_exe_instruction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limits_exe_instruction());
  }

  // int64 block_height = 8;
  if (this->block_height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->block_height());
  }

  // int32 limits_total_mem_size = 6;
  if (this->limits_total_mem_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limits_total_mem_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NVMCallRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NVMCallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NVMCallRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NVMCallRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NVMCallRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NVMCallRequest)
    MergeFrom(*source);
  }
}

void NVMCallRequest::MergeFrom(const NVMCallRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NVMCallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  func_args_.MergeFrom(from.func_args_);
  if (from.script_src().size() > 0) {

    script_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_src_);
  }
  if (from.script_type().size() > 0) {

    script_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_type_);
  }
  if (from.func_name().size() > 0) {

    func_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.func_name_);
  }
  if (from.from_addr().size() > 0) {

    from_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_addr_);
  }
  if (from.enable_limits() != 0) {
    set_enable_limits(from.enable_limits());
  }
  if (from.limits_exe_instruction() != 0) {
    set_limits_exe_instruction(from.limits_exe_instruction());
  }
  if (from.block_height() != 0) {
    set_block_height(from.block_height());
  }
  if (from.limits_total_mem_size() != 0) {
    set_limits_total_mem_size(from.limits_total_mem_size());
  }
}

void NVMCallRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NVMCallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NVMCallRequest::CopyFrom(const NVMCallRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVMCallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NVMCallRequest::IsInitialized() const {
  return true;
}

void NVMCallRequest::Swap(NVMCallRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NVMCallRequest::InternalSwap(NVMCallRequest* other) {
  using std::swap;
  func_args_.InternalSwap(&other->func_args_);
  script_src_.Swap(&other->script_src_);
  script_type_.Swap(&other->script_type_);
  func_name_.Swap(&other->func_name_);
  from_addr_.Swap(&other->from_addr_);
  swap(enable_limits_, other->enable_limits_);
  swap(limits_exe_instruction_, other->limits_exe_instruction_);
  swap(block_height_, other->block_height_);
  swap(limits_total_mem_size_, other->limits_total_mem_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NVMCallRequest::GetMetadata() const {
  protobuf_nvm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_nvm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NVMDataRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NVMDataRequest::kScriptSrcFieldNumber;
const int NVMDataRequest::kScriptTypeFieldNumber;
const int NVMDataRequest::kFunctionNameFieldNumber;
const int NVMDataRequest::kContractAddrFieldNumber;
const int NVMDataRequest::kExtraDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NVMDataRequest::NVMDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_nvm_2eproto::InitDefaultsNVMDataRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NVMDataRequest)
}
NVMDataRequest::NVMDataRequest(const NVMDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  script_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.script_src().size() > 0) {
    script_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_src_);
  }
  script_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.script_type().size() > 0) {
    script_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_type_);
  }
  function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.function_name().size() > 0) {
    function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_name_);
  }
  contract_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contract_addr().size() > 0) {
    contract_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_addr_);
  }
  extra_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extra_data().size() > 0) {
    extra_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_data_);
  }
  // @@protoc_insertion_point(copy_constructor:NVMDataRequest)
}

void NVMDataRequest::SharedCtor() {
  script_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

NVMDataRequest::~NVMDataRequest() {
  // @@protoc_insertion_point(destructor:NVMDataRequest)
  SharedDtor();
}

void NVMDataRequest::SharedDtor() {
  script_src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NVMDataRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NVMDataRequest::descriptor() {
  ::protobuf_nvm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_nvm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NVMDataRequest& NVMDataRequest::default_instance() {
  ::protobuf_nvm_2eproto::InitDefaultsNVMDataRequest();
  return *internal_default_instance();
}

NVMDataRequest* NVMDataRequest::New(::google::protobuf::Arena* arena) const {
  NVMDataRequest* n = new NVMDataRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NVMDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NVMDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  script_src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool NVMDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NVMDataRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string script_src = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_script_src()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->script_src().data(), static_cast<int>(this->script_src().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMDataRequest.script_src"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string script_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_script_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->script_type().data(), static_cast<int>(this->script_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMDataRequest.script_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string function_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->function_name().data(), static_cast<int>(this->function_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMDataRequest.function_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contract_addr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract_addr().data(), static_cast<int>(this->contract_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMDataRequest.contract_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extra_data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extra_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extra_data().data(), static_cast<int>(this->extra_data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMDataRequest.extra_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NVMDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NVMDataRequest)
  return false;
#undef DO_
}

void NVMDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NVMDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string script_src = 1;
  if (this->script_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_src().data(), static_cast<int>(this->script_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.script_src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->script_src(), output);
  }

  // string script_type = 2;
  if (this->script_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_type().data(), static_cast<int>(this->script_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.script_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->script_type(), output);
  }

  // string function_name = 3;
  if (this->function_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function_name().data(), static_cast<int>(this->function_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.function_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->function_name(), output);
  }

  // string contract_addr = 4;
  if (this->contract_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract_addr().data(), static_cast<int>(this->contract_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.contract_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->contract_addr(), output);
  }

  // string extra_data = 5;
  if (this->extra_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extra_data().data(), static_cast<int>(this->extra_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.extra_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->extra_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NVMDataRequest)
}

::google::protobuf::uint8* NVMDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NVMDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string script_src = 1;
  if (this->script_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_src().data(), static_cast<int>(this->script_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.script_src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->script_src(), target);
  }

  // string script_type = 2;
  if (this->script_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_type().data(), static_cast<int>(this->script_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.script_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->script_type(), target);
  }

  // string function_name = 3;
  if (this->function_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function_name().data(), static_cast<int>(this->function_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.function_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->function_name(), target);
  }

  // string contract_addr = 4;
  if (this->contract_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract_addr().data(), static_cast<int>(this->contract_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.contract_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->contract_addr(), target);
  }

  // string extra_data = 5;
  if (this->extra_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extra_data().data(), static_cast<int>(this->extra_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.extra_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->extra_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVMDataRequest)
  return target;
}

size_t NVMDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVMDataRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string script_src = 1;
  if (this->script_src().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->script_src());
  }

  // string script_type = 2;
  if (this->script_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->script_type());
  }

  // string function_name = 3;
  if (this->function_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->function_name());
  }

  // string contract_addr = 4;
  if (this->contract_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract_addr());
  }

  // string extra_data = 5;
  if (this->extra_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extra_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NVMDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NVMDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NVMDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NVMDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NVMDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NVMDataRequest)
    MergeFrom(*source);
  }
}

void NVMDataRequest::MergeFrom(const NVMDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NVMDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.script_src().size() > 0) {

    script_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_src_);
  }
  if (from.script_type().size() > 0) {

    script_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_type_);
  }
  if (from.function_name().size() > 0) {

    function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_name_);
  }
  if (from.contract_addr().size() > 0) {

    contract_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_addr_);
  }
  if (from.extra_data().size() > 0) {

    extra_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_data_);
  }
}

void NVMDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NVMDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NVMDataRequest::CopyFrom(const NVMDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVMDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NVMDataRequest::IsInitialized() const {
  return true;
}

void NVMDataRequest::Swap(NVMDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NVMDataRequest::InternalSwap(NVMDataRequest* other) {
  using std::swap;
  script_src_.Swap(&other->script_src_);
  script_type_.Swap(&other->script_type_);
  function_name_.Swap(&other->function_name_);
  contract_addr_.Swap(&other->contract_addr_);
  extra_data_.Swap(&other->extra_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NVMDataRequest::GetMetadata() const {
  protobuf_nvm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_nvm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NVMRPCResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NVMRPCResponse::kResultFieldNumber;
const int NVMRPCResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NVMRPCResponse::NVMRPCResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_nvm_2eproto::InitDefaultsNVMRPCResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NVMRPCResponse)
}
NVMRPCResponse::NVMRPCResponse(const NVMRPCResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NVMRPCResponse)
}

void NVMRPCResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _cached_size_ = 0;
}

NVMRPCResponse::~NVMRPCResponse() {
  // @@protoc_insertion_point(destructor:NVMRPCResponse)
  SharedDtor();
}

void NVMRPCResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NVMRPCResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NVMRPCResponse::descriptor() {
  ::protobuf_nvm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_nvm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NVMRPCResponse& NVMRPCResponse::default_instance() {
  ::protobuf_nvm_2eproto::InitDefaultsNVMRPCResponse();
  return *internal_default_instance();
}

NVMRPCResponse* NVMRPCResponse::New(::google::protobuf::Arena* arena) const {
  NVMRPCResponse* n = new NVMRPCResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NVMRPCResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NVMRPCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _internal_metadata_.Clear();
}

bool NVMRPCResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NVMRPCResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMRPCResponse.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NVMRPCResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NVMRPCResponse)
  return false;
#undef DO_
}

void NVMRPCResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NVMRPCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMRPCResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NVMRPCResponse)
}

::google::protobuf::uint8* NVMRPCResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NVMRPCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMRPCResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVMRPCResponse)
  return target;
}

size_t NVMRPCResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVMRPCResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NVMRPCResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NVMRPCResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const NVMRPCResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NVMRPCResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NVMRPCResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NVMRPCResponse)
    MergeFrom(*source);
  }
}

void NVMRPCResponse::MergeFrom(const NVMRPCResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NVMRPCResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void NVMRPCResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NVMRPCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NVMRPCResponse::CopyFrom(const NVMRPCResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVMRPCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NVMRPCResponse::IsInitialized() const {
  return true;
}

void NVMRPCResponse::Swap(NVMRPCResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NVMRPCResponse::InternalSwap(NVMRPCResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NVMRPCResponse::GetMetadata() const {
  protobuf_nvm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_nvm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
