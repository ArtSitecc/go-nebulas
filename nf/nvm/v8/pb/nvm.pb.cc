// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nvm.proto

#include "nvm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class NVMDeployRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NVMDeployRequest>
      _instance;
} _NVMDeployRequest_default_instance_;
class NVMDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NVMDataRequest>
      _instance;
} _NVMDataRequest_default_instance_;
class NVMResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NVMResponse>
      _instance;
} _NVMResponse_default_instance_;
namespace protobuf_nvm_2eproto {
void InitDefaultsNVMDeployRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_NVMDeployRequest_default_instance_;
    new (ptr) ::NVMDeployRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NVMDeployRequest::InitAsDefaultInstance();
}

void InitDefaultsNVMDeployRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNVMDeployRequestImpl);
}

void InitDefaultsNVMDataRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_NVMDataRequest_default_instance_;
    new (ptr) ::NVMDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NVMDataRequest::InitAsDefaultInstance();
}

void InitDefaultsNVMDataRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNVMDataRequestImpl);
}

void InitDefaultsNVMResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_NVMResponse_default_instance_;
    new (ptr) ::NVMResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NVMResponse::InitAsDefaultInstance();
}

void InitDefaultsNVMResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNVMResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMDeployRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMDeployRequest, script_src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMDeployRequest, from_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMDeployRequest, block_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMDeployRequest, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMDataRequest, request_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMDataRequest, script_src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMDataRequest, function_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMDataRequest, contract_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMDataRequest, extra_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NVMResponse, msg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::NVMDeployRequest)},
  { 9, -1, sizeof(::NVMDataRequest)},
  { 19, -1, sizeof(::NVMResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_NVMDeployRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_NVMDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_NVMResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "nvm.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tnvm.proto\"]\n\020NVMDeployRequest\022\022\n\nscrip"
      "t_src\030\001 \001(\t\022\021\n\tfrom_addr\030\002 \001(\t\022\024\n\014block_"
      "height\030\003 \001(\003\022\014\n\004type\030\004 \001(\t\"|\n\016NVMDataReq"
      "uest\022\024\n\014request_type\030\001 \001(\t\022\022\n\nscript_src"
      "\030\002 \001(\t\022\025\n\rfunction_name\030\003 \001(\t\022\025\n\rcontrac"
      "t_addr\030\004 \001(\t\022\022\n\nextra_data\030\005 \001(\t\"*\n\013NVMR"
      "esponse\022\016\n\006result\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t2~\n\n"
      "NVMService\0228\n\023DeploySmartContract\022\021.NVMD"
      "eployRequest\032\014.NVMResponse\"\000\0226\n\017NVMDataE"
      "xchange\022\017.NVMDataRequest\032\014.NVMResponse\"\000"
      "(\0010\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 412);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "nvm.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_nvm_2eproto

// ===================================================================

void NVMDeployRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NVMDeployRequest::kScriptSrcFieldNumber;
const int NVMDeployRequest::kFromAddrFieldNumber;
const int NVMDeployRequest::kBlockHeightFieldNumber;
const int NVMDeployRequest::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NVMDeployRequest::NVMDeployRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_nvm_2eproto::InitDefaultsNVMDeployRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NVMDeployRequest)
}
NVMDeployRequest::NVMDeployRequest(const NVMDeployRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  script_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.script_src().size() > 0) {
    script_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_src_);
  }
  from_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_addr().size() > 0) {
    from_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_addr_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  block_height_ = from.block_height_;
  // @@protoc_insertion_point(copy_constructor:NVMDeployRequest)
}

void NVMDeployRequest::SharedCtor() {
  script_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  block_height_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

NVMDeployRequest::~NVMDeployRequest() {
  // @@protoc_insertion_point(destructor:NVMDeployRequest)
  SharedDtor();
}

void NVMDeployRequest::SharedDtor() {
  script_src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NVMDeployRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NVMDeployRequest::descriptor() {
  ::protobuf_nvm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_nvm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NVMDeployRequest& NVMDeployRequest::default_instance() {
  ::protobuf_nvm_2eproto::InitDefaultsNVMDeployRequest();
  return *internal_default_instance();
}

NVMDeployRequest* NVMDeployRequest::New(::google::protobuf::Arena* arena) const {
  NVMDeployRequest* n = new NVMDeployRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NVMDeployRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NVMDeployRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  script_src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  block_height_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool NVMDeployRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NVMDeployRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string script_src = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_script_src()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->script_src().data(), static_cast<int>(this->script_src().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMDeployRequest.script_src"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_addr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_addr().data(), static_cast<int>(this->from_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMDeployRequest.from_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 block_height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &block_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMDeployRequest.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NVMDeployRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NVMDeployRequest)
  return false;
#undef DO_
}

void NVMDeployRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NVMDeployRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string script_src = 1;
  if (this->script_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_src().data(), static_cast<int>(this->script_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDeployRequest.script_src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->script_src(), output);
  }

  // string from_addr = 2;
  if (this->from_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_addr().data(), static_cast<int>(this->from_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDeployRequest.from_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_addr(), output);
  }

  // int64 block_height = 3;
  if (this->block_height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->block_height(), output);
  }

  // string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDeployRequest.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NVMDeployRequest)
}

::google::protobuf::uint8* NVMDeployRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NVMDeployRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string script_src = 1;
  if (this->script_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_src().data(), static_cast<int>(this->script_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDeployRequest.script_src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->script_src(), target);
  }

  // string from_addr = 2;
  if (this->from_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_addr().data(), static_cast<int>(this->from_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDeployRequest.from_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_addr(), target);
  }

  // int64 block_height = 3;
  if (this->block_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->block_height(), target);
  }

  // string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDeployRequest.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVMDeployRequest)
  return target;
}

size_t NVMDeployRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVMDeployRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string script_src = 1;
  if (this->script_src().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->script_src());
  }

  // string from_addr = 2;
  if (this->from_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_addr());
  }

  // string type = 4;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // int64 block_height = 3;
  if (this->block_height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->block_height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NVMDeployRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NVMDeployRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NVMDeployRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NVMDeployRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NVMDeployRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NVMDeployRequest)
    MergeFrom(*source);
  }
}

void NVMDeployRequest::MergeFrom(const NVMDeployRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NVMDeployRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.script_src().size() > 0) {

    script_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_src_);
  }
  if (from.from_addr().size() > 0) {

    from_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_addr_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.block_height() != 0) {
    set_block_height(from.block_height());
  }
}

void NVMDeployRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NVMDeployRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NVMDeployRequest::CopyFrom(const NVMDeployRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVMDeployRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NVMDeployRequest::IsInitialized() const {
  return true;
}

void NVMDeployRequest::Swap(NVMDeployRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NVMDeployRequest::InternalSwap(NVMDeployRequest* other) {
  using std::swap;
  script_src_.Swap(&other->script_src_);
  from_addr_.Swap(&other->from_addr_);
  type_.Swap(&other->type_);
  swap(block_height_, other->block_height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NVMDeployRequest::GetMetadata() const {
  protobuf_nvm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_nvm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NVMDataRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NVMDataRequest::kRequestTypeFieldNumber;
const int NVMDataRequest::kScriptSrcFieldNumber;
const int NVMDataRequest::kFunctionNameFieldNumber;
const int NVMDataRequest::kContractAddrFieldNumber;
const int NVMDataRequest::kExtraDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NVMDataRequest::NVMDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_nvm_2eproto::InitDefaultsNVMDataRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NVMDataRequest)
}
NVMDataRequest::NVMDataRequest(const NVMDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_type().size() > 0) {
    request_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_type_);
  }
  script_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.script_src().size() > 0) {
    script_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_src_);
  }
  function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.function_name().size() > 0) {
    function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_name_);
  }
  contract_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contract_addr().size() > 0) {
    contract_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_addr_);
  }
  extra_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extra_data().size() > 0) {
    extra_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_data_);
  }
  // @@protoc_insertion_point(copy_constructor:NVMDataRequest)
}

void NVMDataRequest::SharedCtor() {
  request_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

NVMDataRequest::~NVMDataRequest() {
  // @@protoc_insertion_point(destructor:NVMDataRequest)
  SharedDtor();
}

void NVMDataRequest::SharedDtor() {
  request_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NVMDataRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NVMDataRequest::descriptor() {
  ::protobuf_nvm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_nvm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NVMDataRequest& NVMDataRequest::default_instance() {
  ::protobuf_nvm_2eproto::InitDefaultsNVMDataRequest();
  return *internal_default_instance();
}

NVMDataRequest* NVMDataRequest::New(::google::protobuf::Arena* arena) const {
  NVMDataRequest* n = new NVMDataRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NVMDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NVMDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool NVMDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NVMDataRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_type().data(), static_cast<int>(this->request_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMDataRequest.request_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string script_src = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_script_src()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->script_src().data(), static_cast<int>(this->script_src().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMDataRequest.script_src"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string function_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->function_name().data(), static_cast<int>(this->function_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMDataRequest.function_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contract_addr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract_addr().data(), static_cast<int>(this->contract_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMDataRequest.contract_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extra_data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extra_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extra_data().data(), static_cast<int>(this->extra_data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMDataRequest.extra_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NVMDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NVMDataRequest)
  return false;
#undef DO_
}

void NVMDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NVMDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_type = 1;
  if (this->request_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_type().data(), static_cast<int>(this->request_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.request_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_type(), output);
  }

  // string script_src = 2;
  if (this->script_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_src().data(), static_cast<int>(this->script_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.script_src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->script_src(), output);
  }

  // string function_name = 3;
  if (this->function_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function_name().data(), static_cast<int>(this->function_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.function_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->function_name(), output);
  }

  // string contract_addr = 4;
  if (this->contract_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract_addr().data(), static_cast<int>(this->contract_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.contract_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->contract_addr(), output);
  }

  // string extra_data = 5;
  if (this->extra_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extra_data().data(), static_cast<int>(this->extra_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.extra_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->extra_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NVMDataRequest)
}

::google::protobuf::uint8* NVMDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NVMDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_type = 1;
  if (this->request_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_type().data(), static_cast<int>(this->request_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.request_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_type(), target);
  }

  // string script_src = 2;
  if (this->script_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_src().data(), static_cast<int>(this->script_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.script_src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->script_src(), target);
  }

  // string function_name = 3;
  if (this->function_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function_name().data(), static_cast<int>(this->function_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.function_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->function_name(), target);
  }

  // string contract_addr = 4;
  if (this->contract_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract_addr().data(), static_cast<int>(this->contract_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.contract_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->contract_addr(), target);
  }

  // string extra_data = 5;
  if (this->extra_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extra_data().data(), static_cast<int>(this->extra_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMDataRequest.extra_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->extra_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVMDataRequest)
  return target;
}

size_t NVMDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVMDataRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_type = 1;
  if (this->request_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_type());
  }

  // string script_src = 2;
  if (this->script_src().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->script_src());
  }

  // string function_name = 3;
  if (this->function_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->function_name());
  }

  // string contract_addr = 4;
  if (this->contract_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract_addr());
  }

  // string extra_data = 5;
  if (this->extra_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extra_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NVMDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NVMDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NVMDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NVMDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NVMDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NVMDataRequest)
    MergeFrom(*source);
  }
}

void NVMDataRequest::MergeFrom(const NVMDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NVMDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_type().size() > 0) {

    request_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_type_);
  }
  if (from.script_src().size() > 0) {

    script_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_src_);
  }
  if (from.function_name().size() > 0) {

    function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_name_);
  }
  if (from.contract_addr().size() > 0) {

    contract_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_addr_);
  }
  if (from.extra_data().size() > 0) {

    extra_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_data_);
  }
}

void NVMDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NVMDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NVMDataRequest::CopyFrom(const NVMDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVMDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NVMDataRequest::IsInitialized() const {
  return true;
}

void NVMDataRequest::Swap(NVMDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NVMDataRequest::InternalSwap(NVMDataRequest* other) {
  using std::swap;
  request_type_.Swap(&other->request_type_);
  script_src_.Swap(&other->script_src_);
  function_name_.Swap(&other->function_name_);
  contract_addr_.Swap(&other->contract_addr_);
  extra_data_.Swap(&other->extra_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NVMDataRequest::GetMetadata() const {
  protobuf_nvm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_nvm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NVMResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NVMResponse::kResultFieldNumber;
const int NVMResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NVMResponse::NVMResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_nvm_2eproto::InitDefaultsNVMResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NVMResponse)
}
NVMResponse::NVMResponse(const NVMResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NVMResponse)
}

void NVMResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _cached_size_ = 0;
}

NVMResponse::~NVMResponse() {
  // @@protoc_insertion_point(destructor:NVMResponse)
  SharedDtor();
}

void NVMResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NVMResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NVMResponse::descriptor() {
  ::protobuf_nvm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_nvm_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NVMResponse& NVMResponse::default_instance() {
  ::protobuf_nvm_2eproto::InitDefaultsNVMResponse();
  return *internal_default_instance();
}

NVMResponse* NVMResponse::New(::google::protobuf::Arena* arena) const {
  NVMResponse* n = new NVMResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NVMResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NVMResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _internal_metadata_.Clear();
}

bool NVMResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NVMResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NVMResponse.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NVMResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NVMResponse)
  return false;
#undef DO_
}

void NVMResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NVMResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NVMResponse)
}

::google::protobuf::uint8* NVMResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NVMResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NVMResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVMResponse)
  return target;
}

size_t NVMResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVMResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NVMResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NVMResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const NVMResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NVMResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NVMResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NVMResponse)
    MergeFrom(*source);
  }
}

void NVMResponse::MergeFrom(const NVMResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NVMResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void NVMResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NVMResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NVMResponse::CopyFrom(const NVMResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVMResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NVMResponse::IsInitialized() const {
  return true;
}

void NVMResponse::Swap(NVMResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NVMResponse::InternalSwap(NVMResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NVMResponse::GetMetadata() const {
  protobuf_nvm_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_nvm_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
