// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: config.proto

package nebletpb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Reporting modules.
type StatsConfig_ReportingModule int32

const (
	StatsConfig_Influxdb StatsConfig_ReportingModule = 0
)

var StatsConfig_ReportingModule_name = map[int32]string{
	0: "Influxdb",
}
var StatsConfig_ReportingModule_value = map[string]int32{
	"Influxdb": 0,
}

func (x StatsConfig_ReportingModule) String() string {
	return proto.EnumName(StatsConfig_ReportingModule_name, int32(x))
}
func (StatsConfig_ReportingModule) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_config_550915a65c694a12, []int{7, 0}
}

// Neblet global configurations.
type Config struct {
	// Network config.
	Network *NetworkConfig `protobuf:"bytes,1,opt,name=network" json:"network"`
	// Chain config.
	Chain *ChainConfig `protobuf:"bytes,2,opt,name=chain" json:"chain"`
	// RPC config.
	Rpc *RPCConfig `protobuf:"bytes,3,opt,name=rpc" json:"rpc"`
	// Stats config.
	Stats *StatsConfig `protobuf:"bytes,100,opt,name=stats" json:"stats"`
	// Misc config.
	Misc *MiscConfig `protobuf:"bytes,101,opt,name=misc" json:"misc"`
	// App Config.
	App *AppConfig `protobuf:"bytes,102,opt,name=app" json:"app"`
	// Nbre Config.
	Nbre                 *NbreConfig `protobuf:"bytes,200,opt,name=nbre" json:"nbre"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_550915a65c694a12, []int{0}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetNetwork() *NetworkConfig {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *Config) GetChain() *ChainConfig {
	if m != nil {
		return m.Chain
	}
	return nil
}

func (m *Config) GetRpc() *RPCConfig {
	if m != nil {
		return m.Rpc
	}
	return nil
}

func (m *Config) GetStats() *StatsConfig {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *Config) GetMisc() *MiscConfig {
	if m != nil {
		return m.Misc
	}
	return nil
}

func (m *Config) GetApp() *AppConfig {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *Config) GetNbre() *NbreConfig {
	if m != nil {
		return m.Nbre
	}
	return nil
}

type NetworkConfig struct {
	// Neb seed node address.
	Seed []string `protobuf:"bytes,1,rep,name=seed" json:"seed"`
	// Listen addresses.
	Listen []string `protobuf:"bytes,2,rep,name=listen" json:"listen"`
	// Network node privateKey address. If nil, generate a new node.
	PrivateKey string `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key"`
	// Network ID
	NetworkId            uint32   `protobuf:"varint,4,opt,name=network_id,json=networkId,proto3" json:"network_id"`
	StreamLimits         int32    `protobuf:"varint,5,opt,name=stream_limits,json=streamLimits,proto3" json:"stream_limits"`
	ReservedStreamLimits int32    `protobuf:"varint,6,opt,name=reserved_stream_limits,json=reservedStreamLimits,proto3" json:"reserved_stream_limits"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkConfig) Reset()         { *m = NetworkConfig{} }
func (m *NetworkConfig) String() string { return proto.CompactTextString(m) }
func (*NetworkConfig) ProtoMessage()    {}
func (*NetworkConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_550915a65c694a12, []int{1}
}
func (m *NetworkConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkConfig.Unmarshal(m, b)
}
func (m *NetworkConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkConfig.Marshal(b, m, deterministic)
}
func (dst *NetworkConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkConfig.Merge(dst, src)
}
func (m *NetworkConfig) XXX_Size() int {
	return xxx_messageInfo_NetworkConfig.Size(m)
}
func (m *NetworkConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkConfig.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkConfig proto.InternalMessageInfo

func (m *NetworkConfig) GetSeed() []string {
	if m != nil {
		return m.Seed
	}
	return nil
}

func (m *NetworkConfig) GetListen() []string {
	if m != nil {
		return m.Listen
	}
	return nil
}

func (m *NetworkConfig) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *NetworkConfig) GetNetworkId() uint32 {
	if m != nil {
		return m.NetworkId
	}
	return 0
}

func (m *NetworkConfig) GetStreamLimits() int32 {
	if m != nil {
		return m.StreamLimits
	}
	return 0
}

func (m *NetworkConfig) GetReservedStreamLimits() int32 {
	if m != nil {
		return m.ReservedStreamLimits
	}
	return 0
}

type ChainConfig struct {
	// ChainID.
	ChainId uint32 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id"`
	// genesis conf file path
	Genesis string `protobuf:"bytes,2,opt,name=genesis,proto3" json:"genesis"`
	// Data dir.
	Datadir string `protobuf:"bytes,11,opt,name=datadir,proto3" json:"datadir"`
	// Key dir.
	Keydir string `protobuf:"bytes,12,opt,name=keydir,proto3" json:"keydir"`
	// Start mine at launch
	StartMine bool `protobuf:"varint,20,opt,name=start_mine,json=startMine,proto3" json:"start_mine"`
	// Coinbase.
	Coinbase string `protobuf:"bytes,21,opt,name=coinbase,proto3" json:"coinbase"`
	// Miner.
	Miner string `protobuf:"bytes,22,opt,name=miner,proto3" json:"miner"`
	// Passphrase.
	Passphrase string `protobuf:"bytes,23,opt,name=passphrase,proto3" json:"passphrase"`
	// Enable remote sign server
	EnableRemoteSignServer bool `protobuf:"varint,24,opt,name=enable_remote_sign_server,json=enableRemoteSignServer,proto3" json:"enable_remote_sign_server"`
	// Remote sign server
	RemoteSignServer string `protobuf:"bytes,25,opt,name=remote_sign_server,json=remoteSignServer,proto3" json:"remote_sign_server"`
	// Lowest GasPrice.
	GasPrice string `protobuf:"bytes,26,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price"`
	// Max GasLimit.
	GasLimit string `protobuf:"bytes,27,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit"`
	// Supported signature cipher list. ["ECC_SECP256K1"]
	SignatureCiphers   []string `protobuf:"bytes,28,rep,name=signature_ciphers,json=signatureCiphers" json:"signature_ciphers"`
	SuperNode          bool     `protobuf:"varint,30,opt,name=super_node,json=superNode,proto3" json:"super_node"`
	UnsupportedKeyword string   `protobuf:"bytes,31,opt,name=unsupported_keyword,json=unsupportedKeyword,proto3" json:"unsupported_keyword"`
	Dynasty            string   `protobuf:"bytes,32,opt,name=dynasty,proto3" json:"dynasty"`
	// access control config path
	Access string `protobuf:"bytes,33,opt,name=access,proto3" json:"access"`
	// v8 server path
	NvmPath string `protobuf:"bytes,34,opt,name=nvm_path,json=nvmPath,proto3" json:"nvm_path"`
	// v8 server listen addresses
	NvmListen            []string `protobuf:"bytes,35,rep,name=nvm_listen,json=nvmListen" json:"nvm_listen"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChainConfig) Reset()         { *m = ChainConfig{} }
func (m *ChainConfig) String() string { return proto.CompactTextString(m) }
func (*ChainConfig) ProtoMessage()    {}
func (*ChainConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_550915a65c694a12, []int{2}
}
func (m *ChainConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainConfig.Unmarshal(m, b)
}
func (m *ChainConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainConfig.Marshal(b, m, deterministic)
}
func (dst *ChainConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainConfig.Merge(dst, src)
}
func (m *ChainConfig) XXX_Size() int {
	return xxx_messageInfo_ChainConfig.Size(m)
}
func (m *ChainConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ChainConfig proto.InternalMessageInfo

func (m *ChainConfig) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *ChainConfig) GetGenesis() string {
	if m != nil {
		return m.Genesis
	}
	return ""
}

func (m *ChainConfig) GetDatadir() string {
	if m != nil {
		return m.Datadir
	}
	return ""
}

func (m *ChainConfig) GetKeydir() string {
	if m != nil {
		return m.Keydir
	}
	return ""
}

func (m *ChainConfig) GetStartMine() bool {
	if m != nil {
		return m.StartMine
	}
	return false
}

func (m *ChainConfig) GetCoinbase() string {
	if m != nil {
		return m.Coinbase
	}
	return ""
}

func (m *ChainConfig) GetMiner() string {
	if m != nil {
		return m.Miner
	}
	return ""
}

func (m *ChainConfig) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

func (m *ChainConfig) GetEnableRemoteSignServer() bool {
	if m != nil {
		return m.EnableRemoteSignServer
	}
	return false
}

func (m *ChainConfig) GetRemoteSignServer() string {
	if m != nil {
		return m.RemoteSignServer
	}
	return ""
}

func (m *ChainConfig) GetGasPrice() string {
	if m != nil {
		return m.GasPrice
	}
	return ""
}

func (m *ChainConfig) GetGasLimit() string {
	if m != nil {
		return m.GasLimit
	}
	return ""
}

func (m *ChainConfig) GetSignatureCiphers() []string {
	if m != nil {
		return m.SignatureCiphers
	}
	return nil
}

func (m *ChainConfig) GetSuperNode() bool {
	if m != nil {
		return m.SuperNode
	}
	return false
}

func (m *ChainConfig) GetUnsupportedKeyword() string {
	if m != nil {
		return m.UnsupportedKeyword
	}
	return ""
}

func (m *ChainConfig) GetDynasty() string {
	if m != nil {
		return m.Dynasty
	}
	return ""
}

func (m *ChainConfig) GetAccess() string {
	if m != nil {
		return m.Access
	}
	return ""
}

func (m *ChainConfig) GetNvmPath() string {
	if m != nil {
		return m.NvmPath
	}
	return ""
}

func (m *ChainConfig) GetNvmListen() []string {
	if m != nil {
		return m.NvmListen
	}
	return nil
}

type RPCConfig struct {
	// RPC listen addresses.
	RpcListen []string `protobuf:"bytes,1,rep,name=rpc_listen,json=rpcListen" json:"rpc_listen"`
	// HTTP listen addresses.
	HttpListen []string `protobuf:"bytes,2,rep,name=http_listen,json=httpListen" json:"http_listen"`
	// Enabled HTTP modules.["api", "admin"]
	HttpModule       []string `protobuf:"bytes,3,rep,name=http_module,json=httpModule" json:"http_module"`
	ConnectionLimits int32    `protobuf:"varint,4,opt,name=connection_limits,json=connectionLimits,proto3" json:"connection_limits"`
	HttpLimits       int32    `protobuf:"varint,5,opt,name=http_limits,json=httpLimits,proto3" json:"http_limits"`
	// HTTP CORS allowed origins
	HttpCors             []string `protobuf:"bytes,6,rep,name=http_cors,json=httpCors" json:"http_cors"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RPCConfig) Reset()         { *m = RPCConfig{} }
func (m *RPCConfig) String() string { return proto.CompactTextString(m) }
func (*RPCConfig) ProtoMessage()    {}
func (*RPCConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_550915a65c694a12, []int{3}
}
func (m *RPCConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RPCConfig.Unmarshal(m, b)
}
func (m *RPCConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RPCConfig.Marshal(b, m, deterministic)
}
func (dst *RPCConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RPCConfig.Merge(dst, src)
}
func (m *RPCConfig) XXX_Size() int {
	return xxx_messageInfo_RPCConfig.Size(m)
}
func (m *RPCConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RPCConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RPCConfig proto.InternalMessageInfo

func (m *RPCConfig) GetRpcListen() []string {
	if m != nil {
		return m.RpcListen
	}
	return nil
}

func (m *RPCConfig) GetHttpListen() []string {
	if m != nil {
		return m.HttpListen
	}
	return nil
}

func (m *RPCConfig) GetHttpModule() []string {
	if m != nil {
		return m.HttpModule
	}
	return nil
}

func (m *RPCConfig) GetConnectionLimits() int32 {
	if m != nil {
		return m.ConnectionLimits
	}
	return 0
}

func (m *RPCConfig) GetHttpLimits() int32 {
	if m != nil {
		return m.HttpLimits
	}
	return 0
}

func (m *RPCConfig) GetHttpCors() []string {
	if m != nil {
		return m.HttpCors
	}
	return nil
}

type AppConfig struct {
	LogLevel string `protobuf:"bytes,1,opt,name=log_level,json=logLevel,proto3" json:"log_level"`
	LogFile  string `protobuf:"bytes,2,opt,name=log_file,json=logFile,proto3" json:"log_file"`
	// log file age, unit is s.
	LogAge            uint32 `protobuf:"varint,3,opt,name=log_age,json=logAge,proto3" json:"log_age"`
	EnableCrashReport bool   `protobuf:"varint,4,opt,name=enable_crash_report,json=enableCrashReport,proto3" json:"enable_crash_report"`
	CrashReportUrl    string `protobuf:"bytes,5,opt,name=crash_report_url,json=crashReportUrl,proto3" json:"crash_report_url"`
	// pprof config
	Pprof                *PprofConfig `protobuf:"bytes,6,opt,name=pprof" json:"pprof"`
	Version              string       `protobuf:"bytes,100,opt,name=version,proto3" json:"version"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AppConfig) Reset()         { *m = AppConfig{} }
func (m *AppConfig) String() string { return proto.CompactTextString(m) }
func (*AppConfig) ProtoMessage()    {}
func (*AppConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_550915a65c694a12, []int{4}
}
func (m *AppConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppConfig.Unmarshal(m, b)
}
func (m *AppConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppConfig.Marshal(b, m, deterministic)
}
func (dst *AppConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppConfig.Merge(dst, src)
}
func (m *AppConfig) XXX_Size() int {
	return xxx_messageInfo_AppConfig.Size(m)
}
func (m *AppConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AppConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AppConfig proto.InternalMessageInfo

func (m *AppConfig) GetLogLevel() string {
	if m != nil {
		return m.LogLevel
	}
	return ""
}

func (m *AppConfig) GetLogFile() string {
	if m != nil {
		return m.LogFile
	}
	return ""
}

func (m *AppConfig) GetLogAge() uint32 {
	if m != nil {
		return m.LogAge
	}
	return 0
}

func (m *AppConfig) GetEnableCrashReport() bool {
	if m != nil {
		return m.EnableCrashReport
	}
	return false
}

func (m *AppConfig) GetCrashReportUrl() string {
	if m != nil {
		return m.CrashReportUrl
	}
	return ""
}

func (m *AppConfig) GetPprof() *PprofConfig {
	if m != nil {
		return m.Pprof
	}
	return nil
}

func (m *AppConfig) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type PprofConfig struct {
	// pprof listen address, if not configured, the function closes.
	HttpListen string `protobuf:"bytes,1,opt,name=http_listen,json=httpListen,proto3" json:"http_listen"`
	// cpu profiling file, if not configured, the profiling not start
	Cpuprofile string `protobuf:"bytes,2,opt,name=cpuprofile,proto3" json:"cpuprofile"`
	// memory profiling file, if not configured, the profiling not start
	Memprofile           string   `protobuf:"bytes,3,opt,name=memprofile,proto3" json:"memprofile"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PprofConfig) Reset()         { *m = PprofConfig{} }
func (m *PprofConfig) String() string { return proto.CompactTextString(m) }
func (*PprofConfig) ProtoMessage()    {}
func (*PprofConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_550915a65c694a12, []int{5}
}
func (m *PprofConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PprofConfig.Unmarshal(m, b)
}
func (m *PprofConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PprofConfig.Marshal(b, m, deterministic)
}
func (dst *PprofConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PprofConfig.Merge(dst, src)
}
func (m *PprofConfig) XXX_Size() int {
	return xxx_messageInfo_PprofConfig.Size(m)
}
func (m *PprofConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PprofConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PprofConfig proto.InternalMessageInfo

func (m *PprofConfig) GetHttpListen() string {
	if m != nil {
		return m.HttpListen
	}
	return ""
}

func (m *PprofConfig) GetCpuprofile() string {
	if m != nil {
		return m.Cpuprofile
	}
	return ""
}

func (m *PprofConfig) GetMemprofile() string {
	if m != nil {
		return m.Memprofile
	}
	return ""
}

type MiscConfig struct {
	// Default encryption ciper when create new keystore file.
	DefaultKeystoreFileCiper string   `protobuf:"bytes,1,opt,name=default_keystore_file_ciper,json=defaultKeystoreFileCiper,proto3" json:"default_keystore_file_ciper"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *MiscConfig) Reset()         { *m = MiscConfig{} }
func (m *MiscConfig) String() string { return proto.CompactTextString(m) }
func (*MiscConfig) ProtoMessage()    {}
func (*MiscConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_550915a65c694a12, []int{6}
}
func (m *MiscConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MiscConfig.Unmarshal(m, b)
}
func (m *MiscConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MiscConfig.Marshal(b, m, deterministic)
}
func (dst *MiscConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MiscConfig.Merge(dst, src)
}
func (m *MiscConfig) XXX_Size() int {
	return xxx_messageInfo_MiscConfig.Size(m)
}
func (m *MiscConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MiscConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MiscConfig proto.InternalMessageInfo

func (m *MiscConfig) GetDefaultKeystoreFileCiper() string {
	if m != nil {
		return m.DefaultKeystoreFileCiper
	}
	return ""
}

type StatsConfig struct {
	// Enable metrics or not.
	EnableMetrics   bool                          `protobuf:"varint,1,opt,name=enable_metrics,json=enableMetrics,proto3" json:"enable_metrics"`
	ReportingModule []StatsConfig_ReportingModule `protobuf:"varint,2,rep,packed,name=reporting_module,json=reportingModule,enum=nebletpb.StatsConfig_ReportingModule" json:"reporting_module"`
	// Influxdb config.
	Influxdb             *InfluxdbConfig `protobuf:"bytes,11,opt,name=influxdb" json:"influxdb"`
	MetricsTags          []string        `protobuf:"bytes,12,rep,name=metrics_tags,json=metricsTags" json:"metrics_tags"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StatsConfig) Reset()         { *m = StatsConfig{} }
func (m *StatsConfig) String() string { return proto.CompactTextString(m) }
func (*StatsConfig) ProtoMessage()    {}
func (*StatsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_550915a65c694a12, []int{7}
}
func (m *StatsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsConfig.Unmarshal(m, b)
}
func (m *StatsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsConfig.Marshal(b, m, deterministic)
}
func (dst *StatsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsConfig.Merge(dst, src)
}
func (m *StatsConfig) XXX_Size() int {
	return xxx_messageInfo_StatsConfig.Size(m)
}
func (m *StatsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_StatsConfig proto.InternalMessageInfo

func (m *StatsConfig) GetEnableMetrics() bool {
	if m != nil {
		return m.EnableMetrics
	}
	return false
}

func (m *StatsConfig) GetReportingModule() []StatsConfig_ReportingModule {
	if m != nil {
		return m.ReportingModule
	}
	return nil
}

func (m *StatsConfig) GetInfluxdb() *InfluxdbConfig {
	if m != nil {
		return m.Influxdb
	}
	return nil
}

func (m *StatsConfig) GetMetricsTags() []string {
	if m != nil {
		return m.MetricsTags
	}
	return nil
}

type InfluxdbConfig struct {
	// Host.
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host"`
	// Port.
	Port uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port"`
	// Database name.
	Db string `protobuf:"bytes,3,opt,name=db,proto3" json:"db"`
	// Auth user.
	User string `protobuf:"bytes,4,opt,name=user,proto3" json:"user"`
	// Auth password.
	Password             string   `protobuf:"bytes,5,opt,name=password,proto3" json:"password"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfluxdbConfig) Reset()         { *m = InfluxdbConfig{} }
func (m *InfluxdbConfig) String() string { return proto.CompactTextString(m) }
func (*InfluxdbConfig) ProtoMessage()    {}
func (*InfluxdbConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_550915a65c694a12, []int{8}
}
func (m *InfluxdbConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfluxdbConfig.Unmarshal(m, b)
}
func (m *InfluxdbConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfluxdbConfig.Marshal(b, m, deterministic)
}
func (dst *InfluxdbConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfluxdbConfig.Merge(dst, src)
}
func (m *InfluxdbConfig) XXX_Size() int {
	return xxx_messageInfo_InfluxdbConfig.Size(m)
}
func (m *InfluxdbConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_InfluxdbConfig.DiscardUnknown(m)
}

var xxx_messageInfo_InfluxdbConfig proto.InternalMessageInfo

func (m *InfluxdbConfig) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *InfluxdbConfig) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *InfluxdbConfig) GetDb() string {
	if m != nil {
		return m.Db
	}
	return ""
}

func (m *InfluxdbConfig) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *InfluxdbConfig) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type NbreConfig struct {
	// Nbre root dir
	RootDir string `protobuf:"bytes,1,opt,name=root_dir,json=rootDir,proto3" json:"root_dir"`
	// Nbre log path
	LogDir string `protobuf:"bytes,2,opt,name=log_dir,json=logDir,proto3" json:"log_dir"`
	// Nbre data path
	DataDir string `protobuf:"bytes,3,opt,name=data_dir,json=dataDir,proto3" json:"data_dir"`
	// Nbre runtime path
	NbrePath string `protobuf:"bytes,4,opt,name=nbre_path,json=nbrePath,proto3" json:"nbre_path"`
	// Nbre admin address
	AdminAddress string `protobuf:"bytes,5,opt,name=admin_address,json=adminAddress,proto3" json:"admin_address"`
	// Nbre start height
	StartHeight uint64 `protobuf:"varint,6,opt,name=start_height,json=startHeight,proto3" json:"start_height"`
	// Nbre net ipc listen.
	IpcListen string `protobuf:"bytes,7,opt,name=ipc_listen,json=ipcListen,proto3" json:"ipc_listen"`
	// Nbre net ipc port.
	IpcPort              uint32   `protobuf:"varint,8,opt,name=ipc_port,json=ipcPort,proto3" json:"ipc_port"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NbreConfig) Reset()         { *m = NbreConfig{} }
func (m *NbreConfig) String() string { return proto.CompactTextString(m) }
func (*NbreConfig) ProtoMessage()    {}
func (*NbreConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_550915a65c694a12, []int{9}
}
func (m *NbreConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NbreConfig.Unmarshal(m, b)
}
func (m *NbreConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NbreConfig.Marshal(b, m, deterministic)
}
func (dst *NbreConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NbreConfig.Merge(dst, src)
}
func (m *NbreConfig) XXX_Size() int {
	return xxx_messageInfo_NbreConfig.Size(m)
}
func (m *NbreConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_NbreConfig.DiscardUnknown(m)
}

var xxx_messageInfo_NbreConfig proto.InternalMessageInfo

func (m *NbreConfig) GetRootDir() string {
	if m != nil {
		return m.RootDir
	}
	return ""
}

func (m *NbreConfig) GetLogDir() string {
	if m != nil {
		return m.LogDir
	}
	return ""
}

func (m *NbreConfig) GetDataDir() string {
	if m != nil {
		return m.DataDir
	}
	return ""
}

func (m *NbreConfig) GetNbrePath() string {
	if m != nil {
		return m.NbrePath
	}
	return ""
}

func (m *NbreConfig) GetAdminAddress() string {
	if m != nil {
		return m.AdminAddress
	}
	return ""
}

func (m *NbreConfig) GetStartHeight() uint64 {
	if m != nil {
		return m.StartHeight
	}
	return 0
}

func (m *NbreConfig) GetIpcListen() string {
	if m != nil {
		return m.IpcListen
	}
	return ""
}

func (m *NbreConfig) GetIpcPort() uint32 {
	if m != nil {
		return m.IpcPort
	}
	return 0
}

func init() {
	proto.RegisterType((*Config)(nil), "nebletpb.Config")
	proto.RegisterType((*NetworkConfig)(nil), "nebletpb.NetworkConfig")
	proto.RegisterType((*ChainConfig)(nil), "nebletpb.ChainConfig")
	proto.RegisterType((*RPCConfig)(nil), "nebletpb.RPCConfig")
	proto.RegisterType((*AppConfig)(nil), "nebletpb.AppConfig")
	proto.RegisterType((*PprofConfig)(nil), "nebletpb.PprofConfig")
	proto.RegisterType((*MiscConfig)(nil), "nebletpb.MiscConfig")
	proto.RegisterType((*StatsConfig)(nil), "nebletpb.StatsConfig")
	proto.RegisterType((*InfluxdbConfig)(nil), "nebletpb.InfluxdbConfig")
	proto.RegisterType((*NbreConfig)(nil), "nebletpb.NbreConfig")
	proto.RegisterEnum("nebletpb.StatsConfig_ReportingModule", StatsConfig_ReportingModule_name, StatsConfig_ReportingModule_value)
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_config_550915a65c694a12) }

var fileDescriptor_config_550915a65c694a12 = []byte{
	// 1195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x56, 0xcd, 0x6e, 0x1b, 0xb7,
	0x16, 0xbe, 0xb2, 0x65, 0x7b, 0xe6, 0x48, 0x76, 0x1c, 0xc6, 0x71, 0xe8, 0xf8, 0xde, 0xc4, 0x51,
	0x10, 0x40, 0x17, 0x29, 0x5c, 0x34, 0xcd, 0xa6, 0x8b, 0x2e, 0x02, 0x15, 0x45, 0x03, 0xdb, 0x81,
	0x31, 0x6e, 0xd7, 0x03, 0x6a, 0x86, 0x1e, 0x11, 0x19, 0x91, 0x03, 0x92, 0x52, 0xe2, 0x5d, 0x1f,
	0xab, 0x8f, 0xd0, 0x27, 0x68, 0x9f, 0xa3, 0xdb, 0x02, 0x05, 0x8a, 0x73, 0xc8, 0xd1, 0xc8, 0x42,
	0x76, 0x73, 0xbe, 0xef, 0x23, 0x0f, 0x75, 0x7e, 0x05, 0xc3, 0xc2, 0xe8, 0x5b, 0x55, 0x9d, 0x37,
	0xd6, 0x78, 0xc3, 0x12, 0x2d, 0xa7, 0xb5, 0xf4, 0xcd, 0x74, 0xf4, 0xdb, 0x16, 0xec, 0x4e, 0x88,
	0x62, 0xdf, 0xc0, 0x9e, 0x96, 0xfe, 0x93, 0xb1, 0x1f, 0x79, 0xef, 0xac, 0x37, 0x1e, 0xbc, 0x79,
	0x72, 0xde, 0xca, 0xce, 0x3f, 0x04, 0x22, 0x28, 0xb3, 0x56, 0xc7, 0x5e, 0xc3, 0x4e, 0x31, 0x13,
	0x4a, 0xf3, 0x2d, 0x3a, 0xf0, 0xb8, 0x3b, 0x30, 0x41, 0x38, 0xca, 0x83, 0x86, 0xbd, 0x82, 0x6d,
	0xdb, 0x14, 0x7c, 0x9b, 0xa4, 0x8f, 0x3a, 0x69, 0x76, 0x3d, 0x89, 0x42, 0xe4, 0xf1, 0x4e, 0xe7,
	0x85, 0x77, 0xbc, 0xdc, 0xbc, 0xf3, 0x06, 0xe1, 0xf6, 0x4e, 0xd2, 0xb0, 0x31, 0xf4, 0xe7, 0xca,
	0x15, 0x5c, 0x92, 0xf6, 0xa8, 0xd3, 0x5e, 0x29, 0x57, 0x44, 0x29, 0x29, 0xd0, 0xbb, 0x68, 0x1a,
	0x7e, 0xbb, 0xe9, 0xfd, 0x5d, 0xd3, 0xb4, 0xde, 0x45, 0xd3, 0xb0, 0xff, 0x43, 0x5f, 0x4f, 0xad,
	0xe4, 0xbf, 0xf7, 0x36, 0x6f, 0xfc, 0x30, 0xb5, 0xb2, 0xbd, 0x11, 0x25, 0xa3, 0x3f, 0x7a, 0xb0,
	0x7f, 0x2f, 0x2e, 0x8c, 0x41, 0xdf, 0x49, 0x59, 0xf2, 0xde, 0xd9, 0xf6, 0x38, 0xcd, 0xe8, 0x9b,
	0x1d, 0xc3, 0x6e, 0xad, 0x9c, 0x97, 0x18, 0x23, 0x44, 0xa3, 0xc5, 0x9e, 0xc3, 0xa0, 0xb1, 0x6a,
	0x29, 0xbc, 0xcc, 0x3f, 0xca, 0x3b, 0x8a, 0x4a, 0x9a, 0x41, 0x84, 0x2e, 0xe4, 0x1d, 0xfb, 0x1f,
	0x40, 0x0c, 0x73, 0xae, 0x4a, 0xde, 0x3f, 0xeb, 0x8d, 0xf7, 0xb3, 0x34, 0x22, 0xef, 0x4b, 0xf6,
	0x12, 0xf6, 0x9d, 0xb7, 0x52, 0xcc, 0xf3, 0x5a, 0xcd, 0x95, 0x77, 0x7c, 0xe7, 0xac, 0x37, 0xde,
	0xc9, 0x86, 0x01, 0xbc, 0x24, 0x8c, 0xbd, 0x85, 0x63, 0x2b, 0x9d, 0xb4, 0x4b, 0x59, 0xe6, 0xf7,
	0xd5, 0xbb, 0xa4, 0x3e, 0x6a, 0xd9, 0x9b, 0xb5, 0x53, 0xa3, 0xbf, 0xfa, 0x30, 0x58, 0xcb, 0x1f,
	0x3b, 0x81, 0x84, 0x32, 0x88, 0xef, 0xe8, 0xd1, 0x3b, 0xf6, 0xc8, 0x7e, 0x5f, 0x32, 0x0e, 0x7b,
	0x95, 0xd4, 0xd2, 0x29, 0x47, 0x25, 0x90, 0x66, 0xad, 0x89, 0x4c, 0x29, 0xbc, 0x28, 0x95, 0xe5,
	0x83, 0xc0, 0x44, 0x13, 0x23, 0xf2, 0x51, 0xde, 0x21, 0x31, 0x24, 0x22, 0x5a, 0xf8, 0x83, 0x9d,
	0x17, 0xd6, 0xe7, 0x73, 0xa5, 0x25, 0x3f, 0x3a, 0xeb, 0x8d, 0x93, 0x2c, 0x25, 0xe4, 0x4a, 0x69,
	0xc9, 0x9e, 0x42, 0x52, 0x18, 0xa5, 0xa7, 0xc2, 0x49, 0xfe, 0x98, 0x0e, 0xae, 0x6c, 0x76, 0x04,
	0x3b, 0x78, 0xc8, 0xf2, 0x63, 0x22, 0x82, 0xc1, 0x9e, 0x01, 0x34, 0xc2, 0xb9, 0x66, 0x66, 0xf1,
	0xcc, 0x93, 0x18, 0xe1, 0x15, 0xc2, 0xbe, 0x83, 0x13, 0xa9, 0xc5, 0xb4, 0x96, 0xb9, 0x95, 0x73,
	0xe3, 0x65, 0xee, 0x54, 0xa5, 0x73, 0x0a, 0x88, 0xe5, 0x9c, 0xfc, 0x1f, 0x07, 0x41, 0x46, 0xfc,
	0x8d, 0xaa, 0xf4, 0x0d, 0xb1, 0xec, 0x2b, 0x60, 0x5f, 0x38, 0x73, 0x42, 0x2e, 0x0e, 0xed, 0xa6,
	0xfa, 0x14, 0xd2, 0x4a, 0xb8, 0xbc, 0xb1, 0xaa, 0x90, 0xfc, 0x69, 0x78, 0x7b, 0x25, 0xdc, 0x35,
	0xda, 0x2d, 0x49, 0x79, 0xe1, 0xa7, 0x2b, 0x92, 0x72, 0xc1, 0x5e, 0xc3, 0x43, 0x74, 0x20, 0xfc,
	0xc2, 0xca, 0xbc, 0x50, 0xcd, 0x4c, 0x5a, 0xc7, 0xff, 0x4b, 0x85, 0x74, 0xb8, 0x22, 0x26, 0x01,
	0xa7, 0x00, 0x2e, 0x1a, 0x69, 0x73, 0x6d, 0x4a, 0xc9, 0x9f, 0xc5, 0x00, 0x22, 0xf2, 0xc1, 0x94,
	0x92, 0x7d, 0x0d, 0x8f, 0x16, 0xda, 0x2d, 0x9a, 0xc6, 0x58, 0x2f, 0x4b, 0xac, 0xba, 0x4f, 0xc6,
	0x96, 0xfc, 0x39, 0xb9, 0x64, 0x6b, 0xd4, 0x45, 0x60, 0x28, 0x85, 0x77, 0x5a, 0x38, 0x7f, 0xc7,
	0xcf, 0x62, 0x0a, 0x83, 0x89, 0x29, 0x14, 0x45, 0x21, 0x9d, 0xe3, 0x2f, 0x42, 0x0a, 0x83, 0x85,
	0x95, 0xa2, 0x97, 0xf3, 0xbc, 0x11, 0x7e, 0xc6, 0x47, 0xe1, 0x88, 0x5e, 0xce, 0xaf, 0x85, 0x9f,
	0x51, 0x39, 0x2f, 0xb1, 0xfc, 0xa8, 0x17, 0x5e, 0xd2, 0x4f, 0x48, 0xf5, 0x72, 0x7e, 0x49, 0xc0,
	0xe8, 0xcf, 0x1e, 0xa4, 0xab, 0x41, 0x80, 0x62, 0xdb, 0x14, 0xad, 0x38, 0xb4, 0x53, 0x6a, 0x9b,
	0xe2, 0x72, 0xd5, 0x3b, 0x33, 0xef, 0x9b, 0xfc, 0x5e, 0x63, 0x01, 0x42, 0x1b, 0x82, 0xb9, 0x29,
	0x17, 0xb5, 0xe4, 0xdb, 0x9d, 0xe0, 0x8a, 0x10, 0x8c, 0x6b, 0x61, 0xb4, 0x96, 0x85, 0x57, 0x46,
	0xb7, 0x3d, 0xd1, 0xa7, 0x9e, 0x38, 0xec, 0x88, 0xd8, 0x45, 0x9d, 0xbb, 0xb5, 0x46, 0x8b, 0xee,
	0x48, 0x70, 0x0a, 0x29, 0x09, 0x0a, 0x63, 0xb1, 0xb3, 0xd0, 0x59, 0x82, 0xc0, 0xc4, 0x58, 0x37,
	0xfa, 0xa7, 0x07, 0xe9, 0x6a, 0xc8, 0xa0, 0xb4, 0x36, 0x55, 0x5e, 0xcb, 0xa5, 0xac, 0xa9, 0x99,
	0xd2, 0x2c, 0xa9, 0x4d, 0x75, 0x89, 0x36, 0x86, 0x0f, 0xc9, 0x5b, 0x55, 0xcb, 0xb6, 0x9d, 0x6a,
	0x53, 0xfd, 0xa8, 0x6a, 0xc9, 0x9e, 0x00, 0x7e, 0xe6, 0xa2, 0x92, 0x34, 0x2a, 0xf6, 0xb3, 0xdd,
	0xda, 0x54, 0xef, 0x2a, 0xc9, 0xce, 0xe1, 0x51, 0x2c, 0xe2, 0xc2, 0x0a, 0x37, 0xcb, 0xad, 0xc4,
	0x24, 0xd2, 0x6f, 0x49, 0xb2, 0x87, 0x81, 0x9a, 0x20, 0x93, 0x11, 0xc1, 0xc6, 0x70, 0xb8, 0x2e,
	0xcc, 0x17, 0xb6, 0xa6, 0x5f, 0x94, 0x66, 0x07, 0x45, 0x27, 0xfb, 0xc5, 0xd6, 0x38, 0x88, 0x9b,
	0xc6, 0x9a, 0x5b, 0x9a, 0x15, 0xf7, 0x06, 0xf1, 0x35, 0xc2, 0xed, 0x20, 0x26, 0x0d, 0xd6, 0xca,
	0x52, 0x5a, 0xa7, 0x8c, 0xa6, 0xb9, 0x9d, 0x66, 0xad, 0x39, 0xd2, 0x30, 0x58, 0xd3, 0x6f, 0xe6,
	0x2e, 0x84, 0x60, 0x3d, 0x77, 0xcf, 0x00, 0x8a, 0x66, 0x81, 0x27, 0xba, 0x30, 0xac, 0x21, 0xc8,
	0xcf, 0xe5, 0xbc, 0xe5, 0xe3, 0xdc, 0xec, 0x90, 0xd1, 0x05, 0x40, 0x37, 0xfc, 0xd9, 0xf7, 0x70,
	0x5a, 0xca, 0x5b, 0xb1, 0xa8, 0x3d, 0x16, 0xbc, 0xf3, 0xc6, 0x4a, 0x8a, 0x2f, 0x36, 0x93, 0xb4,
	0xd1, 0x3d, 0x8f, 0x92, 0x8b, 0xa8, 0xc0, 0x88, 0x4f, 0x90, 0x1f, 0xfd, 0xba, 0x05, 0x83, 0xb5,
	0xb5, 0xc3, 0x5e, 0xc1, 0x41, 0x8c, 0xf6, 0x5c, 0x7a, 0xab, 0x0a, 0x47, 0x37, 0x24, 0xd9, 0x7e,
	0x40, 0xaf, 0x02, 0xc8, 0xae, 0xe1, 0x30, 0x84, 0x57, 0xe9, 0xaa, 0x2d, 0x42, 0xac, 0xd2, 0x83,
	0x37, 0xaf, 0xbe, 0xb8, 0xce, 0xce, 0xb3, 0x56, 0x1d, 0xea, 0x33, 0x7b, 0x60, 0xef, 0x03, 0xec,
	0x2d, 0x24, 0x4a, 0xdf, 0xd6, 0x8b, 0xcf, 0xe5, 0x94, 0xe6, 0xe9, 0xe0, 0x0d, 0xef, 0x6e, 0x7a,
	0x1f, 0x99, 0x98, 0x92, 0x95, 0x92, 0xbd, 0x80, 0x61, 0x7c, 0x67, 0xee, 0x45, 0xe5, 0xf8, 0x90,
	0x6a, 0x73, 0x10, 0xb1, 0x9f, 0x45, 0xe5, 0x46, 0xcf, 0xe1, 0xc1, 0x86, 0x73, 0x36, 0x84, 0xa4,
	0xbd, 0xf1, 0xf0, 0x3f, 0xa3, 0xcf, 0x70, 0x70, 0xff, 0x7e, 0x5c, 0x73, 0x33, 0xe3, 0x7c, 0x0c,
	0x1e, 0x7d, 0x23, 0x46, 0x75, 0xb7, 0x45, 0xc5, 0x49, 0xdf, 0xec, 0x00, 0xb6, 0xca, 0x69, 0xcc,
	0xd0, 0x56, 0x39, 0x45, 0xcd, 0xc2, 0x49, 0x4b, 0xb5, 0x99, 0x66, 0xf4, 0x8d, 0x53, 0x1d, 0x27,
	0x32, 0x4d, 0xa2, 0x50, 0x86, 0x2b, 0x7b, 0xf4, 0x77, 0x0f, 0xa0, 0xdb, 0xba, 0xd8, 0x1d, 0xd6,
	0x18, 0x9f, 0xe3, 0xe6, 0x08, 0xae, 0xf7, 0xd0, 0xfe, 0x41, 0xd9, 0xb6, 0x3b, 0x90, 0x09, 0x05,
	0x83, 0xdd, 0x81, 0xc4, 0x09, 0x24, 0xb8, 0x76, 0x88, 0xd9, 0xee, 0xd6, 0x10, 0x52, 0xa7, 0x90,
	0xe2, 0x1a, 0x0f, 0xc3, 0x2a, 0x3c, 0x29, 0x41, 0x80, 0xa6, 0xd5, 0x4b, 0xd8, 0x17, 0xe5, 0x5c,
	0xe9, 0x5c, 0x94, 0xa5, 0xc5, 0x39, 0x17, 0xde, 0x36, 0x24, 0xf0, 0x5d, 0xc0, 0x30, 0xba, 0x61,
	0x61, 0xcd, 0xa4, 0xaa, 0x66, 0x9e, 0xfa, 0xa4, 0x9f, 0x0d, 0x08, 0xfb, 0x89, 0x20, 0x1c, 0x64,
	0xaa, 0x1b, 0x64, 0x7b, 0x74, 0x49, 0xaa, 0x56, 0x83, 0xec, 0x04, 0x12, 0xa4, 0x29, 0x72, 0x49,
	0xd8, 0xac, 0xaa, 0x29, 0xae, 0x8d, 0xf5, 0xd3, 0x5d, 0xfa, 0xa7, 0xf6, 0xed, 0xbf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xcb, 0x9f, 0xe8, 0xeb, 0xb9, 0x09, 0x00, 0x00,
}
