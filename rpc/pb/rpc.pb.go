// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rpc.proto

package rpcpb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import pb "github.com/nebulasio/go-nebulas/consensus/pb"
import pb1 "github.com/nebulasio/go-nebulas/neblet/pb"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Request message of Subscribe rpc
type SubscribeRequest struct {
	Topics               []string `protobuf:"bytes,1,rep,name=topics" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{0}
}
func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (dst *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(dst, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

// Request message of Subscribe rpc
type SubscribeResponse struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeResponse) Reset()         { *m = SubscribeResponse{} }
func (m *SubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeResponse) ProtoMessage()    {}
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{1}
}
func (m *SubscribeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeResponse.Unmarshal(m, b)
}
func (m *SubscribeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeResponse.Marshal(b, m, deterministic)
}
func (dst *SubscribeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeResponse.Merge(dst, src)
}
func (m *SubscribeResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeResponse.Size(m)
}
func (m *SubscribeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeResponse proto.InternalMessageInfo

func (m *SubscribeResponse) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *SubscribeResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// Request message of non params.
type NonParamsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NonParamsRequest) Reset()         { *m = NonParamsRequest{} }
func (m *NonParamsRequest) String() string { return proto.CompactTextString(m) }
func (*NonParamsRequest) ProtoMessage()    {}
func (*NonParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{2}
}
func (m *NonParamsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NonParamsRequest.Unmarshal(m, b)
}
func (m *NonParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NonParamsRequest.Marshal(b, m, deterministic)
}
func (dst *NonParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NonParamsRequest.Merge(dst, src)
}
func (m *NonParamsRequest) XXX_Size() int {
	return xxx_messageInfo_NonParamsRequest.Size(m)
}
func (m *NonParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NonParamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NonParamsRequest proto.InternalMessageInfo

// Response message of node info.
type NodeInfoResponse struct {
	// the node ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the block chainID.
	ChainId uint32 `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// coinbase
	Coinbase string `protobuf:"bytes,3,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	// Number of peers currenly connected.
	PeerCount uint32 `protobuf:"varint,4,opt,name=peer_count,json=peerCount,proto3" json:"peer_count,omitempty"`
	// the node synchronized status.
	Synchronized bool `protobuf:"varint,5,opt,name=synchronized,proto3" json:"synchronized,omitempty"`
	// the node route table bucket size.
	BucketSize int32 `protobuf:"varint,6,opt,name=bucket_size,json=bucketSize,proto3" json:"bucket_size,omitempty"`
	// the network protocol version.
	ProtocolVersion      string        `protobuf:"bytes,10,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	RouteTable           []*RouteTable `protobuf:"bytes,11,rep,name=route_table,json=routeTable" json:"route_table,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NodeInfoResponse) Reset()         { *m = NodeInfoResponse{} }
func (m *NodeInfoResponse) String() string { return proto.CompactTextString(m) }
func (*NodeInfoResponse) ProtoMessage()    {}
func (*NodeInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{3}
}
func (m *NodeInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfoResponse.Unmarshal(m, b)
}
func (m *NodeInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfoResponse.Marshal(b, m, deterministic)
}
func (dst *NodeInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfoResponse.Merge(dst, src)
}
func (m *NodeInfoResponse) XXX_Size() int {
	return xxx_messageInfo_NodeInfoResponse.Size(m)
}
func (m *NodeInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfoResponse proto.InternalMessageInfo

func (m *NodeInfoResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NodeInfoResponse) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *NodeInfoResponse) GetCoinbase() string {
	if m != nil {
		return m.Coinbase
	}
	return ""
}

func (m *NodeInfoResponse) GetPeerCount() uint32 {
	if m != nil {
		return m.PeerCount
	}
	return 0
}

func (m *NodeInfoResponse) GetSynchronized() bool {
	if m != nil {
		return m.Synchronized
	}
	return false
}

func (m *NodeInfoResponse) GetBucketSize() int32 {
	if m != nil {
		return m.BucketSize
	}
	return 0
}

func (m *NodeInfoResponse) GetProtocolVersion() string {
	if m != nil {
		return m.ProtocolVersion
	}
	return ""
}

func (m *NodeInfoResponse) GetRouteTable() []*RouteTable {
	if m != nil {
		return m.RouteTable
	}
	return nil
}

type RouteTable struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address              []string `protobuf:"bytes,2,rep,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteTable) Reset()         { *m = RouteTable{} }
func (m *RouteTable) String() string { return proto.CompactTextString(m) }
func (*RouteTable) ProtoMessage()    {}
func (*RouteTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{4}
}
func (m *RouteTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteTable.Unmarshal(m, b)
}
func (m *RouteTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteTable.Marshal(b, m, deterministic)
}
func (dst *RouteTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteTable.Merge(dst, src)
}
func (m *RouteTable) XXX_Size() int {
	return xxx_messageInfo_RouteTable.Size(m)
}
func (m *RouteTable) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteTable.DiscardUnknown(m)
}

var xxx_messageInfo_RouteTable proto.InternalMessageInfo

func (m *RouteTable) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RouteTable) GetAddress() []string {
	if m != nil {
		return m.Address
	}
	return nil
}

// Response message of GetNebState rpc.
type GetNebStateResponse struct {
	// Block chain id
	ChainId uint32 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Current neb tail hash
	Tail string `protobuf:"bytes,2,opt,name=tail,proto3" json:"tail,omitempty"`
	// Current neb lib hash
	Lib string `protobuf:"bytes,3,opt,name=lib,proto3" json:"lib,omitempty"`
	// Current neb tail block height
	Height uint64 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	// The current neb protocol version.
	ProtocolVersion string `protobuf:"bytes,6,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	// The peer sync status.
	Synchronized bool `protobuf:"varint,7,opt,name=synchronized,proto3" json:"synchronized,omitempty"`
	// neb version
	Version              string   `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNebStateResponse) Reset()         { *m = GetNebStateResponse{} }
func (m *GetNebStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetNebStateResponse) ProtoMessage()    {}
func (*GetNebStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{5}
}
func (m *GetNebStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNebStateResponse.Unmarshal(m, b)
}
func (m *GetNebStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNebStateResponse.Marshal(b, m, deterministic)
}
func (dst *GetNebStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNebStateResponse.Merge(dst, src)
}
func (m *GetNebStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetNebStateResponse.Size(m)
}
func (m *GetNebStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNebStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNebStateResponse proto.InternalMessageInfo

func (m *GetNebStateResponse) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *GetNebStateResponse) GetTail() string {
	if m != nil {
		return m.Tail
	}
	return ""
}

func (m *GetNebStateResponse) GetLib() string {
	if m != nil {
		return m.Lib
	}
	return ""
}

func (m *GetNebStateResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *GetNebStateResponse) GetProtocolVersion() string {
	if m != nil {
		return m.ProtocolVersion
	}
	return ""
}

func (m *GetNebStateResponse) GetSynchronized() bool {
	if m != nil {
		return m.Synchronized
	}
	return false
}

func (m *GetNebStateResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Response message of Accounts rpc.
type AccountsResponse struct {
	// Account list
	Addresses            []string `protobuf:"bytes,1,rep,name=addresses" json:"addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountsResponse) Reset()         { *m = AccountsResponse{} }
func (m *AccountsResponse) String() string { return proto.CompactTextString(m) }
func (*AccountsResponse) ProtoMessage()    {}
func (*AccountsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{6}
}
func (m *AccountsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountsResponse.Unmarshal(m, b)
}
func (m *AccountsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountsResponse.Marshal(b, m, deterministic)
}
func (dst *AccountsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountsResponse.Merge(dst, src)
}
func (m *AccountsResponse) XXX_Size() int {
	return xxx_messageInfo_AccountsResponse.Size(m)
}
func (m *AccountsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AccountsResponse proto.InternalMessageInfo

func (m *AccountsResponse) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

// Request message of GetAccountState rpc.
type GetAccountStateRequest struct {
	// Hex string of the account addresss.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// block account state with height. If not specified, use 0 as tail height.
	Height               uint64   `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountStateRequest) Reset()         { *m = GetAccountStateRequest{} }
func (m *GetAccountStateRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountStateRequest) ProtoMessage()    {}
func (*GetAccountStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{7}
}
func (m *GetAccountStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountStateRequest.Unmarshal(m, b)
}
func (m *GetAccountStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountStateRequest.Marshal(b, m, deterministic)
}
func (dst *GetAccountStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountStateRequest.Merge(dst, src)
}
func (m *GetAccountStateRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountStateRequest.Size(m)
}
func (m *GetAccountStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountStateRequest proto.InternalMessageInfo

func (m *GetAccountStateRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetAccountStateRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

// Response message of GetAccountState rpc.
type GetAccountStateResponse struct {
	// Current balance in unit of 1/(10^18) nas.
	Balance string `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	// Current transaction count.
	Nonce uint64 `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Account type
	Type uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	// Block height
	Height uint64 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	// Current sender pending tx count
	Pending              uint64   `protobuf:"varint,5,opt,name=pending,proto3" json:"pending,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountStateResponse) Reset()         { *m = GetAccountStateResponse{} }
func (m *GetAccountStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetAccountStateResponse) ProtoMessage()    {}
func (*GetAccountStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{8}
}
func (m *GetAccountStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountStateResponse.Unmarshal(m, b)
}
func (m *GetAccountStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountStateResponse.Marshal(b, m, deterministic)
}
func (dst *GetAccountStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountStateResponse.Merge(dst, src)
}
func (m *GetAccountStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetAccountStateResponse.Size(m)
}
func (m *GetAccountStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountStateResponse proto.InternalMessageInfo

func (m *GetAccountStateResponse) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func (m *GetAccountStateResponse) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *GetAccountStateResponse) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GetAccountStateResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *GetAccountStateResponse) GetPending() uint64 {
	if m != nil {
		return m.Pending
	}
	return 0
}

// Response message of Call rpc.
type CallResponse struct {
	// result of smart contract method call.
	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// execute error
	ExecuteErr string `protobuf:"bytes,2,opt,name=execute_err,json=executeErr,proto3" json:"execute_err,omitempty"`
	// estimate gas used
	EstimateGas          string   `protobuf:"bytes,3,opt,name=estimate_gas,json=estimateGas,proto3" json:"estimate_gas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallResponse) Reset()         { *m = CallResponse{} }
func (m *CallResponse) String() string { return proto.CompactTextString(m) }
func (*CallResponse) ProtoMessage()    {}
func (*CallResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{9}
}
func (m *CallResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallResponse.Unmarshal(m, b)
}
func (m *CallResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallResponse.Marshal(b, m, deterministic)
}
func (dst *CallResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallResponse.Merge(dst, src)
}
func (m *CallResponse) XXX_Size() int {
	return xxx_messageInfo_CallResponse.Size(m)
}
func (m *CallResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CallResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CallResponse proto.InternalMessageInfo

func (m *CallResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *CallResponse) GetExecuteErr() string {
	if m != nil {
		return m.ExecuteErr
	}
	return ""
}

func (m *CallResponse) GetEstimateGas() string {
	if m != nil {
		return m.EstimateGas
	}
	return ""
}

// ByBlockHeightRequest message
type ByBlockHeightRequest struct {
	Height               uint64   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByBlockHeightRequest) Reset()         { *m = ByBlockHeightRequest{} }
func (m *ByBlockHeightRequest) String() string { return proto.CompactTextString(m) }
func (*ByBlockHeightRequest) ProtoMessage()    {}
func (*ByBlockHeightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{10}
}
func (m *ByBlockHeightRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByBlockHeightRequest.Unmarshal(m, b)
}
func (m *ByBlockHeightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByBlockHeightRequest.Marshal(b, m, deterministic)
}
func (dst *ByBlockHeightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByBlockHeightRequest.Merge(dst, src)
}
func (m *ByBlockHeightRequest) XXX_Size() int {
	return xxx_messageInfo_ByBlockHeightRequest.Size(m)
}
func (m *ByBlockHeightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByBlockHeightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByBlockHeightRequest proto.InternalMessageInfo

func (m *ByBlockHeightRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

// Response message of GetDynastyRequest rpc
type GetDynastyResponse struct {
	Miners               []string `protobuf:"bytes,1,rep,name=miners" json:"miners,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDynastyResponse) Reset()         { *m = GetDynastyResponse{} }
func (m *GetDynastyResponse) String() string { return proto.CompactTextString(m) }
func (*GetDynastyResponse) ProtoMessage()    {}
func (*GetDynastyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{11}
}
func (m *GetDynastyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDynastyResponse.Unmarshal(m, b)
}
func (m *GetDynastyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDynastyResponse.Marshal(b, m, deterministic)
}
func (dst *GetDynastyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDynastyResponse.Merge(dst, src)
}
func (m *GetDynastyResponse) XXX_Size() int {
	return xxx_messageInfo_GetDynastyResponse.Size(m)
}
func (m *GetDynastyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDynastyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDynastyResponse proto.InternalMessageInfo

func (m *GetDynastyResponse) GetMiners() []string {
	if m != nil {
		return m.Miners
	}
	return nil
}

// Request message of SendTransaction rpc.
type TransactionRequest struct {
	// Hex string of the sender account addresss.
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// Hex string of the receiver account addresss.
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	// Amount of value sending with this transaction.
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// Transaction nonce.
	Nonce uint64 `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// gasPrice sending with this transaction.
	GasPrice string `protobuf:"bytes,5,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	// gasLimit sending with this transaction.
	GasLimit string `protobuf:"bytes,6,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	// contract sending with this transaction
	Contract *ContractRequest `protobuf:"bytes,7,opt,name=contract" json:"contract,omitempty"`
	// binary data for transaction
	Binary []byte `protobuf:"bytes,10,opt,name=binary,proto3" json:"binary,omitempty"`
	// protocol data for transaction
	Protocol []byte `protobuf:"bytes,11,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// transaction payload type, enum:binary, deploy, call, protocol
	Type                 string   `protobuf:"bytes,20,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionRequest) Reset()         { *m = TransactionRequest{} }
func (m *TransactionRequest) String() string { return proto.CompactTextString(m) }
func (*TransactionRequest) ProtoMessage()    {}
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{12}
}
func (m *TransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionRequest.Unmarshal(m, b)
}
func (m *TransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionRequest.Marshal(b, m, deterministic)
}
func (dst *TransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionRequest.Merge(dst, src)
}
func (m *TransactionRequest) XXX_Size() int {
	return xxx_messageInfo_TransactionRequest.Size(m)
}
func (m *TransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionRequest proto.InternalMessageInfo

func (m *TransactionRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *TransactionRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *TransactionRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TransactionRequest) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TransactionRequest) GetGasPrice() string {
	if m != nil {
		return m.GasPrice
	}
	return ""
}

func (m *TransactionRequest) GetGasLimit() string {
	if m != nil {
		return m.GasLimit
	}
	return ""
}

func (m *TransactionRequest) GetContract() *ContractRequest {
	if m != nil {
		return m.Contract
	}
	return nil
}

func (m *TransactionRequest) GetBinary() []byte {
	if m != nil {
		return m.Binary
	}
	return nil
}

func (m *TransactionRequest) GetProtocol() []byte {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func (m *TransactionRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type ContractRequest struct {
	// contract source code.
	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// contract source type, support javascript and typescript
	SourceType string `protobuf:"bytes,2,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	// call contract function name
	Function string `protobuf:"bytes,3,opt,name=function,proto3" json:"function,omitempty"`
	// the params of contract.
	Args                 string   `protobuf:"bytes,4,opt,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContractRequest) Reset()         { *m = ContractRequest{} }
func (m *ContractRequest) String() string { return proto.CompactTextString(m) }
func (*ContractRequest) ProtoMessage()    {}
func (*ContractRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{13}
}
func (m *ContractRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContractRequest.Unmarshal(m, b)
}
func (m *ContractRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContractRequest.Marshal(b, m, deterministic)
}
func (dst *ContractRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContractRequest.Merge(dst, src)
}
func (m *ContractRequest) XXX_Size() int {
	return xxx_messageInfo_ContractRequest.Size(m)
}
func (m *ContractRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContractRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContractRequest proto.InternalMessageInfo

func (m *ContractRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *ContractRequest) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *ContractRequest) GetFunction() string {
	if m != nil {
		return m.Function
	}
	return ""
}

func (m *ContractRequest) GetArgs() string {
	if m != nil {
		return m.Args
	}
	return ""
}

// Request message of SendRawTransactionRequest rpc.
type SendRawTransactionRequest struct {
	// Signed data of transaction
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendRawTransactionRequest) Reset()         { *m = SendRawTransactionRequest{} }
func (m *SendRawTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SendRawTransactionRequest) ProtoMessage()    {}
func (*SendRawTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{14}
}
func (m *SendRawTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendRawTransactionRequest.Unmarshal(m, b)
}
func (m *SendRawTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendRawTransactionRequest.Marshal(b, m, deterministic)
}
func (dst *SendRawTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendRawTransactionRequest.Merge(dst, src)
}
func (m *SendRawTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SendRawTransactionRequest.Size(m)
}
func (m *SendRawTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendRawTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendRawTransactionRequest proto.InternalMessageInfo

func (m *SendRawTransactionRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Response message of SendTransaction rpc.
type SendTransactionResponse struct {
	// Hex string of transaction hash.
	Txhash string `protobuf:"bytes,1,opt,name=txhash,proto3" json:"txhash,omitempty"`
	// Hex string of contract address if transaction is deploy type
	ContractAddress      string   `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionResponse) Reset()         { *m = SendTransactionResponse{} }
func (m *SendTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*SendTransactionResponse) ProtoMessage()    {}
func (*SendTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{15}
}
func (m *SendTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionResponse.Unmarshal(m, b)
}
func (m *SendTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionResponse.Marshal(b, m, deterministic)
}
func (dst *SendTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionResponse.Merge(dst, src)
}
func (m *SendTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_SendTransactionResponse.Size(m)
}
func (m *SendTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionResponse proto.InternalMessageInfo

func (m *SendTransactionResponse) GetTxhash() string {
	if m != nil {
		return m.Txhash
	}
	return ""
}

func (m *SendTransactionResponse) GetContractAddress() string {
	if m != nil {
		return m.ContractAddress
	}
	return ""
}

// Request message of GetBlockByHash rpc.
type GetBlockByHashRequest struct {
	// Hex string of block hash.
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// If true it returns the full transaction objects, if false only the hashes of the transactions.
	FullFillTransaction  bool     `protobuf:"varint,2,opt,name=full_fill_transaction,json=fullFillTransaction,proto3" json:"full_fill_transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockByHashRequest) Reset()         { *m = GetBlockByHashRequest{} }
func (m *GetBlockByHashRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockByHashRequest) ProtoMessage()    {}
func (*GetBlockByHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{16}
}
func (m *GetBlockByHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockByHashRequest.Unmarshal(m, b)
}
func (m *GetBlockByHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockByHashRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockByHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockByHashRequest.Merge(dst, src)
}
func (m *GetBlockByHashRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockByHashRequest.Size(m)
}
func (m *GetBlockByHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockByHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockByHashRequest proto.InternalMessageInfo

func (m *GetBlockByHashRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *GetBlockByHashRequest) GetFullFillTransaction() bool {
	if m != nil {
		return m.FullFillTransaction
	}
	return false
}

// Request message of GetBlockByHeight rpc.
type GetBlockByHeightRequest struct {
	// block height.
	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	// If true it returns the full transaction objects, if false only the hashes of the transactions.
	FullFillTransaction  bool     `protobuf:"varint,2,opt,name=full_fill_transaction,json=fullFillTransaction,proto3" json:"full_fill_transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockByHeightRequest) Reset()         { *m = GetBlockByHeightRequest{} }
func (m *GetBlockByHeightRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockByHeightRequest) ProtoMessage()    {}
func (*GetBlockByHeightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{17}
}
func (m *GetBlockByHeightRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockByHeightRequest.Unmarshal(m, b)
}
func (m *GetBlockByHeightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockByHeightRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockByHeightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockByHeightRequest.Merge(dst, src)
}
func (m *GetBlockByHeightRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockByHeightRequest.Size(m)
}
func (m *GetBlockByHeightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockByHeightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockByHeightRequest proto.InternalMessageInfo

func (m *GetBlockByHeightRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *GetBlockByHeightRequest) GetFullFillTransaction() bool {
	if m != nil {
		return m.FullFillTransaction
	}
	return false
}

// Request message of GetTransactionByHash rpc.
type GetTransactionByHashRequest struct {
	// Hex string of transaction hash.
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionByHashRequest) Reset()         { *m = GetTransactionByHashRequest{} }
func (m *GetTransactionByHashRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionByHashRequest) ProtoMessage()    {}
func (*GetTransactionByHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{18}
}
func (m *GetTransactionByHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionByHashRequest.Unmarshal(m, b)
}
func (m *GetTransactionByHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionByHashRequest.Marshal(b, m, deterministic)
}
func (dst *GetTransactionByHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionByHashRequest.Merge(dst, src)
}
func (m *GetTransactionByHashRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionByHashRequest.Size(m)
}
func (m *GetTransactionByHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionByHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionByHashRequest proto.InternalMessageInfo

func (m *GetTransactionByHashRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// Request message of GetTransactionByContract rpc.
type GetTransactionByContractRequest struct {
	// string of contract address.
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionByContractRequest) Reset()         { *m = GetTransactionByContractRequest{} }
func (m *GetTransactionByContractRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionByContractRequest) ProtoMessage()    {}
func (*GetTransactionByContractRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{19}
}
func (m *GetTransactionByContractRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionByContractRequest.Unmarshal(m, b)
}
func (m *GetTransactionByContractRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionByContractRequest.Marshal(b, m, deterministic)
}
func (dst *GetTransactionByContractRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionByContractRequest.Merge(dst, src)
}
func (m *GetTransactionByContractRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionByContractRequest.Size(m)
}
func (m *GetTransactionByContractRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionByContractRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionByContractRequest proto.InternalMessageInfo

func (m *GetTransactionByContractRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// Response message of Block.
type BlockResponse struct {
	// Hex string of block hash.
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// Hex string of block parent hash.
	ParentHash string `protobuf:"bytes,2,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	// block height
	Height uint64 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	// block nonce
	Nonce uint64 `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Hex string of coinbase address.
	Coinbase string `protobuf:"bytes,5,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	// block timestamp.
	Timestamp int64 `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// block chain id
	ChainId uint32 `protobuf:"varint,7,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Hex string of state root.
	StateRoot string `protobuf:"bytes,8,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`
	// Hex string of txs root.
	TxsRoot string `protobuf:"bytes,9,opt,name=txs_root,json=txsRoot,proto3" json:"txs_root,omitempty"`
	// Hex string of event root.
	EventsRoot string `protobuf:"bytes,10,opt,name=events_root,json=eventsRoot,proto3" json:"events_root,omitempty"`
	// Hex string of consensus root.
	ConsensusRoot *pb.ConsensusRoot `protobuf:"bytes,11,opt,name=consensus_root,json=consensusRoot" json:"consensus_root,omitempty"`
	// Miner
	Miner string `protobuf:"bytes,12,opt,name=miner,proto3" json:"miner,omitempty"`
	// Random seed
	RandomSeed string `protobuf:"bytes,13,opt,name=randomSeed,proto3" json:"randomSeed,omitempty"`
	// Random proof
	RandomProof string `protobuf:"bytes,14,opt,name=randomProof,proto3" json:"randomProof,omitempty"`
	// is finaliy
	IsFinality bool `protobuf:"varint,15,opt,name=is_finality,json=isFinality,proto3" json:"is_finality,omitempty"`
	// transaction slice
	Transactions         []*TransactionResponse `protobuf:"bytes,100,rep,name=transactions" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *BlockResponse) Reset()         { *m = BlockResponse{} }
func (m *BlockResponse) String() string { return proto.CompactTextString(m) }
func (*BlockResponse) ProtoMessage()    {}
func (*BlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{20}
}
func (m *BlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockResponse.Unmarshal(m, b)
}
func (m *BlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockResponse.Marshal(b, m, deterministic)
}
func (dst *BlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockResponse.Merge(dst, src)
}
func (m *BlockResponse) XXX_Size() int {
	return xxx_messageInfo_BlockResponse.Size(m)
}
func (m *BlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockResponse proto.InternalMessageInfo

func (m *BlockResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *BlockResponse) GetParentHash() string {
	if m != nil {
		return m.ParentHash
	}
	return ""
}

func (m *BlockResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockResponse) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *BlockResponse) GetCoinbase() string {
	if m != nil {
		return m.Coinbase
	}
	return ""
}

func (m *BlockResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BlockResponse) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *BlockResponse) GetStateRoot() string {
	if m != nil {
		return m.StateRoot
	}
	return ""
}

func (m *BlockResponse) GetTxsRoot() string {
	if m != nil {
		return m.TxsRoot
	}
	return ""
}

func (m *BlockResponse) GetEventsRoot() string {
	if m != nil {
		return m.EventsRoot
	}
	return ""
}

func (m *BlockResponse) GetConsensusRoot() *pb.ConsensusRoot {
	if m != nil {
		return m.ConsensusRoot
	}
	return nil
}

func (m *BlockResponse) GetMiner() string {
	if m != nil {
		return m.Miner
	}
	return ""
}

func (m *BlockResponse) GetRandomSeed() string {
	if m != nil {
		return m.RandomSeed
	}
	return ""
}

func (m *BlockResponse) GetRandomProof() string {
	if m != nil {
		return m.RandomProof
	}
	return ""
}

func (m *BlockResponse) GetIsFinality() bool {
	if m != nil {
		return m.IsFinality
	}
	return false
}

func (m *BlockResponse) GetTransactions() []*TransactionResponse {
	if m != nil {
		return m.Transactions
	}
	return nil
}

// Response message of TransactionReceipt.
type TransactionResponse struct {
	// Hex string of tx hash.
	Hash    string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	ChainId uint32 `protobuf:"varint,2,opt,name=chainId,proto3" json:"chainId,omitempty"`
	// Hex string of the sender account addresss.
	From string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	// Hex string of the receiver account addresss.
	To    string `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Value string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Transaction nonce.
	Nonce           uint64 `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Timestamp       int64  `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Type            string `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	Data            []byte `protobuf:"bytes,9,opt,name=data,proto3" json:"data,omitempty"`
	GasPrice        string `protobuf:"bytes,10,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	GasLimit        string `protobuf:"bytes,11,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	ContractAddress string `protobuf:"bytes,12,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// transaction status 0 failed, 1 success, 2 pending
	Status int32 `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`
	// transaction gas used
	GasUsed string `protobuf:"bytes,14,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	// contract execute error
	ExecuteError string `protobuf:"bytes,15,opt,name=execute_error,json=executeError,proto3" json:"execute_error,omitempty"`
	// contract execute result
	ExecuteResult string `protobuf:"bytes,16,opt,name=execute_result,json=executeResult,proto3" json:"execute_result,omitempty"`
	// transaction's block height
	BlockHeight          uint64   `protobuf:"varint,17,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionResponse) Reset()         { *m = TransactionResponse{} }
func (m *TransactionResponse) String() string { return proto.CompactTextString(m) }
func (*TransactionResponse) ProtoMessage()    {}
func (*TransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{21}
}
func (m *TransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionResponse.Unmarshal(m, b)
}
func (m *TransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionResponse.Marshal(b, m, deterministic)
}
func (dst *TransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionResponse.Merge(dst, src)
}
func (m *TransactionResponse) XXX_Size() int {
	return xxx_messageInfo_TransactionResponse.Size(m)
}
func (m *TransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionResponse proto.InternalMessageInfo

func (m *TransactionResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *TransactionResponse) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *TransactionResponse) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *TransactionResponse) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *TransactionResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TransactionResponse) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TransactionResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TransactionResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TransactionResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TransactionResponse) GetGasPrice() string {
	if m != nil {
		return m.GasPrice
	}
	return ""
}

func (m *TransactionResponse) GetGasLimit() string {
	if m != nil {
		return m.GasLimit
	}
	return ""
}

func (m *TransactionResponse) GetContractAddress() string {
	if m != nil {
		return m.ContractAddress
	}
	return ""
}

func (m *TransactionResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *TransactionResponse) GetGasUsed() string {
	if m != nil {
		return m.GasUsed
	}
	return ""
}

func (m *TransactionResponse) GetExecuteError() string {
	if m != nil {
		return m.ExecuteError
	}
	return ""
}

func (m *TransactionResponse) GetExecuteResult() string {
	if m != nil {
		return m.ExecuteResult
	}
	return ""
}

func (m *TransactionResponse) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

type NewAccountRequest struct {
	Passphrase           string   `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewAccountRequest) Reset()         { *m = NewAccountRequest{} }
func (m *NewAccountRequest) String() string { return proto.CompactTextString(m) }
func (*NewAccountRequest) ProtoMessage()    {}
func (*NewAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{22}
}
func (m *NewAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAccountRequest.Unmarshal(m, b)
}
func (m *NewAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAccountRequest.Marshal(b, m, deterministic)
}
func (dst *NewAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAccountRequest.Merge(dst, src)
}
func (m *NewAccountRequest) XXX_Size() int {
	return xxx_messageInfo_NewAccountRequest.Size(m)
}
func (m *NewAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewAccountRequest proto.InternalMessageInfo

func (m *NewAccountRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type NewAccountResponse struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewAccountResponse) Reset()         { *m = NewAccountResponse{} }
func (m *NewAccountResponse) String() string { return proto.CompactTextString(m) }
func (*NewAccountResponse) ProtoMessage()    {}
func (*NewAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{23}
}
func (m *NewAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAccountResponse.Unmarshal(m, b)
}
func (m *NewAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAccountResponse.Marshal(b, m, deterministic)
}
func (dst *NewAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAccountResponse.Merge(dst, src)
}
func (m *NewAccountResponse) XXX_Size() int {
	return xxx_messageInfo_NewAccountResponse.Size(m)
}
func (m *NewAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewAccountResponse proto.InternalMessageInfo

func (m *NewAccountResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type UnlockAccountRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Passphrase           string   `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	Duration             uint64   `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlockAccountRequest) Reset()         { *m = UnlockAccountRequest{} }
func (m *UnlockAccountRequest) String() string { return proto.CompactTextString(m) }
func (*UnlockAccountRequest) ProtoMessage()    {}
func (*UnlockAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{24}
}
func (m *UnlockAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockAccountRequest.Unmarshal(m, b)
}
func (m *UnlockAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockAccountRequest.Marshal(b, m, deterministic)
}
func (dst *UnlockAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockAccountRequest.Merge(dst, src)
}
func (m *UnlockAccountRequest) XXX_Size() int {
	return xxx_messageInfo_UnlockAccountRequest.Size(m)
}
func (m *UnlockAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockAccountRequest proto.InternalMessageInfo

func (m *UnlockAccountRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *UnlockAccountRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

func (m *UnlockAccountRequest) GetDuration() uint64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

type UnlockAccountResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlockAccountResponse) Reset()         { *m = UnlockAccountResponse{} }
func (m *UnlockAccountResponse) String() string { return proto.CompactTextString(m) }
func (*UnlockAccountResponse) ProtoMessage()    {}
func (*UnlockAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{25}
}
func (m *UnlockAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockAccountResponse.Unmarshal(m, b)
}
func (m *UnlockAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockAccountResponse.Marshal(b, m, deterministic)
}
func (dst *UnlockAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockAccountResponse.Merge(dst, src)
}
func (m *UnlockAccountResponse) XXX_Size() int {
	return xxx_messageInfo_UnlockAccountResponse.Size(m)
}
func (m *UnlockAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockAccountResponse proto.InternalMessageInfo

func (m *UnlockAccountResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type LockAccountRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockAccountRequest) Reset()         { *m = LockAccountRequest{} }
func (m *LockAccountRequest) String() string { return proto.CompactTextString(m) }
func (*LockAccountRequest) ProtoMessage()    {}
func (*LockAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{26}
}
func (m *LockAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockAccountRequest.Unmarshal(m, b)
}
func (m *LockAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockAccountRequest.Marshal(b, m, deterministic)
}
func (dst *LockAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockAccountRequest.Merge(dst, src)
}
func (m *LockAccountRequest) XXX_Size() int {
	return xxx_messageInfo_LockAccountRequest.Size(m)
}
func (m *LockAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LockAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LockAccountRequest proto.InternalMessageInfo

func (m *LockAccountRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type LockAccountResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockAccountResponse) Reset()         { *m = LockAccountResponse{} }
func (m *LockAccountResponse) String() string { return proto.CompactTextString(m) }
func (*LockAccountResponse) ProtoMessage()    {}
func (*LockAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{27}
}
func (m *LockAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockAccountResponse.Unmarshal(m, b)
}
func (m *LockAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockAccountResponse.Marshal(b, m, deterministic)
}
func (dst *LockAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockAccountResponse.Merge(dst, src)
}
func (m *LockAccountResponse) XXX_Size() int {
	return xxx_messageInfo_LockAccountResponse.Size(m)
}
func (m *LockAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LockAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LockAccountResponse proto.InternalMessageInfo

func (m *LockAccountResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type SignHashRequest struct {
	// sign address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// sign msg
	Hash []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	// sign algorithm
	Alg                  uint32   `protobuf:"varint,3,opt,name=alg,proto3" json:"alg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignHashRequest) Reset()         { *m = SignHashRequest{} }
func (m *SignHashRequest) String() string { return proto.CompactTextString(m) }
func (*SignHashRequest) ProtoMessage()    {}
func (*SignHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{28}
}
func (m *SignHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignHashRequest.Unmarshal(m, b)
}
func (m *SignHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignHashRequest.Marshal(b, m, deterministic)
}
func (dst *SignHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignHashRequest.Merge(dst, src)
}
func (m *SignHashRequest) XXX_Size() int {
	return xxx_messageInfo_SignHashRequest.Size(m)
}
func (m *SignHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignHashRequest proto.InternalMessageInfo

func (m *SignHashRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *SignHashRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *SignHashRequest) GetAlg() uint32 {
	if m != nil {
		return m.Alg
	}
	return 0
}

type SignHashResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignHashResponse) Reset()         { *m = SignHashResponse{} }
func (m *SignHashResponse) String() string { return proto.CompactTextString(m) }
func (*SignHashResponse) ProtoMessage()    {}
func (*SignHashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{29}
}
func (m *SignHashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignHashResponse.Unmarshal(m, b)
}
func (m *SignHashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignHashResponse.Marshal(b, m, deterministic)
}
func (dst *SignHashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignHashResponse.Merge(dst, src)
}
func (m *SignHashResponse) XXX_Size() int {
	return xxx_messageInfo_SignHashResponse.Size(m)
}
func (m *SignHashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignHashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignHashResponse proto.InternalMessageInfo

func (m *SignHashResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type GenerateRandomSeedRequest struct {
	// miner address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// parent seed of new block
	ParentSeed []byte `protobuf:"bytes,2,opt,name=parent_seed,json=parentSeed,proto3" json:"parent_seed,omitempty"`
	//  hash of new block's ancestor
	AncestorHash         []byte   `protobuf:"bytes,3,opt,name=ancestor_hash,json=ancestorHash,proto3" json:"ancestor_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateRandomSeedRequest) Reset()         { *m = GenerateRandomSeedRequest{} }
func (m *GenerateRandomSeedRequest) String() string { return proto.CompactTextString(m) }
func (*GenerateRandomSeedRequest) ProtoMessage()    {}
func (*GenerateRandomSeedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{30}
}
func (m *GenerateRandomSeedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateRandomSeedRequest.Unmarshal(m, b)
}
func (m *GenerateRandomSeedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateRandomSeedRequest.Marshal(b, m, deterministic)
}
func (dst *GenerateRandomSeedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateRandomSeedRequest.Merge(dst, src)
}
func (m *GenerateRandomSeedRequest) XXX_Size() int {
	return xxx_messageInfo_GenerateRandomSeedRequest.Size(m)
}
func (m *GenerateRandomSeedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateRandomSeedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateRandomSeedRequest proto.InternalMessageInfo

func (m *GenerateRandomSeedRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GenerateRandomSeedRequest) GetParentSeed() []byte {
	if m != nil {
		return m.ParentSeed
	}
	return nil
}

func (m *GenerateRandomSeedRequest) GetAncestorHash() []byte {
	if m != nil {
		return m.AncestorHash
	}
	return nil
}

type GenerateRandomSeedResponse struct {
	VrfSeed              []byte   `protobuf:"bytes,1,opt,name=vrf_seed,json=vrfSeed,proto3" json:"vrf_seed,omitempty"`
	VrfProof             []byte   `protobuf:"bytes,2,opt,name=vrf_proof,json=vrfProof,proto3" json:"vrf_proof,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateRandomSeedResponse) Reset()         { *m = GenerateRandomSeedResponse{} }
func (m *GenerateRandomSeedResponse) String() string { return proto.CompactTextString(m) }
func (*GenerateRandomSeedResponse) ProtoMessage()    {}
func (*GenerateRandomSeedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{31}
}
func (m *GenerateRandomSeedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateRandomSeedResponse.Unmarshal(m, b)
}
func (m *GenerateRandomSeedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateRandomSeedResponse.Marshal(b, m, deterministic)
}
func (dst *GenerateRandomSeedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateRandomSeedResponse.Merge(dst, src)
}
func (m *GenerateRandomSeedResponse) XXX_Size() int {
	return xxx_messageInfo_GenerateRandomSeedResponse.Size(m)
}
func (m *GenerateRandomSeedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateRandomSeedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateRandomSeedResponse proto.InternalMessageInfo

func (m *GenerateRandomSeedResponse) GetVrfSeed() []byte {
	if m != nil {
		return m.VrfSeed
	}
	return nil
}

func (m *GenerateRandomSeedResponse) GetVrfProof() []byte {
	if m != nil {
		return m.VrfProof
	}
	return nil
}

type SignTransactionPassphraseRequest struct {
	// transaction struct
	Transaction *TransactionRequest `protobuf:"bytes,1,opt,name=transaction" json:"transaction,omitempty"`
	// from account passphrase
	Passphrase           string   `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignTransactionPassphraseRequest) Reset()         { *m = SignTransactionPassphraseRequest{} }
func (m *SignTransactionPassphraseRequest) String() string { return proto.CompactTextString(m) }
func (*SignTransactionPassphraseRequest) ProtoMessage()    {}
func (*SignTransactionPassphraseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{32}
}
func (m *SignTransactionPassphraseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTransactionPassphraseRequest.Unmarshal(m, b)
}
func (m *SignTransactionPassphraseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTransactionPassphraseRequest.Marshal(b, m, deterministic)
}
func (dst *SignTransactionPassphraseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTransactionPassphraseRequest.Merge(dst, src)
}
func (m *SignTransactionPassphraseRequest) XXX_Size() int {
	return xxx_messageInfo_SignTransactionPassphraseRequest.Size(m)
}
func (m *SignTransactionPassphraseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTransactionPassphraseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignTransactionPassphraseRequest proto.InternalMessageInfo

func (m *SignTransactionPassphraseRequest) GetTransaction() *TransactionRequest {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *SignTransactionPassphraseRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type SignTransactionPassphraseResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignTransactionPassphraseResponse) Reset()         { *m = SignTransactionPassphraseResponse{} }
func (m *SignTransactionPassphraseResponse) String() string { return proto.CompactTextString(m) }
func (*SignTransactionPassphraseResponse) ProtoMessage()    {}
func (*SignTransactionPassphraseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{33}
}
func (m *SignTransactionPassphraseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTransactionPassphraseResponse.Unmarshal(m, b)
}
func (m *SignTransactionPassphraseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTransactionPassphraseResponse.Marshal(b, m, deterministic)
}
func (dst *SignTransactionPassphraseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTransactionPassphraseResponse.Merge(dst, src)
}
func (m *SignTransactionPassphraseResponse) XXX_Size() int {
	return xxx_messageInfo_SignTransactionPassphraseResponse.Size(m)
}
func (m *SignTransactionPassphraseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTransactionPassphraseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignTransactionPassphraseResponse proto.InternalMessageInfo

func (m *SignTransactionPassphraseResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type SendTransactionPassphraseRequest struct {
	// transaction struct
	Transaction *TransactionRequest `protobuf:"bytes,1,opt,name=transaction" json:"transaction,omitempty"`
	// from account passphrase
	Passphrase           string   `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionPassphraseRequest) Reset()         { *m = SendTransactionPassphraseRequest{} }
func (m *SendTransactionPassphraseRequest) String() string { return proto.CompactTextString(m) }
func (*SendTransactionPassphraseRequest) ProtoMessage()    {}
func (*SendTransactionPassphraseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{34}
}
func (m *SendTransactionPassphraseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionPassphraseRequest.Unmarshal(m, b)
}
func (m *SendTransactionPassphraseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionPassphraseRequest.Marshal(b, m, deterministic)
}
func (dst *SendTransactionPassphraseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionPassphraseRequest.Merge(dst, src)
}
func (m *SendTransactionPassphraseRequest) XXX_Size() int {
	return xxx_messageInfo_SendTransactionPassphraseRequest.Size(m)
}
func (m *SendTransactionPassphraseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionPassphraseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionPassphraseRequest proto.InternalMessageInfo

func (m *SendTransactionPassphraseRequest) GetTransaction() *TransactionRequest {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *SendTransactionPassphraseRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type GasPriceResponse struct {
	GasPrice             string   `protobuf:"bytes,1,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GasPriceResponse) Reset()         { *m = GasPriceResponse{} }
func (m *GasPriceResponse) String() string { return proto.CompactTextString(m) }
func (*GasPriceResponse) ProtoMessage()    {}
func (*GasPriceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{35}
}
func (m *GasPriceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GasPriceResponse.Unmarshal(m, b)
}
func (m *GasPriceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GasPriceResponse.Marshal(b, m, deterministic)
}
func (dst *GasPriceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GasPriceResponse.Merge(dst, src)
}
func (m *GasPriceResponse) XXX_Size() int {
	return xxx_messageInfo_GasPriceResponse.Size(m)
}
func (m *GasPriceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GasPriceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GasPriceResponse proto.InternalMessageInfo

func (m *GasPriceResponse) GetGasPrice() string {
	if m != nil {
		return m.GasPrice
	}
	return ""
}

// Request message of GetTransactionByHash rpc.
type HashRequest struct {
	// Hex string of block/transaction hash.
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HashRequest) Reset()         { *m = HashRequest{} }
func (m *HashRequest) String() string { return proto.CompactTextString(m) }
func (*HashRequest) ProtoMessage()    {}
func (*HashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{36}
}
func (m *HashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashRequest.Unmarshal(m, b)
}
func (m *HashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashRequest.Marshal(b, m, deterministic)
}
func (dst *HashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashRequest.Merge(dst, src)
}
func (m *HashRequest) XXX_Size() int {
	return xxx_messageInfo_HashRequest.Size(m)
}
func (m *HashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HashRequest proto.InternalMessageInfo

func (m *HashRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type GasResponse struct {
	Gas                  string   `protobuf:"bytes,1,opt,name=gas,proto3" json:"gas,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GasResponse) Reset()         { *m = GasResponse{} }
func (m *GasResponse) String() string { return proto.CompactTextString(m) }
func (*GasResponse) ProtoMessage()    {}
func (*GasResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{37}
}
func (m *GasResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GasResponse.Unmarshal(m, b)
}
func (m *GasResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GasResponse.Marshal(b, m, deterministic)
}
func (dst *GasResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GasResponse.Merge(dst, src)
}
func (m *GasResponse) XXX_Size() int {
	return xxx_messageInfo_GasResponse.Size(m)
}
func (m *GasResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GasResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GasResponse proto.InternalMessageInfo

func (m *GasResponse) GetGas() string {
	if m != nil {
		return m.Gas
	}
	return ""
}

func (m *GasResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type EventsResponse struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventsResponse) Reset()         { *m = EventsResponse{} }
func (m *EventsResponse) String() string { return proto.CompactTextString(m) }
func (*EventsResponse) ProtoMessage()    {}
func (*EventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{38}
}
func (m *EventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventsResponse.Unmarshal(m, b)
}
func (m *EventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventsResponse.Marshal(b, m, deterministic)
}
func (dst *EventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventsResponse.Merge(dst, src)
}
func (m *EventsResponse) XXX_Size() int {
	return xxx_messageInfo_EventsResponse.Size(m)
}
func (m *EventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventsResponse proto.InternalMessageInfo

func (m *EventsResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type Event struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{39}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (dst *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(dst, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Event) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type PprofRequest struct {
	Listen               string   `protobuf:"bytes,1,opt,name=listen,proto3" json:"listen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PprofRequest) Reset()         { *m = PprofRequest{} }
func (m *PprofRequest) String() string { return proto.CompactTextString(m) }
func (*PprofRequest) ProtoMessage()    {}
func (*PprofRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{40}
}
func (m *PprofRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PprofRequest.Unmarshal(m, b)
}
func (m *PprofRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PprofRequest.Marshal(b, m, deterministic)
}
func (dst *PprofRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PprofRequest.Merge(dst, src)
}
func (m *PprofRequest) XXX_Size() int {
	return xxx_messageInfo_PprofRequest.Size(m)
}
func (m *PprofRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PprofRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PprofRequest proto.InternalMessageInfo

func (m *PprofRequest) GetListen() string {
	if m != nil {
		return m.Listen
	}
	return ""
}

type PprofResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PprofResponse) Reset()         { *m = PprofResponse{} }
func (m *PprofResponse) String() string { return proto.CompactTextString(m) }
func (*PprofResponse) ProtoMessage()    {}
func (*PprofResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{41}
}
func (m *PprofResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PprofResponse.Unmarshal(m, b)
}
func (m *PprofResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PprofResponse.Marshal(b, m, deterministic)
}
func (dst *PprofResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PprofResponse.Merge(dst, src)
}
func (m *PprofResponse) XXX_Size() int {
	return xxx_messageInfo_PprofResponse.Size(m)
}
func (m *PprofResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PprofResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PprofResponse proto.InternalMessageInfo

func (m *PprofResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type GetConfigResponse struct {
	// Config
	Config               *pb1.Config `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetConfigResponse) Reset()         { *m = GetConfigResponse{} }
func (m *GetConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetConfigResponse) ProtoMessage()    {}
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{42}
}
func (m *GetConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigResponse.Unmarshal(m, b)
}
func (m *GetConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigResponse.Marshal(b, m, deterministic)
}
func (dst *GetConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigResponse.Merge(dst, src)
}
func (m *GetConfigResponse) XXX_Size() int {
	return xxx_messageInfo_GetConfigResponse.Size(m)
}
func (m *GetConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigResponse proto.InternalMessageInfo

func (m *GetConfigResponse) GetConfig() *pb1.Config {
	if m != nil {
		return m.Config
	}
	return nil
}

type VerifySignatureRequest struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Signature            string   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Alg                  uint32   `protobuf:"varint,4,opt,name=alg,proto3" json:"alg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifySignatureRequest) Reset()         { *m = VerifySignatureRequest{} }
func (m *VerifySignatureRequest) String() string { return proto.CompactTextString(m) }
func (*VerifySignatureRequest) ProtoMessage()    {}
func (*VerifySignatureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{43}
}
func (m *VerifySignatureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifySignatureRequest.Unmarshal(m, b)
}
func (m *VerifySignatureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifySignatureRequest.Marshal(b, m, deterministic)
}
func (dst *VerifySignatureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifySignatureRequest.Merge(dst, src)
}
func (m *VerifySignatureRequest) XXX_Size() int {
	return xxx_messageInfo_VerifySignatureRequest.Size(m)
}
func (m *VerifySignatureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifySignatureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifySignatureRequest proto.InternalMessageInfo

func (m *VerifySignatureRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *VerifySignatureRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *VerifySignatureRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *VerifySignatureRequest) GetAlg() uint32 {
	if m != nil {
		return m.Alg
	}
	return 0
}

type VerifySignatureResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifySignatureResponse) Reset()         { *m = VerifySignatureResponse{} }
func (m *VerifySignatureResponse) String() string { return proto.CompactTextString(m) }
func (*VerifySignatureResponse) ProtoMessage()    {}
func (*VerifySignatureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{44}
}
func (m *VerifySignatureResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifySignatureResponse.Unmarshal(m, b)
}
func (m *VerifySignatureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifySignatureResponse.Marshal(b, m, deterministic)
}
func (dst *VerifySignatureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifySignatureResponse.Merge(dst, src)
}
func (m *VerifySignatureResponse) XXX_Size() int {
	return xxx_messageInfo_VerifySignatureResponse.Size(m)
}
func (m *VerifySignatureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifySignatureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifySignatureResponse proto.InternalMessageInfo

func (m *VerifySignatureResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *VerifySignatureResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type GetNRByAddressRequest struct {
	// nr address
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNRByAddressRequest) Reset()         { *m = GetNRByAddressRequest{} }
func (m *GetNRByAddressRequest) String() string { return proto.CompactTextString(m) }
func (*GetNRByAddressRequest) ProtoMessage()    {}
func (*GetNRByAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{45}
}
func (m *GetNRByAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNRByAddressRequest.Unmarshal(m, b)
}
func (m *GetNRByAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNRByAddressRequest.Marshal(b, m, deterministic)
}
func (dst *GetNRByAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNRByAddressRequest.Merge(dst, src)
}
func (m *GetNRByAddressRequest) XXX_Size() int {
	return xxx_messageInfo_GetNRByAddressRequest.Size(m)
}
func (m *GetNRByAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNRByAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNRByAddressRequest proto.InternalMessageInfo

func (m *GetNRByAddressRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type GetNRHandleRequest struct {
	// start block height of nr calculate interval
	Start uint64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	// end block height of nr calculate interval. If not specified, use 0 as tail height.
	End uint64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	// nr version
	Version              uint64   `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNRHandleRequest) Reset()         { *m = GetNRHandleRequest{} }
func (m *GetNRHandleRequest) String() string { return proto.CompactTextString(m) }
func (*GetNRHandleRequest) ProtoMessage()    {}
func (*GetNRHandleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{46}
}
func (m *GetNRHandleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNRHandleRequest.Unmarshal(m, b)
}
func (m *GetNRHandleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNRHandleRequest.Marshal(b, m, deterministic)
}
func (dst *GetNRHandleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNRHandleRequest.Merge(dst, src)
}
func (m *GetNRHandleRequest) XXX_Size() int {
	return xxx_messageInfo_GetNRHandleRequest.Size(m)
}
func (m *GetNRHandleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNRHandleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNRHandleRequest proto.InternalMessageInfo

func (m *GetNRHandleRequest) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetNRHandleRequest) GetEnd() uint64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GetNRHandleRequest) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type GetNRHandleResponse struct {
	Handle               string   `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNRHandleResponse) Reset()         { *m = GetNRHandleResponse{} }
func (m *GetNRHandleResponse) String() string { return proto.CompactTextString(m) }
func (*GetNRHandleResponse) ProtoMessage()    {}
func (*GetNRHandleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{47}
}
func (m *GetNRHandleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNRHandleResponse.Unmarshal(m, b)
}
func (m *GetNRHandleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNRHandleResponse.Marshal(b, m, deterministic)
}
func (dst *GetNRHandleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNRHandleResponse.Merge(dst, src)
}
func (m *GetNRHandleResponse) XXX_Size() int {
	return xxx_messageInfo_GetNRHandleResponse.Size(m)
}
func (m *GetNRHandleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNRHandleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNRHandleResponse proto.InternalMessageInfo

func (m *GetNRHandleResponse) GetHandle() string {
	if m != nil {
		return m.Handle
	}
	return ""
}

type GetNRListByHandleRequest struct {
	// nr handle
	Handle               string   `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNRListByHandleRequest) Reset()         { *m = GetNRListByHandleRequest{} }
func (m *GetNRListByHandleRequest) String() string { return proto.CompactTextString(m) }
func (*GetNRListByHandleRequest) ProtoMessage()    {}
func (*GetNRListByHandleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{48}
}
func (m *GetNRListByHandleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNRListByHandleRequest.Unmarshal(m, b)
}
func (m *GetNRListByHandleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNRListByHandleRequest.Marshal(b, m, deterministic)
}
func (dst *GetNRListByHandleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNRListByHandleRequest.Merge(dst, src)
}
func (m *GetNRListByHandleRequest) XXX_Size() int {
	return xxx_messageInfo_GetNRListByHandleRequest.Size(m)
}
func (m *GetNRListByHandleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNRListByHandleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNRListByHandleRequest proto.InternalMessageInfo

func (m *GetNRListByHandleRequest) GetHandle() string {
	if m != nil {
		return m.Handle
	}
	return ""
}

type GetNRListResponse struct {
	// nr algorithm version
	Version uint64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// start block height of nr calculate interval
	Start uint64 `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	// end block height of nr calculate interval. If not specified, use 0 as tail height.
	End uint64 `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	// nr data list
	Data                 []*NRItem `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetNRListResponse) Reset()         { *m = GetNRListResponse{} }
func (m *GetNRListResponse) String() string { return proto.CompactTextString(m) }
func (*GetNRListResponse) ProtoMessage()    {}
func (*GetNRListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{49}
}
func (m *GetNRListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNRListResponse.Unmarshal(m, b)
}
func (m *GetNRListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNRListResponse.Marshal(b, m, deterministic)
}
func (dst *GetNRListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNRListResponse.Merge(dst, src)
}
func (m *GetNRListResponse) XXX_Size() int {
	return xxx_messageInfo_GetNRListResponse.Size(m)
}
func (m *GetNRListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNRListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNRListResponse proto.InternalMessageInfo

func (m *GetNRListResponse) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GetNRListResponse) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetNRListResponse) GetEnd() uint64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GetNRListResponse) GetData() []*NRItem {
	if m != nil {
		return m.Data
	}
	return nil
}

type NRItem struct {
	// nr address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// score of nr.
	Score                string   `protobuf:"bytes,2,opt,name=score,proto3" json:"score,omitempty"`
	Median               string   `protobuf:"bytes,3,opt,name=median,proto3" json:"median,omitempty"`
	Weight               string   `protobuf:"bytes,4,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NRItem) Reset()         { *m = NRItem{} }
func (m *NRItem) String() string { return proto.CompactTextString(m) }
func (*NRItem) ProtoMessage()    {}
func (*NRItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{50}
}
func (m *NRItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NRItem.Unmarshal(m, b)
}
func (m *NRItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NRItem.Marshal(b, m, deterministic)
}
func (dst *NRItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NRItem.Merge(dst, src)
}
func (m *NRItem) XXX_Size() int {
	return xxx_messageInfo_NRItem.Size(m)
}
func (m *NRItem) XXX_DiscardUnknown() {
	xxx_messageInfo_NRItem.DiscardUnknown(m)
}

var xxx_messageInfo_NRItem proto.InternalMessageInfo

func (m *NRItem) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *NRItem) GetScore() string {
	if m != nil {
		return m.Score
	}
	return ""
}

func (m *NRItem) GetMedian() string {
	if m != nil {
		return m.Median
	}
	return ""
}

func (m *NRItem) GetWeight() string {
	if m != nil {
		return m.Weight
	}
	return ""
}

type GetDIPListRequest struct {
	// height
	Height               uint64   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDIPListRequest) Reset()         { *m = GetDIPListRequest{} }
func (m *GetDIPListRequest) String() string { return proto.CompactTextString(m) }
func (*GetDIPListRequest) ProtoMessage()    {}
func (*GetDIPListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{51}
}
func (m *GetDIPListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDIPListRequest.Unmarshal(m, b)
}
func (m *GetDIPListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDIPListRequest.Marshal(b, m, deterministic)
}
func (dst *GetDIPListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDIPListRequest.Merge(dst, src)
}
func (m *GetDIPListRequest) XXX_Size() int {
	return xxx_messageInfo_GetDIPListRequest.Size(m)
}
func (m *GetDIPListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDIPListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDIPListRequest proto.InternalMessageInfo

func (m *GetDIPListRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type GetDIPListResponse struct {
	// dip algorithm version
	Version uint64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// start block height of dip calculate interval
	Start uint64 `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	// end block height of dip calculate interval.
	End uint64 `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	// dip data list
	Data                 []*DIPItem `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetDIPListResponse) Reset()         { *m = GetDIPListResponse{} }
func (m *GetDIPListResponse) String() string { return proto.CompactTextString(m) }
func (*GetDIPListResponse) ProtoMessage()    {}
func (*GetDIPListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{52}
}
func (m *GetDIPListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDIPListResponse.Unmarshal(m, b)
}
func (m *GetDIPListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDIPListResponse.Marshal(b, m, deterministic)
}
func (dst *GetDIPListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDIPListResponse.Merge(dst, src)
}
func (m *GetDIPListResponse) XXX_Size() int {
	return xxx_messageInfo_GetDIPListResponse.Size(m)
}
func (m *GetDIPListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDIPListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDIPListResponse proto.InternalMessageInfo

func (m *GetDIPListResponse) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GetDIPListResponse) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetDIPListResponse) GetEnd() uint64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GetDIPListResponse) GetData() []*DIPItem {
	if m != nil {
		return m.Data
	}
	return nil
}

type DIPItem struct {
	// dip address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// dip contract address
	Contract string `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	// value of dip reward.
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DIPItem) Reset()         { *m = DIPItem{} }
func (m *DIPItem) String() string { return proto.CompactTextString(m) }
func (*DIPItem) ProtoMessage()    {}
func (*DIPItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_336a5f4339297122, []int{53}
}
func (m *DIPItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DIPItem.Unmarshal(m, b)
}
func (m *DIPItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DIPItem.Marshal(b, m, deterministic)
}
func (dst *DIPItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DIPItem.Merge(dst, src)
}
func (m *DIPItem) XXX_Size() int {
	return xxx_messageInfo_DIPItem.Size(m)
}
func (m *DIPItem) XXX_DiscardUnknown() {
	xxx_messageInfo_DIPItem.DiscardUnknown(m)
}

var xxx_messageInfo_DIPItem proto.InternalMessageInfo

func (m *DIPItem) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *DIPItem) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *DIPItem) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*SubscribeRequest)(nil), "rpcpb.SubscribeRequest")
	proto.RegisterType((*SubscribeResponse)(nil), "rpcpb.SubscribeResponse")
	proto.RegisterType((*NonParamsRequest)(nil), "rpcpb.NonParamsRequest")
	proto.RegisterType((*NodeInfoResponse)(nil), "rpcpb.NodeInfoResponse")
	proto.RegisterType((*RouteTable)(nil), "rpcpb.RouteTable")
	proto.RegisterType((*GetNebStateResponse)(nil), "rpcpb.GetNebStateResponse")
	proto.RegisterType((*AccountsResponse)(nil), "rpcpb.AccountsResponse")
	proto.RegisterType((*GetAccountStateRequest)(nil), "rpcpb.GetAccountStateRequest")
	proto.RegisterType((*GetAccountStateResponse)(nil), "rpcpb.GetAccountStateResponse")
	proto.RegisterType((*CallResponse)(nil), "rpcpb.CallResponse")
	proto.RegisterType((*ByBlockHeightRequest)(nil), "rpcpb.ByBlockHeightRequest")
	proto.RegisterType((*GetDynastyResponse)(nil), "rpcpb.GetDynastyResponse")
	proto.RegisterType((*TransactionRequest)(nil), "rpcpb.TransactionRequest")
	proto.RegisterType((*ContractRequest)(nil), "rpcpb.ContractRequest")
	proto.RegisterType((*SendRawTransactionRequest)(nil), "rpcpb.SendRawTransactionRequest")
	proto.RegisterType((*SendTransactionResponse)(nil), "rpcpb.SendTransactionResponse")
	proto.RegisterType((*GetBlockByHashRequest)(nil), "rpcpb.GetBlockByHashRequest")
	proto.RegisterType((*GetBlockByHeightRequest)(nil), "rpcpb.GetBlockByHeightRequest")
	proto.RegisterType((*GetTransactionByHashRequest)(nil), "rpcpb.GetTransactionByHashRequest")
	proto.RegisterType((*GetTransactionByContractRequest)(nil), "rpcpb.GetTransactionByContractRequest")
	proto.RegisterType((*BlockResponse)(nil), "rpcpb.BlockResponse")
	proto.RegisterType((*TransactionResponse)(nil), "rpcpb.TransactionResponse")
	proto.RegisterType((*NewAccountRequest)(nil), "rpcpb.NewAccountRequest")
	proto.RegisterType((*NewAccountResponse)(nil), "rpcpb.NewAccountResponse")
	proto.RegisterType((*UnlockAccountRequest)(nil), "rpcpb.UnlockAccountRequest")
	proto.RegisterType((*UnlockAccountResponse)(nil), "rpcpb.UnlockAccountResponse")
	proto.RegisterType((*LockAccountRequest)(nil), "rpcpb.LockAccountRequest")
	proto.RegisterType((*LockAccountResponse)(nil), "rpcpb.LockAccountResponse")
	proto.RegisterType((*SignHashRequest)(nil), "rpcpb.SignHashRequest")
	proto.RegisterType((*SignHashResponse)(nil), "rpcpb.SignHashResponse")
	proto.RegisterType((*GenerateRandomSeedRequest)(nil), "rpcpb.GenerateRandomSeedRequest")
	proto.RegisterType((*GenerateRandomSeedResponse)(nil), "rpcpb.GenerateRandomSeedResponse")
	proto.RegisterType((*SignTransactionPassphraseRequest)(nil), "rpcpb.SignTransactionPassphraseRequest")
	proto.RegisterType((*SignTransactionPassphraseResponse)(nil), "rpcpb.SignTransactionPassphraseResponse")
	proto.RegisterType((*SendTransactionPassphraseRequest)(nil), "rpcpb.SendTransactionPassphraseRequest")
	proto.RegisterType((*GasPriceResponse)(nil), "rpcpb.GasPriceResponse")
	proto.RegisterType((*HashRequest)(nil), "rpcpb.HashRequest")
	proto.RegisterType((*GasResponse)(nil), "rpcpb.GasResponse")
	proto.RegisterType((*EventsResponse)(nil), "rpcpb.EventsResponse")
	proto.RegisterType((*Event)(nil), "rpcpb.Event")
	proto.RegisterType((*PprofRequest)(nil), "rpcpb.PprofRequest")
	proto.RegisterType((*PprofResponse)(nil), "rpcpb.PprofResponse")
	proto.RegisterType((*GetConfigResponse)(nil), "rpcpb.GetConfigResponse")
	proto.RegisterType((*VerifySignatureRequest)(nil), "rpcpb.VerifySignatureRequest")
	proto.RegisterType((*VerifySignatureResponse)(nil), "rpcpb.VerifySignatureResponse")
	proto.RegisterType((*GetNRByAddressRequest)(nil), "rpcpb.GetNRByAddressRequest")
	proto.RegisterType((*GetNRHandleRequest)(nil), "rpcpb.GetNRHandleRequest")
	proto.RegisterType((*GetNRHandleResponse)(nil), "rpcpb.GetNRHandleResponse")
	proto.RegisterType((*GetNRListByHandleRequest)(nil), "rpcpb.GetNRListByHandleRequest")
	proto.RegisterType((*GetNRListResponse)(nil), "rpcpb.GetNRListResponse")
	proto.RegisterType((*NRItem)(nil), "rpcpb.NRItem")
	proto.RegisterType((*GetDIPListRequest)(nil), "rpcpb.GetDIPListRequest")
	proto.RegisterType((*GetDIPListResponse)(nil), "rpcpb.GetDIPListResponse")
	proto.RegisterType((*DIPItem)(nil), "rpcpb.DIPItem")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ApiServiceClient is the client API for ApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApiServiceClient interface {
	// Return the state of the neb.
	GetNebState(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*GetNebStateResponse, error)
	// Return the latest irreversible block.
	LatestIrreversibleBlock(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*BlockResponse, error)
	// Return the state of the account.
	GetAccountState(ctx context.Context, in *GetAccountStateRequest, opts ...grpc.CallOption) (*GetAccountStateResponse, error)
	// Call transaction
	Call(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*CallResponse, error)
	// Submit the signed transaction.
	SendRawTransaction(ctx context.Context, in *SendRawTransactionRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error)
	// Get block info by the block hash.
	GetBlockByHash(ctx context.Context, in *GetBlockByHashRequest, opts ...grpc.CallOption) (*BlockResponse, error)
	// Get block info by the block height.
	GetBlockByHeight(ctx context.Context, in *GetBlockByHeightRequest, opts ...grpc.CallOption) (*BlockResponse, error)
	// Get transactionReceipt info by tansaction hash.
	GetTransactionReceipt(ctx context.Context, in *GetTransactionByHashRequest, opts ...grpc.CallOption) (*TransactionResponse, error)
	// Get transactionReceipt info by tansaction hash.
	GetTransactionByContract(ctx context.Context, in *GetTransactionByContractRequest, opts ...grpc.CallOption) (*TransactionResponse, error)
	// Subscribe message
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (ApiService_SubscribeClient, error)
	// Get GasPrice
	GetGasPrice(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*GasPriceResponse, error)
	// EstimateGas
	EstimateGas(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*GasResponse, error)
	GetEventsByHash(ctx context.Context, in *HashRequest, opts ...grpc.CallOption) (*EventsResponse, error)
	GetDynasty(ctx context.Context, in *ByBlockHeightRequest, opts ...grpc.CallOption) (*GetDynastyResponse, error)
	// Verify Signature.
	VerifySignature(ctx context.Context, in *VerifySignatureRequest, opts ...grpc.CallOption) (*VerifySignatureResponse, error)
	// get nr by address
	GetNRByAddress(ctx context.Context, in *GetNRByAddressRequest, opts ...grpc.CallOption) (*NRItem, error)
	// get latest nr list
	GetLatestNRList(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*GetNRListResponse, error)
	// get nr handle with height interval
	GetNRHandle(ctx context.Context, in *GetNRHandleRequest, opts ...grpc.CallOption) (*GetNRHandleResponse, error)
	// get nr list by hash, which returned by `GetNRHash`
	GetNRListByHandle(ctx context.Context, in *GetNRListByHandleRequest, opts ...grpc.CallOption) (*GetNRListResponse, error)
	// get latest dip list
	GetDIPList(ctx context.Context, in *GetDIPListRequest, opts ...grpc.CallOption) (*GetDIPListResponse, error)
}

type apiServiceClient struct {
	cc *grpc.ClientConn
}

func NewApiServiceClient(cc *grpc.ClientConn) ApiServiceClient {
	return &apiServiceClient{cc}
}

func (c *apiServiceClient) GetNebState(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*GetNebStateResponse, error) {
	out := new(GetNebStateResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetNebState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) LatestIrreversibleBlock(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*BlockResponse, error) {
	out := new(BlockResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/LatestIrreversibleBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetAccountState(ctx context.Context, in *GetAccountStateRequest, opts ...grpc.CallOption) (*GetAccountStateResponse, error) {
	out := new(GetAccountStateResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetAccountState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) Call(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*CallResponse, error) {
	out := new(CallResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/Call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) SendRawTransaction(ctx context.Context, in *SendRawTransactionRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error) {
	out := new(SendTransactionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/SendRawTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetBlockByHash(ctx context.Context, in *GetBlockByHashRequest, opts ...grpc.CallOption) (*BlockResponse, error) {
	out := new(BlockResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetBlockByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetBlockByHeight(ctx context.Context, in *GetBlockByHeightRequest, opts ...grpc.CallOption) (*BlockResponse, error) {
	out := new(BlockResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetBlockByHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTransactionReceipt(ctx context.Context, in *GetTransactionByHashRequest, opts ...grpc.CallOption) (*TransactionResponse, error) {
	out := new(TransactionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetTransactionReceipt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTransactionByContract(ctx context.Context, in *GetTransactionByContractRequest, opts ...grpc.CallOption) (*TransactionResponse, error) {
	out := new(TransactionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetTransactionByContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (ApiService_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ApiService_serviceDesc.Streams[0], "/rpcpb.ApiService/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &apiServiceSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ApiService_SubscribeClient interface {
	Recv() (*SubscribeResponse, error)
	grpc.ClientStream
}

type apiServiceSubscribeClient struct {
	grpc.ClientStream
}

func (x *apiServiceSubscribeClient) Recv() (*SubscribeResponse, error) {
	m := new(SubscribeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *apiServiceClient) GetGasPrice(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*GasPriceResponse, error) {
	out := new(GasPriceResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetGasPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) EstimateGas(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*GasResponse, error) {
	out := new(GasResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/EstimateGas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetEventsByHash(ctx context.Context, in *HashRequest, opts ...grpc.CallOption) (*EventsResponse, error) {
	out := new(EventsResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetEventsByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetDynasty(ctx context.Context, in *ByBlockHeightRequest, opts ...grpc.CallOption) (*GetDynastyResponse, error) {
	out := new(GetDynastyResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetDynasty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) VerifySignature(ctx context.Context, in *VerifySignatureRequest, opts ...grpc.CallOption) (*VerifySignatureResponse, error) {
	out := new(VerifySignatureResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/VerifySignature", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetNRByAddress(ctx context.Context, in *GetNRByAddressRequest, opts ...grpc.CallOption) (*NRItem, error) {
	out := new(NRItem)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetNRByAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetLatestNRList(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*GetNRListResponse, error) {
	out := new(GetNRListResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetLatestNRList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetNRHandle(ctx context.Context, in *GetNRHandleRequest, opts ...grpc.CallOption) (*GetNRHandleResponse, error) {
	out := new(GetNRHandleResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetNRHandle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetNRListByHandle(ctx context.Context, in *GetNRListByHandleRequest, opts ...grpc.CallOption) (*GetNRListResponse, error) {
	out := new(GetNRListResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetNRListByHandle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetDIPList(ctx context.Context, in *GetDIPListRequest, opts ...grpc.CallOption) (*GetDIPListResponse, error) {
	out := new(GetDIPListResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetDIPList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiServiceServer is the server API for ApiService service.
type ApiServiceServer interface {
	// Return the state of the neb.
	GetNebState(context.Context, *NonParamsRequest) (*GetNebStateResponse, error)
	// Return the latest irreversible block.
	LatestIrreversibleBlock(context.Context, *NonParamsRequest) (*BlockResponse, error)
	// Return the state of the account.
	GetAccountState(context.Context, *GetAccountStateRequest) (*GetAccountStateResponse, error)
	// Call transaction
	Call(context.Context, *TransactionRequest) (*CallResponse, error)
	// Submit the signed transaction.
	SendRawTransaction(context.Context, *SendRawTransactionRequest) (*SendTransactionResponse, error)
	// Get block info by the block hash.
	GetBlockByHash(context.Context, *GetBlockByHashRequest) (*BlockResponse, error)
	// Get block info by the block height.
	GetBlockByHeight(context.Context, *GetBlockByHeightRequest) (*BlockResponse, error)
	// Get transactionReceipt info by tansaction hash.
	GetTransactionReceipt(context.Context, *GetTransactionByHashRequest) (*TransactionResponse, error)
	// Get transactionReceipt info by tansaction hash.
	GetTransactionByContract(context.Context, *GetTransactionByContractRequest) (*TransactionResponse, error)
	// Subscribe message
	Subscribe(*SubscribeRequest, ApiService_SubscribeServer) error
	// Get GasPrice
	GetGasPrice(context.Context, *NonParamsRequest) (*GasPriceResponse, error)
	// EstimateGas
	EstimateGas(context.Context, *TransactionRequest) (*GasResponse, error)
	GetEventsByHash(context.Context, *HashRequest) (*EventsResponse, error)
	GetDynasty(context.Context, *ByBlockHeightRequest) (*GetDynastyResponse, error)
	// Verify Signature.
	VerifySignature(context.Context, *VerifySignatureRequest) (*VerifySignatureResponse, error)
	// get nr by address
	GetNRByAddress(context.Context, *GetNRByAddressRequest) (*NRItem, error)
	// get latest nr list
	GetLatestNRList(context.Context, *NonParamsRequest) (*GetNRListResponse, error)
	// get nr handle with height interval
	GetNRHandle(context.Context, *GetNRHandleRequest) (*GetNRHandleResponse, error)
	// get nr list by hash, which returned by `GetNRHash`
	GetNRListByHandle(context.Context, *GetNRListByHandleRequest) (*GetNRListResponse, error)
	// get latest dip list
	GetDIPList(context.Context, *GetDIPListRequest) (*GetDIPListResponse, error)
}

func RegisterApiServiceServer(s *grpc.Server, srv ApiServiceServer) {
	s.RegisterService(&_ApiService_serviceDesc, srv)
}

func _ApiService_GetNebState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetNebState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetNebState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetNebState(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_LatestIrreversibleBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).LatestIrreversibleBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/LatestIrreversibleBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).LatestIrreversibleBlock(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetAccountState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetAccountState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetAccountState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetAccountState(ctx, req.(*GetAccountStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).Call(ctx, req.(*TransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_SendRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendRawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).SendRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/SendRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).SendRawTransaction(ctx, req.(*SendRawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetBlockByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockByHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetBlockByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetBlockByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetBlockByHash(ctx, req.(*GetBlockByHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetBlockByHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockByHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetBlockByHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetBlockByHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetBlockByHeight(ctx, req.(*GetBlockByHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTransactionReceipt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionByHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTransactionReceipt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetTransactionReceipt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTransactionReceipt(ctx, req.(*GetTransactionByHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTransactionByContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionByContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTransactionByContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetTransactionByContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTransactionByContract(ctx, req.(*GetTransactionByContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ApiServiceServer).Subscribe(m, &apiServiceSubscribeServer{stream})
}

type ApiService_SubscribeServer interface {
	Send(*SubscribeResponse) error
	grpc.ServerStream
}

type apiServiceSubscribeServer struct {
	grpc.ServerStream
}

func (x *apiServiceSubscribeServer) Send(m *SubscribeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ApiService_GetGasPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetGasPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetGasPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetGasPrice(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_EstimateGas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).EstimateGas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/EstimateGas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).EstimateGas(ctx, req.(*TransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetEventsByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetEventsByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetEventsByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetEventsByHash(ctx, req.(*HashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetDynasty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByBlockHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetDynasty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetDynasty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetDynasty(ctx, req.(*ByBlockHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_VerifySignature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifySignatureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).VerifySignature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/VerifySignature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).VerifySignature(ctx, req.(*VerifySignatureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetNRByAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNRByAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetNRByAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetNRByAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetNRByAddress(ctx, req.(*GetNRByAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetLatestNRList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetLatestNRList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetLatestNRList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetLatestNRList(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetNRHandle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNRHandleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetNRHandle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetNRHandle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetNRHandle(ctx, req.(*GetNRHandleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetNRListByHandle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNRListByHandleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetNRListByHandle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetNRListByHandle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetNRListByHandle(ctx, req.(*GetNRListByHandleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetDIPList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDIPListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetDIPList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetDIPList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetDIPList(ctx, req.(*GetDIPListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcpb.ApiService",
	HandlerType: (*ApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNebState",
			Handler:    _ApiService_GetNebState_Handler,
		},
		{
			MethodName: "LatestIrreversibleBlock",
			Handler:    _ApiService_LatestIrreversibleBlock_Handler,
		},
		{
			MethodName: "GetAccountState",
			Handler:    _ApiService_GetAccountState_Handler,
		},
		{
			MethodName: "Call",
			Handler:    _ApiService_Call_Handler,
		},
		{
			MethodName: "SendRawTransaction",
			Handler:    _ApiService_SendRawTransaction_Handler,
		},
		{
			MethodName: "GetBlockByHash",
			Handler:    _ApiService_GetBlockByHash_Handler,
		},
		{
			MethodName: "GetBlockByHeight",
			Handler:    _ApiService_GetBlockByHeight_Handler,
		},
		{
			MethodName: "GetTransactionReceipt",
			Handler:    _ApiService_GetTransactionReceipt_Handler,
		},
		{
			MethodName: "GetTransactionByContract",
			Handler:    _ApiService_GetTransactionByContract_Handler,
		},
		{
			MethodName: "GetGasPrice",
			Handler:    _ApiService_GetGasPrice_Handler,
		},
		{
			MethodName: "EstimateGas",
			Handler:    _ApiService_EstimateGas_Handler,
		},
		{
			MethodName: "GetEventsByHash",
			Handler:    _ApiService_GetEventsByHash_Handler,
		},
		{
			MethodName: "GetDynasty",
			Handler:    _ApiService_GetDynasty_Handler,
		},
		{
			MethodName: "VerifySignature",
			Handler:    _ApiService_VerifySignature_Handler,
		},
		{
			MethodName: "GetNRByAddress",
			Handler:    _ApiService_GetNRByAddress_Handler,
		},
		{
			MethodName: "GetLatestNRList",
			Handler:    _ApiService_GetLatestNRList_Handler,
		},
		{
			MethodName: "GetNRHandle",
			Handler:    _ApiService_GetNRHandle_Handler,
		},
		{
			MethodName: "GetNRListByHandle",
			Handler:    _ApiService_GetNRListByHandle_Handler,
		},
		{
			MethodName: "GetDIPList",
			Handler:    _ApiService_GetDIPList_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _ApiService_Subscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rpc.proto",
}

// AdminServiceClient is the client API for AdminService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminServiceClient interface {
	// Accounts return account list.
	Accounts(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*AccountsResponse, error)
	// NewAccount create a new account with passphrase
	NewAccount(ctx context.Context, in *NewAccountRequest, opts ...grpc.CallOption) (*NewAccountResponse, error)
	// UnlockAccount unlock account with passphrase
	UnlockAccount(ctx context.Context, in *UnlockAccountRequest, opts ...grpc.CallOption) (*UnlockAccountResponse, error)
	// LockAccount lock account
	LockAccount(ctx context.Context, in *LockAccountRequest, opts ...grpc.CallOption) (*LockAccountResponse, error)
	// Verify, sign, and send the transaction.
	SendTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error)
	// Sign sign msg
	SignHash(ctx context.Context, in *SignHashRequest, opts ...grpc.CallOption) (*SignHashResponse, error)
	GenerateRandomSeed(ctx context.Context, in *GenerateRandomSeedRequest, opts ...grpc.CallOption) (*GenerateRandomSeedResponse, error)
	// Sign sign transaction
	SignTransactionWithPassphrase(ctx context.Context, in *SignTransactionPassphraseRequest, opts ...grpc.CallOption) (*SignTransactionPassphraseResponse, error)
	// SendTransactionWithPassphrase send transaction with passphrase
	SendTransactionWithPassphrase(ctx context.Context, in *SendTransactionPassphraseRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error)
	StartPprof(ctx context.Context, in *PprofRequest, opts ...grpc.CallOption) (*PprofResponse, error)
	// Get Config
	GetConfig(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*GetConfigResponse, error)
	// Return the p2p node info.
	NodeInfo(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*NodeInfoResponse, error)
}

type adminServiceClient struct {
	cc *grpc.ClientConn
}

func NewAdminServiceClient(cc *grpc.ClientConn) AdminServiceClient {
	return &adminServiceClient{cc}
}

func (c *adminServiceClient) Accounts(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*AccountsResponse, error) {
	out := new(AccountsResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/Accounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) NewAccount(ctx context.Context, in *NewAccountRequest, opts ...grpc.CallOption) (*NewAccountResponse, error) {
	out := new(NewAccountResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/NewAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) UnlockAccount(ctx context.Context, in *UnlockAccountRequest, opts ...grpc.CallOption) (*UnlockAccountResponse, error) {
	out := new(UnlockAccountResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/UnlockAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) LockAccount(ctx context.Context, in *LockAccountRequest, opts ...grpc.CallOption) (*LockAccountResponse, error) {
	out := new(LockAccountResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/LockAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) SendTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error) {
	out := new(SendTransactionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/SendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) SignHash(ctx context.Context, in *SignHashRequest, opts ...grpc.CallOption) (*SignHashResponse, error) {
	out := new(SignHashResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/SignHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GenerateRandomSeed(ctx context.Context, in *GenerateRandomSeedRequest, opts ...grpc.CallOption) (*GenerateRandomSeedResponse, error) {
	out := new(GenerateRandomSeedResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/GenerateRandomSeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) SignTransactionWithPassphrase(ctx context.Context, in *SignTransactionPassphraseRequest, opts ...grpc.CallOption) (*SignTransactionPassphraseResponse, error) {
	out := new(SignTransactionPassphraseResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/SignTransactionWithPassphrase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) SendTransactionWithPassphrase(ctx context.Context, in *SendTransactionPassphraseRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error) {
	out := new(SendTransactionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/SendTransactionWithPassphrase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) StartPprof(ctx context.Context, in *PprofRequest, opts ...grpc.CallOption) (*PprofResponse, error) {
	out := new(PprofResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/StartPprof", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetConfig(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*GetConfigResponse, error) {
	out := new(GetConfigResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) NodeInfo(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*NodeInfoResponse, error) {
	out := new(NodeInfoResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/NodeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServiceServer is the server API for AdminService service.
type AdminServiceServer interface {
	// Accounts return account list.
	Accounts(context.Context, *NonParamsRequest) (*AccountsResponse, error)
	// NewAccount create a new account with passphrase
	NewAccount(context.Context, *NewAccountRequest) (*NewAccountResponse, error)
	// UnlockAccount unlock account with passphrase
	UnlockAccount(context.Context, *UnlockAccountRequest) (*UnlockAccountResponse, error)
	// LockAccount lock account
	LockAccount(context.Context, *LockAccountRequest) (*LockAccountResponse, error)
	// Verify, sign, and send the transaction.
	SendTransaction(context.Context, *TransactionRequest) (*SendTransactionResponse, error)
	// Sign sign msg
	SignHash(context.Context, *SignHashRequest) (*SignHashResponse, error)
	GenerateRandomSeed(context.Context, *GenerateRandomSeedRequest) (*GenerateRandomSeedResponse, error)
	// Sign sign transaction
	SignTransactionWithPassphrase(context.Context, *SignTransactionPassphraseRequest) (*SignTransactionPassphraseResponse, error)
	// SendTransactionWithPassphrase send transaction with passphrase
	SendTransactionWithPassphrase(context.Context, *SendTransactionPassphraseRequest) (*SendTransactionResponse, error)
	StartPprof(context.Context, *PprofRequest) (*PprofResponse, error)
	// Get Config
	GetConfig(context.Context, *NonParamsRequest) (*GetConfigResponse, error)
	// Return the p2p node info.
	NodeInfo(context.Context, *NonParamsRequest) (*NodeInfoResponse, error)
}

func RegisterAdminServiceServer(s *grpc.Server, srv AdminServiceServer) {
	s.RegisterService(&_AdminService_serviceDesc, srv)
}

func _AdminService_Accounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).Accounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/Accounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).Accounts(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_NewAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).NewAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/NewAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).NewAccount(ctx, req.(*NewAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_UnlockAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).UnlockAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/UnlockAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).UnlockAccount(ctx, req.(*UnlockAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_LockAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).LockAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/LockAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).LockAccount(ctx, req.(*LockAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_SendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).SendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/SendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).SendTransaction(ctx, req.(*TransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_SignHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).SignHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/SignHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).SignHash(ctx, req.(*SignHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GenerateRandomSeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateRandomSeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GenerateRandomSeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/GenerateRandomSeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GenerateRandomSeed(ctx, req.(*GenerateRandomSeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_SignTransactionWithPassphrase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignTransactionPassphraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).SignTransactionWithPassphrase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/SignTransactionWithPassphrase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).SignTransactionWithPassphrase(ctx, req.(*SignTransactionPassphraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_SendTransactionWithPassphrase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTransactionPassphraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).SendTransactionWithPassphrase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/SendTransactionWithPassphrase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).SendTransactionWithPassphrase(ctx, req.(*SendTransactionPassphraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_StartPprof_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PprofRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).StartPprof(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/StartPprof",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).StartPprof(ctx, req.(*PprofRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetConfig(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_NodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).NodeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/NodeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).NodeInfo(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdminService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcpb.AdminService",
	HandlerType: (*AdminServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Accounts",
			Handler:    _AdminService_Accounts_Handler,
		},
		{
			MethodName: "NewAccount",
			Handler:    _AdminService_NewAccount_Handler,
		},
		{
			MethodName: "UnlockAccount",
			Handler:    _AdminService_UnlockAccount_Handler,
		},
		{
			MethodName: "LockAccount",
			Handler:    _AdminService_LockAccount_Handler,
		},
		{
			MethodName: "SendTransaction",
			Handler:    _AdminService_SendTransaction_Handler,
		},
		{
			MethodName: "SignHash",
			Handler:    _AdminService_SignHash_Handler,
		},
		{
			MethodName: "GenerateRandomSeed",
			Handler:    _AdminService_GenerateRandomSeed_Handler,
		},
		{
			MethodName: "SignTransactionWithPassphrase",
			Handler:    _AdminService_SignTransactionWithPassphrase_Handler,
		},
		{
			MethodName: "SendTransactionWithPassphrase",
			Handler:    _AdminService_SendTransactionWithPassphrase_Handler,
		},
		{
			MethodName: "StartPprof",
			Handler:    _AdminService_StartPprof_Handler,
		},
		{
			MethodName: "GetConfig",
			Handler:    _AdminService_GetConfig_Handler,
		},
		{
			MethodName: "NodeInfo",
			Handler:    _AdminService_NodeInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_rpc_336a5f4339297122) }

var fileDescriptor_rpc_336a5f4339297122 = []byte{
	// 2857 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x5a, 0xdd, 0x6e, 0x1b, 0xc7,
	0xf5, 0x07, 0x45, 0x7d, 0xf1, 0x90, 0x92, 0xe8, 0x91, 0x2c, 0xaf, 0x68, 0x59, 0x96, 0xc6, 0x89,
	0xa3, 0xf8, 0x9f, 0x88, 0xb1, 0x02, 0xe4, 0x5f, 0x24, 0x48, 0x01, 0x7f, 0x24, 0x8a, 0x5b, 0x43,
	0x50, 0x57, 0x76, 0x1a, 0xa0, 0x4d, 0x89, 0x21, 0x39, 0x24, 0xb7, 0x59, 0xed, 0xb2, 0x3b, 0x43,
	0xd9, 0x72, 0x2f, 0x0a, 0xe4, 0xba, 0x45, 0x2f, 0x7a, 0x53, 0x14, 0x45, 0x9f, 0xa1, 0xef, 0xd2,
	0x8b, 0xdc, 0xf6, 0xa2, 0x0f, 0x52, 0xcc, 0x99, 0x99, 0xdd, 0xd9, 0xe5, 0x92, 0x4a, 0x8a, 0xa2,
	0x77, 0x7b, 0xce, 0xcc, 0x9c, 0xaf, 0x39, 0xf3, 0x9b, 0x33, 0x87, 0x84, 0x5a, 0x32, 0xee, 0x1d,
	0x8d, 0x93, 0x58, 0xc6, 0x64, 0x29, 0x19, 0xf7, 0xc6, 0xdd, 0xd6, 0xee, 0x30, 0x8e, 0x87, 0x21,
	0x6f, 0xb3, 0x71, 0xd0, 0x66, 0x51, 0x14, 0x4b, 0x26, 0x83, 0x38, 0x12, 0x7a, 0x52, 0xeb, 0x47,
	0xc3, 0x40, 0x8e, 0x26, 0xdd, 0xa3, 0x5e, 0x7c, 0xd1, 0x8e, 0x78, 0x77, 0x12, 0x32, 0x11, 0xc4,
	0xed, 0x61, 0xfc, 0xbe, 0x21, 0xda, 0xbd, 0x38, 0x12, 0x3c, 0x12, 0x13, 0xd1, 0x1e, 0x77, 0xdb,
	0x42, 0x32, 0xc9, 0xcd, 0xca, 0x8f, 0xae, 0x5b, 0x19, 0xf1, 0x6e, 0xc8, 0xa5, 0x5a, 0xd6, 0x8b,
	0xa3, 0x41, 0x30, 0xd4, 0xeb, 0xe8, 0x03, 0x68, 0x9e, 0x4f, 0xba, 0xa2, 0x97, 0x04, 0x5d, 0xee,
	0xf3, 0xdf, 0x4c, 0xb8, 0x90, 0x64, 0x1b, 0x96, 0x65, 0x3c, 0x0e, 0x7a, 0xc2, 0xab, 0xec, 0x57,
	0x0f, 0x6b, 0xbe, 0xa1, 0xe8, 0xa7, 0x70, 0xc3, 0x99, 0x2b, 0xc6, 0xca, 0x16, 0xb2, 0x05, 0x4b,
	0x38, 0xec, 0x55, 0xf6, 0x2b, 0x87, 0x35, 0x5f, 0x13, 0x84, 0xc0, 0x62, 0x9f, 0x49, 0xe6, 0x2d,
	0x20, 0x13, 0xbf, 0x29, 0x81, 0xe6, 0x69, 0x1c, 0x9d, 0xb1, 0x84, 0x5d, 0x08, 0xa3, 0x8a, 0xfe,
	0x75, 0x41, 0x31, 0xfb, 0xfc, 0x59, 0x34, 0x88, 0x53, 0x91, 0xeb, 0xb0, 0x10, 0xf4, 0x8d, 0xbc,
	0x85, 0xa0, 0x4f, 0x76, 0x60, 0xb5, 0x37, 0x62, 0x41, 0xd4, 0x09, 0xfa, 0x28, 0x70, 0xcd, 0x5f,
	0x41, 0xfa, 0x59, 0x9f, 0xb4, 0x60, 0xb5, 0x17, 0x07, 0x51, 0x97, 0x09, 0xee, 0x55, 0x71, 0x41,
	0x4a, 0x93, 0x3b, 0x00, 0x63, 0xce, 0x93, 0x4e, 0x2f, 0x9e, 0x44, 0xd2, 0x5b, 0xc4, 0x85, 0x35,
	0xc5, 0x79, 0xa2, 0x18, 0x84, 0x42, 0x43, 0x5c, 0x45, 0xbd, 0x51, 0x12, 0x47, 0xc1, 0x1b, 0xde,
	0xf7, 0x96, 0xf6, 0x2b, 0x87, 0xab, 0x7e, 0x8e, 0x47, 0xee, 0x42, 0xbd, 0x3b, 0xe9, 0x7d, 0xc3,
	0x65, 0x47, 0x04, 0x6f, 0xb8, 0xb7, 0xbc, 0x5f, 0x39, 0x5c, 0xf2, 0x41, 0xb3, 0xce, 0x83, 0x37,
	0x9c, 0xbc, 0x0b, 0x4d, 0x8c, 0x63, 0x2f, 0x0e, 0x3b, 0x97, 0x3c, 0x11, 0x41, 0x1c, 0x79, 0x80,
	0x76, 0x6c, 0x58, 0xfe, 0x97, 0x9a, 0x4d, 0x8e, 0xa1, 0x9e, 0xc4, 0x13, 0xc9, 0x3b, 0x92, 0x75,
	0x43, 0xee, 0xd5, 0xf7, 0xab, 0x87, 0xf5, 0xe3, 0x1b, 0x47, 0x98, 0x16, 0x47, 0xbe, 0x1a, 0x79,
	0xa1, 0x06, 0x7c, 0x48, 0xd2, 0x6f, 0xfa, 0x11, 0x40, 0x36, 0x32, 0x15, 0x17, 0x0f, 0x56, 0x58,
	0xbf, 0x9f, 0x70, 0x21, 0xbc, 0x05, 0xdc, 0x28, 0x4b, 0xd2, 0xef, 0x2a, 0xb0, 0x79, 0xc2, 0xe5,
	0x29, 0xef, 0x9e, 0xab, 0x1c, 0x49, 0x23, 0xeb, 0x46, 0xb2, 0x92, 0x8f, 0x24, 0x81, 0x45, 0xc9,
	0x82, 0xd0, 0xee, 0x98, 0xfa, 0x26, 0x4d, 0xa8, 0x86, 0x41, 0xd7, 0x04, 0x56, 0x7d, 0xaa, 0xd4,
	0x18, 0xf1, 0x60, 0x38, 0xd2, 0xf1, 0x5c, 0xf4, 0x0d, 0x55, 0x1a, 0x87, 0xe5, 0xf2, 0x38, 0x14,
	0xe3, 0xbe, 0x52, 0x12, 0x77, 0x0f, 0x56, 0xac, 0x94, 0x55, 0x94, 0x62, 0x49, 0xfa, 0x01, 0x34,
	0x1f, 0xf5, 0x70, 0x47, 0x45, 0xea, 0xd5, 0x2e, 0xd4, 0x8c, 0xe3, 0xdc, 0xa6, 0x6c, 0xc6, 0xa0,
	0x3f, 0x81, 0xed, 0x13, 0x2e, 0xcd, 0x22, 0x13, 0x0e, 0x9d, 0xe7, 0x4e, 0xfc, 0x74, 0x50, 0x2d,
	0xe9, 0xb8, 0xb9, 0xe0, 0xba, 0x49, 0xff, 0x58, 0x81, 0x5b, 0x53, 0xc2, 0x8c, 0x15, 0x1e, 0xac,
	0x74, 0x59, 0xc8, 0xa2, 0x1e, 0xb7, 0xd2, 0x0c, 0xa9, 0x8e, 0x48, 0x14, 0x2b, 0xbe, 0x16, 0xa6,
	0x09, 0x0c, 0xf8, 0xd5, 0x58, 0xa7, 0xed, 0x9a, 0x8f, 0xdf, 0x33, 0xc3, 0xeb, 0xc1, 0xca, 0x98,
	0x47, 0xfd, 0x20, 0x1a, 0x62, 0x9a, 0x2e, 0xfa, 0x96, 0xa4, 0xbf, 0x86, 0xc6, 0x13, 0x16, 0x86,
	0xa9, 0x15, 0xdb, 0xb0, 0x9c, 0x70, 0x31, 0x09, 0xa5, 0x31, 0xc2, 0x50, 0x2a, 0x93, 0xf9, 0x6b,
	0xde, 0x53, 0xf9, 0xc7, 0x93, 0xc4, 0xec, 0x32, 0x18, 0xd6, 0x67, 0x49, 0x42, 0x0e, 0xa0, 0xc1,
	0x85, 0x0c, 0x2e, 0x98, 0xe4, 0x9d, 0x21, 0x13, 0x66, 0xd3, 0xeb, 0x96, 0x77, 0xc2, 0x04, 0x3d,
	0x82, 0xad, 0xc7, 0x57, 0x8f, 0xc3, 0xb8, 0xf7, 0xcd, 0x17, 0x68, 0x96, 0x83, 0x17, 0xc6, 0xea,
	0x4a, 0x2e, 0x5a, 0xef, 0x01, 0x39, 0xe1, 0xf2, 0xe9, 0x55, 0xc4, 0x84, 0xbc, 0x72, 0x2d, 0xbc,
	0x08, 0x22, 0x9e, 0xa4, 0xe8, 0xa2, 0x29, 0xfa, 0x97, 0x05, 0x20, 0x2f, 0x12, 0x16, 0x09, 0xd6,
	0x53, 0x90, 0x68, 0x85, 0x13, 0x58, 0x1c, 0x24, 0xf1, 0x85, 0x71, 0x07, 0xbf, 0xd5, 0x41, 0x90,
	0xb1, 0xf1, 0x61, 0x41, 0xc6, 0x2a, 0xc0, 0x97, 0x2c, 0x9c, 0x58, 0x08, 0xd0, 0x44, 0x16, 0xf6,
	0x45, 0x37, 0xec, 0xb7, 0xa1, 0x36, 0x64, 0xa2, 0x33, 0x4e, 0x82, 0x1e, 0xc7, 0x60, 0xd6, 0xfc,
	0xd5, 0x21, 0x13, 0x67, 0x8a, 0xb6, 0x83, 0x61, 0x70, 0x11, 0x48, 0x93, 0xbf, 0x6a, 0xf0, 0xb9,
	0xa2, 0xc9, 0xb1, 0xc2, 0x9a, 0x48, 0x26, 0xac, 0x27, 0x31, 0x69, 0xeb, 0xc7, 0xdb, 0xe6, 0xf4,
	0x3e, 0x31, 0x6c, 0x63, 0xb3, 0x9f, 0xce, 0x53, 0xce, 0x76, 0x83, 0x88, 0x25, 0x57, 0x88, 0x0a,
	0x0d, 0xdf, 0x50, 0x0a, 0xb7, 0xec, 0xb9, 0xf0, 0xea, 0x38, 0x92, 0xd2, 0x69, 0x62, 0x6c, 0x99,
	0x93, 0x78, 0x35, 0xe6, 0xf4, 0x0d, 0x6c, 0x14, 0x94, 0x28, 0xd1, 0x22, 0x9e, 0x24, 0x69, 0xba,
	0x19, 0x4a, 0xed, 0xb4, 0xfe, 0xea, 0xa0, 0x14, 0xb3, 0xd3, 0x9a, 0xf5, 0x42, 0x25, 0x59, 0x0b,
	0x56, 0x07, 0x93, 0x08, 0x83, 0x6c, 0x31, 0xd3, 0xd2, 0x4a, 0x37, 0x4b, 0x86, 0x02, 0x43, 0x56,
	0xf3, 0xf1, 0x9b, 0xb6, 0x61, 0xe7, 0x9c, 0x47, 0x7d, 0x9f, 0xbd, 0x2a, 0xdf, 0x1e, 0x04, 0xfa,
	0x0a, 0x3a, 0xa1, 0x81, 0xfe, 0x97, 0x70, 0x4b, 0x2d, 0xc8, 0xcd, 0xce, 0x36, 0x5f, 0xbe, 0x1e,
	0x31, 0x31, 0xb2, 0x46, 0x6b, 0x4a, 0xe1, 0x87, 0x8d, 0x59, 0x27, 0xc3, 0x34, 0xc4, 0x0f, 0xcb,
	0x7f, 0x64, 0xb0, 0xad, 0x03, 0x37, 0x4f, 0xb8, 0xc4, 0x34, 0x7c, 0x7c, 0xf5, 0x05, 0x13, 0x23,
	0xc7, 0x14, 0x47, 0x32, 0x7e, 0x93, 0x63, 0xb8, 0x39, 0x98, 0x84, 0x61, 0x67, 0x10, 0x84, 0x61,
	0x47, 0x66, 0x06, 0xa1, 0xf0, 0x55, 0x7f, 0x53, 0x0d, 0x7e, 0x1e, 0x84, 0xa1, 0x63, 0x2b, 0xe5,
	0x78, 0xc6, 0xad, 0x82, 0xef, 0x93, 0xe9, 0xff, 0x91, 0x9a, 0x87, 0x70, 0xfb, 0x84, 0x4b, 0x87,
	0x73, 0xad, 0x37, 0xf4, 0x13, 0xb8, 0x5b, 0x5c, 0x52, 0xcc, 0x8a, 0x99, 0x98, 0x46, 0xff, 0xb6,
	0x08, 0x6b, 0xe8, 0x54, 0xba, 0x19, 0x65, 0x01, 0xbb, 0x0b, 0xf5, 0x31, 0x4b, 0x78, 0x24, 0x3b,
	0x38, 0x64, 0xb2, 0x47, 0xb3, 0x94, 0x79, 0x4e, 0x08, 0xaa, 0xb9, 0x10, 0x94, 0x9f, 0x36, 0xf7,
	0x7e, 0x5e, 0x2a, 0xdc, 0xcf, 0xbb, 0x50, 0x93, 0xc1, 0x05, 0x17, 0x92, 0x5d, 0x8c, 0xf1, 0xb0,
	0x55, 0xfd, 0x8c, 0x91, 0xbb, 0xaa, 0x56, 0xf2, 0x57, 0xd5, 0x1d, 0x00, 0x2c, 0x7d, 0x3a, 0x49,
	0x1c, 0x4b, 0x73, 0x41, 0xd4, 0x90, 0xe3, 0xc7, 0xb1, 0x54, 0x2b, 0xe5, 0x6b, 0xa1, 0x07, 0x6b,
	0x3a, 0x06, 0xf2, 0xb5, 0xc0, 0x21, 0x85, 0x82, 0x97, 0x3c, 0x92, 0x66, 0x14, 0x0c, 0x0a, 0x22,
	0x0b, 0x27, 0x3c, 0x82, 0xf5, 0xb4, 0xc4, 0xd2, 0x73, 0xea, 0x78, 0xd2, 0x5b, 0x47, 0x29, 0x5b,
	0x9f, 0x77, 0xfd, 0xad, 0xd6, 0xf8, 0x6b, 0x3d, 0x97, 0x54, 0x81, 0x40, 0x44, 0xf3, 0x1a, 0x1a,
	0x8c, 0x90, 0x20, 0x7b, 0x00, 0x09, 0x8b, 0xfa, 0xf1, 0xc5, 0x39, 0xe7, 0x7d, 0x6f, 0x4d, 0x2b,
	0xce, 0x38, 0x64, 0x1f, 0xea, 0x9a, 0x3a, 0x4b, 0xe2, 0x78, 0xe0, 0xad, 0x6b, 0xf4, 0x75, 0x58,
	0xca, 0xf6, 0x40, 0x74, 0x06, 0x41, 0xc4, 0xc2, 0x40, 0x5e, 0x79, 0x1b, 0x98, 0x59, 0x10, 0x88,
	0xcf, 0x0d, 0x87, 0xfc, 0x18, 0x1a, 0x4e, 0xea, 0x09, 0xaf, 0x8f, 0x15, 0x46, 0xcb, 0x60, 0x54,
	0xc9, 0x69, 0xf4, 0x73, 0xf3, 0xe9, 0x3f, 0xab, 0xb0, 0x59, 0x76, 0x66, 0xcb, 0xd2, 0xc4, 0x03,
	0xbb, 0x1b, 0xc5, 0x8a, 0xcc, 0xe2, 0x75, 0x75, 0x0a, 0xaf, 0x17, 0xa7, 0xf1, 0x7a, 0xa9, 0x14,
	0xaf, 0x97, 0xdd, 0x0c, 0xca, 0x65, 0xc9, 0x4a, 0x31, 0x4b, 0x2c, 0x56, 0xae, 0x66, 0x58, 0x99,
	0x42, 0x52, 0x2d, 0x83, 0xa4, 0x3c, 0xea, 0xc3, 0x3c, 0xd4, 0xaf, 0x17, 0x50, 0xbf, 0x0c, 0x99,
	0x1a, 0xa5, 0xc8, 0x84, 0x88, 0x2c, 0x99, 0x9c, 0x08, 0xdc, 0xdf, 0x25, 0xdf, 0x50, 0x2a, 0x21,
	0x95, 0xfc, 0x89, 0xe0, 0x7d, 0xb3, 0xb1, 0x2b, 0x43, 0x26, 0x5e, 0x0a, 0xde, 0x27, 0xf7, 0x60,
	0xcd, 0xb9, 0x96, 0xe3, 0x04, 0xb7, 0xb5, 0xe6, 0x37, 0xb2, 0x8b, 0x39, 0x4e, 0xc8, 0xdb, 0xb0,
	0x6e, 0x27, 0x99, 0xbb, 0xbd, 0x89, 0xb3, 0xec, 0x52, 0x5f, 0x5f, 0xf1, 0x07, 0xd0, 0xe8, 0xaa,
	0xf3, 0xdd, 0x31, 0xe7, 0xf3, 0x06, 0x86, 0xb1, 0xde, 0xcd, 0x2e, 0x6c, 0xfa, 0x21, 0xdc, 0x38,
	0xe5, 0xaf, 0x4c, 0xf9, 0x62, 0x21, 0x63, 0x0f, 0x60, 0xcc, 0x84, 0x18, 0x8f, 0x12, 0x75, 0x4a,
	0x2b, 0xf6, 0xc4, 0x5b, 0x0e, 0x3d, 0x02, 0xe2, 0x2e, 0xca, 0xca, 0x9d, 0x19, 0x40, 0x13, 0xc2,
	0xd6, 0xcb, 0x48, 0x29, 0x2d, 0xe8, 0x99, 0x5d, 0x6e, 0xe5, 0x2d, 0x58, 0x28, 0x5a, 0xa0, 0x50,
	0xa4, 0x3f, 0x49, 0x58, 0x7a, 0x63, 0x2d, 0xfa, 0x29, 0x4d, 0xdb, 0x70, 0xb3, 0xa0, 0xad, 0xb4,
	0x12, 0x5a, 0xb5, 0x95, 0x90, 0x72, 0xe7, 0xf9, 0x0f, 0x30, 0x8e, 0xbe, 0x0f, 0x9b, 0xcf, 0x7f,
	0x80, 0xf8, 0x9f, 0xc1, 0xc6, 0x79, 0x30, 0x8c, 0x5c, 0x28, 0x9f, 0xed, 0xb8, 0x3d, 0x5a, 0x0b,
	0x3a, 0x55, 0xf1, 0x68, 0x35, 0xa1, 0xca, 0xc2, 0xa1, 0x29, 0x0b, 0xd5, 0x27, 0xbd, 0x0f, 0xcd,
	0x4c, 0x64, 0x76, 0x28, 0xa7, 0xee, 0xdd, 0xdf, 0xc2, 0xce, 0x09, 0x8f, 0x78, 0xa2, 0x80, 0x30,
	0x45, 0x96, 0xeb, 0x8d, 0xc8, 0x20, 0x5f, 0x28, 0x6c, 0xd2, 0xb6, 0x18, 0xc8, 0x47, 0x6c, 0xba,
	0x07, 0x6b, 0xaa, 0x8e, 0x15, 0x32, 0x4e, 0xf4, 0xad, 0x50, 0xc5, 0x29, 0x0d, 0xcb, 0x54, 0x86,
	0xd1, 0x17, 0xd0, 0x2a, 0x53, 0x9e, 0x3d, 0x3c, 0x2e, 0x93, 0x81, 0x56, 0xa0, 0x4d, 0x5e, 0xb9,
	0x4c, 0x06, 0x28, 0xfd, 0x36, 0xd4, 0xd4, 0xd0, 0x18, 0x71, 0x4f, 0x2b, 0x57, 0x73, 0x11, 0xf4,
	0xe8, 0xef, 0x60, 0x5f, 0xb9, 0xee, 0xc0, 0xd2, 0x59, 0x9a, 0x16, 0xd6, 0xb3, 0x4f, 0xa0, 0xee,
	0x5e, 0xb9, 0x15, 0x04, 0xec, 0x9d, 0x32, 0xd8, 0xd3, 0xd5, 0x99, 0x3b, 0xfb, 0xba, 0xd4, 0xa3,
	0xff, 0x0f, 0x07, 0x73, 0x0c, 0x98, 0xb3, 0x19, 0xca, 0xf2, 0x7c, 0x11, 0xf4, 0x3f, 0xb6, 0xbc,
	0x0d, 0xcd, 0x13, 0x83, 0x70, 0xa9, 0xa1, 0x39, 0x18, 0xac, 0xe4, 0x61, 0x90, 0x1e, 0x40, 0xfd,
	0xba, 0x02, 0xe4, 0x21, 0xd4, 0x4f, 0x58, 0xf6, 0xf0, 0x6a, 0x42, 0x55, 0x3d, 0x15, 0xf4, 0x0c,
	0xf5, 0xa9, 0x38, 0xd9, 0xf3, 0x42, 0x7d, 0xd2, 0x8f, 0x60, 0xfd, 0x33, 0x7d, 0xbf, 0xda, 0x55,
	0x6f, 0xc1, 0xb2, 0xbe, 0x71, 0xf1, 0x01, 0x50, 0x3f, 0x6e, 0x18, 0x87, 0x71, 0x9a, 0x6f, 0xc6,
	0xe8, 0x43, 0x58, 0x42, 0xc6, 0x0f, 0x68, 0x30, 0xdc, 0x87, 0xc6, 0xd9, 0x38, 0x89, 0x07, 0x4e,
	0xb5, 0x16, 0x06, 0x42, 0xf2, 0xc8, 0x16, 0x9b, 0x9a, 0xa2, 0xef, 0xc0, 0x9a, 0x99, 0x77, 0xcd,
	0x59, 0xfe, 0x14, 0x6e, 0x9c, 0x70, 0xf9, 0x04, 0xfb, 0x25, 0xe9, 0xe4, 0x43, 0x58, 0xd6, 0x1d,
	0x14, 0xb3, 0x5f, 0xcd, 0x23, 0xdd, 0x5a, 0xd1, 0x75, 0x81, 0x9a, 0x69, 0xc6, 0xa9, 0x84, 0xed,
	0x2f, 0x79, 0x12, 0x0c, 0xae, 0x54, 0x06, 0x31, 0x39, 0x49, 0xd2, 0x8d, 0x6f, 0x42, 0xf5, 0x42,
	0x0c, 0x6d, 0xe0, 0x2e, 0xc4, 0x50, 0x5d, 0x73, 0xc2, 0xce, 0x32, 0x4e, 0x65, 0x0c, 0xf7, 0xf0,
	0x56, 0xf3, 0x87, 0xd7, 0xa0, 0xc5, 0x62, 0x86, 0x16, 0x3f, 0x85, 0x5b, 0x53, 0x5a, 0xe7, 0xfb,
	0x99, 0x6f, 0x24, 0xe4, 0xc0, 0xef, 0x21, 0x16, 0xdb, 0xa7, 0xfe, 0xe3, 0x2b, 0x73, 0xc9, 0x5d,
	0x8f, 0x97, 0x5f, 0xe2, 0xab, 0xef, 0xd4, 0xff, 0x82, 0x45, 0xfd, 0x30, 0xf5, 0x78, 0x0b, 0x96,
	0x84, 0x64, 0x89, 0x2d, 0x9c, 0x35, 0x81, 0xe9, 0x12, 0xf5, 0xcd, 0xbb, 0x58, 0x7d, 0xba, 0x2f,
	0x7f, 0x8d, 0xf4, 0xe9, 0xcb, 0xff, 0x7d, 0xdd, 0xd2, 0x48, 0xe5, 0x66, 0x3e, 0x8d, 0x90, 0x63,
	0x37, 0x59, 0x53, 0xf4, 0x18, 0x3c, 0x9c, 0xfe, 0x3c, 0x10, 0x52, 0x55, 0xd6, 0xae, 0x31, 0xb3,
	0xd6, 0xbc, 0xc6, 0xfd, 0xd6, 0x6b, 0xdc, 0x8b, 0xce, 0x5a, 0x54, 0xc9, 0x59, 0x94, 0xf9, 0xb4,
	0x50, 0xe2, 0x53, 0x35, 0xf3, 0xe9, 0xc0, 0xe4, 0xea, 0x22, 0xa6, 0xfb, 0x9a, 0x49, 0xf7, 0x53,
	0xff, 0x99, 0xe4, 0x17, 0x26, 0x75, 0x47, 0xb0, 0xac, 0xe9, 0x39, 0x38, 0xad, 0xd4, 0xf5, 0xe2,
	0x34, 0x3d, 0x34, 0x81, 0xcf, 0x69, 0xde, 0x0f, 0x98, 0x7d, 0xcb, 0x19, 0x4a, 0xf1, 0x5f, 0x65,
	0xad, 0x84, 0x9a, 0x6f, 0x28, 0xfa, 0x7f, 0xe8, 0xe3, 0xd3, 0x67, 0x67, 0xda, 0xc9, 0xf9, 0x2f,
	0xf8, 0x37, 0xfa, 0x05, 0x6f, 0x27, 0xff, 0xd7, 0x22, 0x42, 0x73, 0x11, 0x59, 0x37, 0x11, 0x79,
	0xfa, 0xec, 0xcc, 0x09, 0xc9, 0x4b, 0x58, 0x31, 0x8c, 0x39, 0x31, 0x69, 0x39, 0x6f, 0xf2, 0x05,
	0xfb, 0xbe, 0x30, 0x6f, 0xef, 0xd2, 0xae, 0xc0, 0xf1, 0x77, 0x4d, 0x80, 0x47, 0xe3, 0xe0, 0x9c,
	0x27, 0x97, 0xaa, 0xf6, 0xfb, 0x1a, 0xea, 0x4e, 0xa3, 0x8c, 0xdc, 0xb2, 0x9b, 0x53, 0x68, 0x54,
	0xb6, 0x6c, 0x19, 0x5d, 0xd2, 0x55, 0xa3, 0x3b, 0xdf, 0xfe, 0xe3, 0x5f, 0x7f, 0x5a, 0xd8, 0x24,
	0x37, 0xda, 0x97, 0x0f, 0xdb, 0x13, 0xc1, 0x93, 0x76, 0xc4, 0xbb, 0xf8, 0x1e, 0x21, 0xbf, 0x82,
	0x5b, 0xcf, 0x99, 0xe4, 0x42, 0x3e, 0x4b, 0x12, 0x8e, 0x51, 0xea, 0x86, 0x1c, 0x5f, 0x61, 0xb3,
	0x55, 0x6d, 0x99, 0x81, 0xdc, 0x63, 0x8d, 0x6e, 0xa1, 0x92, 0x75, 0xd2, 0x48, 0x95, 0x84, 0x41,
	0x97, 0x24, 0xb0, 0x51, 0xe8, 0x47, 0x91, 0x3b, 0x99, 0xa5, 0x25, 0x4d, 0xaf, 0xd6, 0xde, 0xac,
	0x61, 0xa3, 0x67, 0x1f, 0xf5, 0xb4, 0xe8, 0xcd, 0x54, 0x0f, 0x33, 0xfd, 0x36, 0x35, 0xed, 0xe3,
	0xca, 0x03, 0x72, 0x06, 0x8b, 0x4f, 0x58, 0x18, 0x92, 0xd9, 0x17, 0x55, 0x6b, 0xd3, 0x36, 0x46,
	0x9c, 0xd6, 0x14, 0xf5, 0x50, 0x32, 0xa1, 0x6b, 0xa9, 0xe4, 0x1e, 0x0b, 0x43, 0x25, 0xf1, 0x0d,
	0x90, 0xe9, 0x0e, 0x03, 0xd9, 0x37, 0x42, 0x66, 0x36, 0x1f, 0x52, 0x5f, 0x66, 0x74, 0x1b, 0x28,
	0x45, 0x8d, 0xbb, 0xf4, 0x56, 0xaa, 0x31, 0x61, 0xaf, 0x9c, 0x3b, 0x54, 0xe9, 0x1e, 0xc1, 0x7a,
	0xbe, 0x9d, 0x40, 0x76, 0xb3, 0x08, 0x4d, 0x77, 0x19, 0x66, 0xec, 0xce, 0xb4, 0xa6, 0x61, 0x6e,
	0xb5, 0xd2, 0x14, 0x41, 0xb3, 0xd8, 0x57, 0x20, 0x7b, 0xd3, 0xba, 0xdc, 0x86, 0xc3, 0x0c, 0x6d,
	0x6f, 0xa1, 0xb6, 0x3d, 0xba, 0x53, 0xa6, 0x0d, 0xd7, 0x2b, 0x7d, 0xdf, 0x56, 0x10, 0xbc, 0x73,
	0x81, 0xe9, 0xf1, 0x60, 0x2c, 0x09, 0xcd, 0xb4, 0xce, 0xea, 0x3f, 0xb4, 0xe6, 0xbc, 0x1b, 0xe9,
	0xbb, 0xa8, 0xff, 0x1e, 0xdd, 0x73, 0xf5, 0x4f, 0xeb, 0x51, 0x46, 0xfc, 0xbe, 0x82, 0x38, 0x5c,
	0xda, 0xb3, 0x20, 0xf7, 0x67, 0xd8, 0x51, 0x68, 0x6a, 0xcc, 0xb5, 0xe5, 0x3d, 0xb4, 0xe5, 0x3e,
	0x3d, 0x98, 0x61, 0x4b, 0x26, 0x4d, 0x99, 0xd3, 0x81, 0x5a, 0xfa, 0x13, 0x46, 0x7a, 0x02, 0x8b,
	0x3f, 0x80, 0xb4, 0xbc, 0xe9, 0x01, 0xa3, 0xed, 0x0e, 0x6a, 0xbb, 0x45, 0x49, 0xaa, 0x4d, 0xd8,
	0x39, 0x1f, 0x57, 0x1e, 0x7c, 0x50, 0x31, 0x78, 0x62, 0x0b, 0xaf, 0xd9, 0x87, 0xdc, 0x0e, 0x14,
	0x4b, 0x34, 0xba, 0x8b, 0x1a, 0xb6, 0xc9, 0x96, 0xeb, 0x4f, 0x2a, 0xef, 0x6b, 0xa8, 0x7f, 0x96,
	0x75, 0x64, 0xe7, 0x1d, 0x41, 0x92, 0x29, 0x48, 0x65, 0xdf, 0x45, 0xd9, 0x3b, 0x34, 0x93, 0xed,
	0xb4, 0x77, 0x55, 0x78, 0x18, 0xc2, 0x89, 0xae, 0xd7, 0xcc, 0x69, 0xb0, 0x72, 0xdc, 0xdc, 0xb8,
	0xe9, 0x56, 0x6c, 0x99, 0xf8, 0x7b, 0x28, 0xfe, 0x0e, 0xf5, 0x5c, 0xd3, 0x5d, 0x61, 0x5a, 0x05,
	0x64, 0x4d, 0x61, 0x72, 0xdb, 0xe6, 0x77, 0x49, 0x5f, 0xb9, 0xb5, 0x93, 0xa5, 0x47, 0xa1, 0x89,
	0x4c, 0x6f, 0xa3, 0xaa, 0x9b, 0xb4, 0x99, 0xaa, 0xea, 0xeb, 0x19, 0x4a, 0xc5, 0x04, 0x36, 0x0a,
	0x15, 0x50, 0x0a, 0x8a, 0xe5, 0xf5, 0x58, 0x0a, 0x24, 0x33, 0x0a, 0xa7, 0x12, 0xcf, 0x2e, 0xf3,
	0x33, 0x95, 0xda, 0x97, 0x88, 0x24, 0x4e, 0xad, 0xe4, 0x22, 0xc9, 0x74, 0x09, 0xd5, 0xca, 0x17,
	0x02, 0x74, 0x1b, 0x75, 0x34, 0x69, 0x3d, 0xbb, 0x45, 0x12, 0x25, 0x76, 0x80, 0x7b, 0xa2, 0x6f,
	0x11, 0x5d, 0x9a, 0xcc, 0xce, 0x2a, 0xcf, 0x55, 0xe8, 0xde, 0xd9, 0x16, 0xd6, 0x49, 0x6e, 0x6f,
	0x8c, 0xd0, 0x04, 0x85, 0x72, 0x7d, 0x13, 0x9a, 0xfa, 0x8a, 0xec, 0xb8, 0xa2, 0x72, 0xe5, 0x53,
	0xee, 0x2e, 0x2c, 0x94, 0x63, 0x25, 0x29, 0x36, 0xe4, 0xf2, 0x34, 0xd1, 0xb3, 0xf4, 0xe6, 0xdc,
	0x98, 0xaa, 0xcb, 0xc8, 0xdd, 0xa2, 0xdd, 0x85, 0x8a, 0x6d, 0x8e, 0x63, 0x6f, 0xa3, 0xc2, 0xbb,
	0xb4, 0x95, 0x57, 0xe8, 0x0a, 0x71, 0xd2, 0x4e, 0x57, 0x32, 0xc4, 0x11, 0x97, 0xaf, 0x84, 0x72,
	0x39, 0x97, 0x2f, 0x7b, 0xe8, 0x1e, 0x6a, 0xf2, 0xe8, 0xa6, 0xab, 0xe9, 0x69, 0x30, 0x56, 0x93,
	0x3e, 0xae, 0x3c, 0x38, 0xfe, 0x3b, 0x40, 0xe3, 0x51, 0xff, 0x22, 0x88, 0x6c, 0x6d, 0xf1, 0x15,
	0xac, 0xda, 0xdf, 0xaa, 0xae, 0x07, 0x82, 0xe2, 0xaf, 0x5a, 0xb4, 0x85, 0xea, 0xb6, 0x08, 0x42,
	0x0d, 0x53, 0x72, 0xd3, 0x9b, 0x98, 0xf4, 0x00, 0xb2, 0x96, 0x4c, 0xea, 0xcd, 0x54, 0x6b, 0x27,
	0xf5, 0x66, 0xba, 0x7f, 0x93, 0xbf, 0xe7, 0x73, 0xe2, 0xdb, 0x11, 0x7f, 0xa5, 0x42, 0x16, 0xc3,
	0x5a, 0xae, 0xb3, 0x92, 0x1e, 0xd6, 0xb2, 0xee, 0x4e, 0x6b, 0xb7, 0x7c, 0xb0, 0xec, 0x00, 0xe5,
	0xb5, 0x4d, 0x70, 0x81, 0x52, 0x38, 0x84, 0xba, 0xd3, 0x69, 0x49, 0x33, 0x70, 0xba, 0x5b, 0x93,
	0x66, 0x60, 0x49, 0x63, 0x86, 0x1e, 0xa0, 0xaa, 0xdb, 0x74, 0x7b, 0x5a, 0x95, 0x55, 0x14, 0xc1,
	0x46, 0xa1, 0x64, 0x98, 0x87, 0xa4, 0xd7, 0x55, 0x19, 0x25, 0x91, 0x2c, 0xd4, 0x18, 0xbf, 0x80,
	0x55, 0xdb, 0xc0, 0x21, 0xf6, 0x37, 0xa3, 0x42, 0x93, 0x28, 0xcd, 0x83, 0x62, 0xa7, 0x27, 0x9f,
	0x76, 0x5a, 0xbc, 0x7a, 0x18, 0xb6, 0x47, 0x06, 0x50, 0xbf, 0xad, 0xa8, 0x22, 0xbd, 0xd8, 0x79,
	0x49, 0xab, 0xa7, 0x99, 0x1d, 0xa1, 0xd6, 0xc1, 0x9c, 0x19, 0x46, 0xf7, 0x3b, 0xa8, 0xfb, 0x80,
	0xee, 0x66, 0xba, 0x87, 0x53, 0xb3, 0x95, 0x11, 0x7f, 0xa8, 0xc0, 0x9d, 0x42, 0x9f, 0xe4, 0xe7,
	0x81, 0x1c, 0x65, 0x2d, 0x0f, 0xf2, 0x8e, 0xe3, 0xdf, 0xbc, 0xa6, 0x48, 0xeb, 0xf0, 0xfa, 0x89,
	0xf9, 0xba, 0x9b, 0xae, 0xe7, 0x23, 0xa3, 0xec, 0xf9, 0xb3, 0xb2, 0x27, 0xbf, 0x5f, 0xb3, 0xec,
	0xb9, 0xa6, 0x49, 0x73, 0xed, 0xf6, 0x1f, 0xa1, 0x15, 0x87, 0xf4, 0x5e, 0xe9, 0xf6, 0xe7, 0xb5,
	0x2a, 0xd3, 0xce, 0x01, 0xce, 0xd5, 0xb3, 0x08, 0x5b, 0x10, 0xc4, 0x56, 0xca, 0x6e, 0xe3, 0x22,
	0xad, 0xfa, 0x72, 0x5d, 0x0a, 0x0b, 0x08, 0x74, 0x23, 0x53, 0x34, 0x56, 0x13, 0x74, 0x86, 0xd5,
	0xd2, 0x4e, 0xc5, 0xf7, 0xba, 0x1e, 0xf2, 0x4d, 0x0d, 0x7b, 0x9f, 0x92, 0x4d, 0x77, 0xa3, 0xad,
	0xbc, 0xaf, 0x60, 0xd5, 0xfe, 0x47, 0xe3, 0x7a, 0x1c, 0x2b, 0xfe, 0x9b, 0xa3, 0x0c, 0xc7, 0xa2,
	0xb8, 0xcf, 0x83, 0x68, 0x10, 0x77, 0x97, 0xf1, 0x47, 0xcf, 0x0f, 0xff, 0x1d, 0x00, 0x00, 0xff,
	0xff, 0x3b, 0x5d, 0xed, 0x22, 0x28, 0x23, 0x00, 0x00,
}
