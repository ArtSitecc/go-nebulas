// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

#include "rpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace rpcpb {
class SubscribeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscribeRequest>
      _instance;
} _SubscribeRequest_default_instance_;
class SubscribeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscribeResponse>
      _instance;
} _SubscribeResponse_default_instance_;
class NonParamsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NonParamsRequest>
      _instance;
} _NonParamsRequest_default_instance_;
class NodeInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeInfoResponse>
      _instance;
} _NodeInfoResponse_default_instance_;
class RouteTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RouteTable>
      _instance;
} _RouteTable_default_instance_;
class GetNebStateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetNebStateResponse>
      _instance;
} _GetNebStateResponse_default_instance_;
class AccountsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountsResponse>
      _instance;
} _AccountsResponse_default_instance_;
class GetAccountStateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAccountStateRequest>
      _instance;
} _GetAccountStateRequest_default_instance_;
class GetAccountStateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAccountStateResponse>
      _instance;
} _GetAccountStateResponse_default_instance_;
class CallResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CallResponse>
      _instance;
} _CallResponse_default_instance_;
class ByBlockHeightRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ByBlockHeightRequest>
      _instance;
} _ByBlockHeightRequest_default_instance_;
class GetDynastyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDynastyResponse>
      _instance;
} _GetDynastyResponse_default_instance_;
class TransactionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionRequest>
      _instance;
} _TransactionRequest_default_instance_;
class ContractRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContractRequest>
      _instance;
} _ContractRequest_default_instance_;
class SendRawTransactionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendRawTransactionRequest>
      _instance;
} _SendRawTransactionRequest_default_instance_;
class SendTransactionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendTransactionResponse>
      _instance;
} _SendTransactionResponse_default_instance_;
class GetBlockByHashRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBlockByHashRequest>
      _instance;
} _GetBlockByHashRequest_default_instance_;
class GetBlockByHeightRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBlockByHeightRequest>
      _instance;
} _GetBlockByHeightRequest_default_instance_;
class GetTransactionByHashRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTransactionByHashRequest>
      _instance;
} _GetTransactionByHashRequest_default_instance_;
class GetTransactionByContractRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTransactionByContractRequest>
      _instance;
} _GetTransactionByContractRequest_default_instance_;
class BlockResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlockResponse>
      _instance;
} _BlockResponse_default_instance_;
class TransactionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionResponse>
      _instance;
} _TransactionResponse_default_instance_;
class NewAccountRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NewAccountRequest>
      _instance;
} _NewAccountRequest_default_instance_;
class NewAccountResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NewAccountResponse>
      _instance;
} _NewAccountResponse_default_instance_;
class UnlockAccountRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnlockAccountRequest>
      _instance;
} _UnlockAccountRequest_default_instance_;
class UnlockAccountResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnlockAccountResponse>
      _instance;
} _UnlockAccountResponse_default_instance_;
class LockAccountRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LockAccountRequest>
      _instance;
} _LockAccountRequest_default_instance_;
class LockAccountResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LockAccountResponse>
      _instance;
} _LockAccountResponse_default_instance_;
class SignHashRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignHashRequest>
      _instance;
} _SignHashRequest_default_instance_;
class SignHashResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignHashResponse>
      _instance;
} _SignHashResponse_default_instance_;
class GenerateRandomSeedRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateRandomSeedRequest>
      _instance;
} _GenerateRandomSeedRequest_default_instance_;
class GenerateRandomSeedResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateRandomSeedResponse>
      _instance;
} _GenerateRandomSeedResponse_default_instance_;
class SignTransactionPassphraseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignTransactionPassphraseRequest>
      _instance;
} _SignTransactionPassphraseRequest_default_instance_;
class SignTransactionPassphraseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignTransactionPassphraseResponse>
      _instance;
} _SignTransactionPassphraseResponse_default_instance_;
class SendTransactionPassphraseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendTransactionPassphraseRequest>
      _instance;
} _SendTransactionPassphraseRequest_default_instance_;
class GasPriceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GasPriceResponse>
      _instance;
} _GasPriceResponse_default_instance_;
class HashRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HashRequest>
      _instance;
} _HashRequest_default_instance_;
class GasResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GasResponse>
      _instance;
} _GasResponse_default_instance_;
class EventsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventsResponse>
      _instance;
} _EventsResponse_default_instance_;
class EventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Event>
      _instance;
} _Event_default_instance_;
class PprofRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PprofRequest>
      _instance;
} _PprofRequest_default_instance_;
class PprofResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PprofResponse>
      _instance;
} _PprofResponse_default_instance_;
class GetConfigResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetConfigResponse>
      _instance;
} _GetConfigResponse_default_instance_;
class NVMDeployRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NVMDeployRequest>
      _instance;
} _NVMDeployRequest_default_instance_;
class NVMDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NVMDataRequest>
      _instance;
} _NVMDataRequest_default_instance_;
class NVMResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NVMResponse>
      _instance;
} _NVMResponse_default_instance_;
}  // namespace rpcpb
namespace protobuf_rpc_2eproto {
void InitDefaultsSubscribeRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_SubscribeRequest_default_instance_;
    new (ptr) ::rpcpb::SubscribeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::SubscribeRequest::InitAsDefaultInstance();
}

void InitDefaultsSubscribeRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSubscribeRequestImpl);
}

void InitDefaultsSubscribeResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_SubscribeResponse_default_instance_;
    new (ptr) ::rpcpb::SubscribeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::SubscribeResponse::InitAsDefaultInstance();
}

void InitDefaultsSubscribeResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSubscribeResponseImpl);
}

void InitDefaultsNonParamsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_NonParamsRequest_default_instance_;
    new (ptr) ::rpcpb::NonParamsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::NonParamsRequest::InitAsDefaultInstance();
}

void InitDefaultsNonParamsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNonParamsRequestImpl);
}

void InitDefaultsNodeInfoResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsRouteTable();
  {
    void* ptr = &::rpcpb::_NodeInfoResponse_default_instance_;
    new (ptr) ::rpcpb::NodeInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::NodeInfoResponse::InitAsDefaultInstance();
}

void InitDefaultsNodeInfoResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNodeInfoResponseImpl);
}

void InitDefaultsRouteTableImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_RouteTable_default_instance_;
    new (ptr) ::rpcpb::RouteTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::RouteTable::InitAsDefaultInstance();
}

void InitDefaultsRouteTable() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRouteTableImpl);
}

void InitDefaultsGetNebStateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_GetNebStateResponse_default_instance_;
    new (ptr) ::rpcpb::GetNebStateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::GetNebStateResponse::InitAsDefaultInstance();
}

void InitDefaultsGetNebStateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetNebStateResponseImpl);
}

void InitDefaultsAccountsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_AccountsResponse_default_instance_;
    new (ptr) ::rpcpb::AccountsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::AccountsResponse::InitAsDefaultInstance();
}

void InitDefaultsAccountsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAccountsResponseImpl);
}

void InitDefaultsGetAccountStateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_GetAccountStateRequest_default_instance_;
    new (ptr) ::rpcpb::GetAccountStateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::GetAccountStateRequest::InitAsDefaultInstance();
}

void InitDefaultsGetAccountStateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetAccountStateRequestImpl);
}

void InitDefaultsGetAccountStateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_GetAccountStateResponse_default_instance_;
    new (ptr) ::rpcpb::GetAccountStateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::GetAccountStateResponse::InitAsDefaultInstance();
}

void InitDefaultsGetAccountStateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetAccountStateResponseImpl);
}

void InitDefaultsCallResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_CallResponse_default_instance_;
    new (ptr) ::rpcpb::CallResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::CallResponse::InitAsDefaultInstance();
}

void InitDefaultsCallResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCallResponseImpl);
}

void InitDefaultsByBlockHeightRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_ByBlockHeightRequest_default_instance_;
    new (ptr) ::rpcpb::ByBlockHeightRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::ByBlockHeightRequest::InitAsDefaultInstance();
}

void InitDefaultsByBlockHeightRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsByBlockHeightRequestImpl);
}

void InitDefaultsGetDynastyResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_GetDynastyResponse_default_instance_;
    new (ptr) ::rpcpb::GetDynastyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::GetDynastyResponse::InitAsDefaultInstance();
}

void InitDefaultsGetDynastyResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetDynastyResponseImpl);
}

void InitDefaultsTransactionRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsContractRequest();
  {
    void* ptr = &::rpcpb::_TransactionRequest_default_instance_;
    new (ptr) ::rpcpb::TransactionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::TransactionRequest::InitAsDefaultInstance();
}

void InitDefaultsTransactionRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransactionRequestImpl);
}

void InitDefaultsContractRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_ContractRequest_default_instance_;
    new (ptr) ::rpcpb::ContractRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::ContractRequest::InitAsDefaultInstance();
}

void InitDefaultsContractRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContractRequestImpl);
}

void InitDefaultsSendRawTransactionRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_SendRawTransactionRequest_default_instance_;
    new (ptr) ::rpcpb::SendRawTransactionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::SendRawTransactionRequest::InitAsDefaultInstance();
}

void InitDefaultsSendRawTransactionRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSendRawTransactionRequestImpl);
}

void InitDefaultsSendTransactionResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_SendTransactionResponse_default_instance_;
    new (ptr) ::rpcpb::SendTransactionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::SendTransactionResponse::InitAsDefaultInstance();
}

void InitDefaultsSendTransactionResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSendTransactionResponseImpl);
}

void InitDefaultsGetBlockByHashRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_GetBlockByHashRequest_default_instance_;
    new (ptr) ::rpcpb::GetBlockByHashRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::GetBlockByHashRequest::InitAsDefaultInstance();
}

void InitDefaultsGetBlockByHashRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetBlockByHashRequestImpl);
}

void InitDefaultsGetBlockByHeightRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_GetBlockByHeightRequest_default_instance_;
    new (ptr) ::rpcpb::GetBlockByHeightRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::GetBlockByHeightRequest::InitAsDefaultInstance();
}

void InitDefaultsGetBlockByHeightRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetBlockByHeightRequestImpl);
}

void InitDefaultsGetTransactionByHashRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_GetTransactionByHashRequest_default_instance_;
    new (ptr) ::rpcpb::GetTransactionByHashRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::GetTransactionByHashRequest::InitAsDefaultInstance();
}

void InitDefaultsGetTransactionByHashRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetTransactionByHashRequestImpl);
}

void InitDefaultsGetTransactionByContractRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_GetTransactionByContractRequest_default_instance_;
    new (ptr) ::rpcpb::GetTransactionByContractRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::GetTransactionByContractRequest::InitAsDefaultInstance();
}

void InitDefaultsGetTransactionByContractRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetTransactionByContractRequestImpl);
}

void InitDefaultsBlockResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fnebulasio_2fgo_2dnebulas_2fconsensus_2fpb_2fstate_2eproto::InitDefaultsConsensusRoot();
  protobuf_rpc_2eproto::InitDefaultsTransactionResponse();
  {
    void* ptr = &::rpcpb::_BlockResponse_default_instance_;
    new (ptr) ::rpcpb::BlockResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::BlockResponse::InitAsDefaultInstance();
}

void InitDefaultsBlockResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBlockResponseImpl);
}

void InitDefaultsTransactionResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_TransactionResponse_default_instance_;
    new (ptr) ::rpcpb::TransactionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::TransactionResponse::InitAsDefaultInstance();
}

void InitDefaultsTransactionResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransactionResponseImpl);
}

void InitDefaultsNewAccountRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_NewAccountRequest_default_instance_;
    new (ptr) ::rpcpb::NewAccountRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::NewAccountRequest::InitAsDefaultInstance();
}

void InitDefaultsNewAccountRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNewAccountRequestImpl);
}

void InitDefaultsNewAccountResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_NewAccountResponse_default_instance_;
    new (ptr) ::rpcpb::NewAccountResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::NewAccountResponse::InitAsDefaultInstance();
}

void InitDefaultsNewAccountResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNewAccountResponseImpl);
}

void InitDefaultsUnlockAccountRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_UnlockAccountRequest_default_instance_;
    new (ptr) ::rpcpb::UnlockAccountRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::UnlockAccountRequest::InitAsDefaultInstance();
}

void InitDefaultsUnlockAccountRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnlockAccountRequestImpl);
}

void InitDefaultsUnlockAccountResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_UnlockAccountResponse_default_instance_;
    new (ptr) ::rpcpb::UnlockAccountResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::UnlockAccountResponse::InitAsDefaultInstance();
}

void InitDefaultsUnlockAccountResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnlockAccountResponseImpl);
}

void InitDefaultsLockAccountRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_LockAccountRequest_default_instance_;
    new (ptr) ::rpcpb::LockAccountRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::LockAccountRequest::InitAsDefaultInstance();
}

void InitDefaultsLockAccountRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLockAccountRequestImpl);
}

void InitDefaultsLockAccountResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_LockAccountResponse_default_instance_;
    new (ptr) ::rpcpb::LockAccountResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::LockAccountResponse::InitAsDefaultInstance();
}

void InitDefaultsLockAccountResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLockAccountResponseImpl);
}

void InitDefaultsSignHashRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_SignHashRequest_default_instance_;
    new (ptr) ::rpcpb::SignHashRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::SignHashRequest::InitAsDefaultInstance();
}

void InitDefaultsSignHashRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSignHashRequestImpl);
}

void InitDefaultsSignHashResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_SignHashResponse_default_instance_;
    new (ptr) ::rpcpb::SignHashResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::SignHashResponse::InitAsDefaultInstance();
}

void InitDefaultsSignHashResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSignHashResponseImpl);
}

void InitDefaultsGenerateRandomSeedRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_GenerateRandomSeedRequest_default_instance_;
    new (ptr) ::rpcpb::GenerateRandomSeedRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::GenerateRandomSeedRequest::InitAsDefaultInstance();
}

void InitDefaultsGenerateRandomSeedRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGenerateRandomSeedRequestImpl);
}

void InitDefaultsGenerateRandomSeedResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_GenerateRandomSeedResponse_default_instance_;
    new (ptr) ::rpcpb::GenerateRandomSeedResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::GenerateRandomSeedResponse::InitAsDefaultInstance();
}

void InitDefaultsGenerateRandomSeedResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGenerateRandomSeedResponseImpl);
}

void InitDefaultsSignTransactionPassphraseRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsTransactionRequest();
  {
    void* ptr = &::rpcpb::_SignTransactionPassphraseRequest_default_instance_;
    new (ptr) ::rpcpb::SignTransactionPassphraseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::SignTransactionPassphraseRequest::InitAsDefaultInstance();
}

void InitDefaultsSignTransactionPassphraseRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSignTransactionPassphraseRequestImpl);
}

void InitDefaultsSignTransactionPassphraseResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_SignTransactionPassphraseResponse_default_instance_;
    new (ptr) ::rpcpb::SignTransactionPassphraseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::SignTransactionPassphraseResponse::InitAsDefaultInstance();
}

void InitDefaultsSignTransactionPassphraseResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSignTransactionPassphraseResponseImpl);
}

void InitDefaultsSendTransactionPassphraseRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsTransactionRequest();
  {
    void* ptr = &::rpcpb::_SendTransactionPassphraseRequest_default_instance_;
    new (ptr) ::rpcpb::SendTransactionPassphraseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::SendTransactionPassphraseRequest::InitAsDefaultInstance();
}

void InitDefaultsSendTransactionPassphraseRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSendTransactionPassphraseRequestImpl);
}

void InitDefaultsGasPriceResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_GasPriceResponse_default_instance_;
    new (ptr) ::rpcpb::GasPriceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::GasPriceResponse::InitAsDefaultInstance();
}

void InitDefaultsGasPriceResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGasPriceResponseImpl);
}

void InitDefaultsHashRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_HashRequest_default_instance_;
    new (ptr) ::rpcpb::HashRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::HashRequest::InitAsDefaultInstance();
}

void InitDefaultsHashRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHashRequestImpl);
}

void InitDefaultsGasResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_GasResponse_default_instance_;
    new (ptr) ::rpcpb::GasResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::GasResponse::InitAsDefaultInstance();
}

void InitDefaultsGasResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGasResponseImpl);
}

void InitDefaultsEventsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsEvent();
  {
    void* ptr = &::rpcpb::_EventsResponse_default_instance_;
    new (ptr) ::rpcpb::EventsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::EventsResponse::InitAsDefaultInstance();
}

void InitDefaultsEventsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventsResponseImpl);
}

void InitDefaultsEventImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_Event_default_instance_;
    new (ptr) ::rpcpb::Event();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::Event::InitAsDefaultInstance();
}

void InitDefaultsEvent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventImpl);
}

void InitDefaultsPprofRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_PprofRequest_default_instance_;
    new (ptr) ::rpcpb::PprofRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::PprofRequest::InitAsDefaultInstance();
}

void InitDefaultsPprofRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPprofRequestImpl);
}

void InitDefaultsPprofResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_PprofResponse_default_instance_;
    new (ptr) ::rpcpb::PprofResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::PprofResponse::InitAsDefaultInstance();
}

void InitDefaultsPprofResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPprofResponseImpl);
}

void InitDefaultsGetConfigResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fnebulasio_2fgo_2dnebulas_2fneblet_2fpb_2fconfig_2eproto::InitDefaultsConfig();
  {
    void* ptr = &::rpcpb::_GetConfigResponse_default_instance_;
    new (ptr) ::rpcpb::GetConfigResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::GetConfigResponse::InitAsDefaultInstance();
}

void InitDefaultsGetConfigResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetConfigResponseImpl);
}

void InitDefaultsNVMDeployRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_NVMDeployRequest_default_instance_;
    new (ptr) ::rpcpb::NVMDeployRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::NVMDeployRequest::InitAsDefaultInstance();
}

void InitDefaultsNVMDeployRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNVMDeployRequestImpl);
}

void InitDefaultsNVMDataRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_NVMDataRequest_default_instance_;
    new (ptr) ::rpcpb::NVMDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::NVMDataRequest::InitAsDefaultInstance();
}

void InitDefaultsNVMDataRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNVMDataRequestImpl);
}

void InitDefaultsNVMResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::rpcpb::_NVMResponse_default_instance_;
    new (ptr) ::rpcpb::NVMResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcpb::NVMResponse::InitAsDefaultInstance();
}

void InitDefaultsNVMResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNVMResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[46];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SubscribeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SubscribeRequest, topics_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SubscribeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SubscribeResponse, topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SubscribeResponse, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NonParamsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NodeInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NodeInfoResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NodeInfoResponse, chain_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NodeInfoResponse, coinbase_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NodeInfoResponse, peer_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NodeInfoResponse, synchronized_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NodeInfoResponse, bucket_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NodeInfoResponse, protocol_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NodeInfoResponse, route_table_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::RouteTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::RouteTable, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::RouteTable, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetNebStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetNebStateResponse, chain_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetNebStateResponse, tail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetNebStateResponse, lib_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetNebStateResponse, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetNebStateResponse, protocol_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetNebStateResponse, synchronized_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetNebStateResponse, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::AccountsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::AccountsResponse, addresses_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetAccountStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetAccountStateRequest, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetAccountStateRequest, height_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetAccountStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetAccountStateResponse, balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetAccountStateResponse, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetAccountStateResponse, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::CallResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::CallResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::CallResponse, execute_err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::CallResponse, estimate_gas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::ByBlockHeightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::ByBlockHeightRequest, height_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetDynastyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetDynastyResponse, miners_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionRequest, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionRequest, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionRequest, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionRequest, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionRequest, gas_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionRequest, gas_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionRequest, contract_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionRequest, binary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionRequest, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::ContractRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::ContractRequest, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::ContractRequest, source_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::ContractRequest, function_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::ContractRequest, args_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SendRawTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SendRawTransactionRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SendTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SendTransactionResponse, txhash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SendTransactionResponse, contract_address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetBlockByHashRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetBlockByHashRequest, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetBlockByHashRequest, full_fill_transaction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetBlockByHeightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetBlockByHeightRequest, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetBlockByHeightRequest, full_fill_transaction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetTransactionByHashRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetTransactionByHashRequest, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetTransactionByContractRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetTransactionByContractRequest, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::BlockResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::BlockResponse, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::BlockResponse, parent_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::BlockResponse, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::BlockResponse, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::BlockResponse, coinbase_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::BlockResponse, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::BlockResponse, chain_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::BlockResponse, state_root_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::BlockResponse, txs_root_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::BlockResponse, events_root_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::BlockResponse, consensus_root_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::BlockResponse, miner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::BlockResponse, randomseed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::BlockResponse, randomproof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::BlockResponse, is_finality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::BlockResponse, transactions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, chainid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, gas_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, gas_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, contract_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, gas_used_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, execute_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, execute_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::TransactionResponse, block_height_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NewAccountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NewAccountRequest, passphrase_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NewAccountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NewAccountResponse, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::UnlockAccountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::UnlockAccountRequest, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::UnlockAccountRequest, passphrase_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::UnlockAccountRequest, duration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::UnlockAccountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::UnlockAccountResponse, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::LockAccountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::LockAccountRequest, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::LockAccountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::LockAccountResponse, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SignHashRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SignHashRequest, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SignHashRequest, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SignHashRequest, alg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SignHashResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SignHashResponse, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GenerateRandomSeedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GenerateRandomSeedRequest, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GenerateRandomSeedRequest, parent_seed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GenerateRandomSeedRequest, ancestor_hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GenerateRandomSeedResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GenerateRandomSeedResponse, vrf_seed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GenerateRandomSeedResponse, vrf_proof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SignTransactionPassphraseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SignTransactionPassphraseRequest, transaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SignTransactionPassphraseRequest, passphrase_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SignTransactionPassphraseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SignTransactionPassphraseResponse, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SendTransactionPassphraseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SendTransactionPassphraseRequest, transaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::SendTransactionPassphraseRequest, passphrase_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GasPriceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GasPriceResponse, gas_price_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::HashRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::HashRequest, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GasResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GasResponse, gas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GasResponse, err_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::EventsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::EventsResponse, events_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::Event, topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::Event, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::PprofRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::PprofRequest, listen_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::PprofResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::PprofResponse, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::GetConfigResponse, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NVMDeployRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NVMDeployRequest, script_src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NVMDeployRequest, from_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NVMDeployRequest, block_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NVMDeployRequest, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NVMDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NVMDataRequest, request_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NVMDataRequest, script_src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NVMDataRequest, function_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NVMDataRequest, contract_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NVMDataRequest, extra_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NVMResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NVMResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcpb::NVMResponse, msg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::rpcpb::SubscribeRequest)},
  { 6, -1, sizeof(::rpcpb::SubscribeResponse)},
  { 13, -1, sizeof(::rpcpb::NonParamsRequest)},
  { 18, -1, sizeof(::rpcpb::NodeInfoResponse)},
  { 31, -1, sizeof(::rpcpb::RouteTable)},
  { 38, -1, sizeof(::rpcpb::GetNebStateResponse)},
  { 50, -1, sizeof(::rpcpb::AccountsResponse)},
  { 56, -1, sizeof(::rpcpb::GetAccountStateRequest)},
  { 63, -1, sizeof(::rpcpb::GetAccountStateResponse)},
  { 71, -1, sizeof(::rpcpb::CallResponse)},
  { 79, -1, sizeof(::rpcpb::ByBlockHeightRequest)},
  { 85, -1, sizeof(::rpcpb::GetDynastyResponse)},
  { 91, -1, sizeof(::rpcpb::TransactionRequest)},
  { 105, -1, sizeof(::rpcpb::ContractRequest)},
  { 114, -1, sizeof(::rpcpb::SendRawTransactionRequest)},
  { 120, -1, sizeof(::rpcpb::SendTransactionResponse)},
  { 127, -1, sizeof(::rpcpb::GetBlockByHashRequest)},
  { 134, -1, sizeof(::rpcpb::GetBlockByHeightRequest)},
  { 141, -1, sizeof(::rpcpb::GetTransactionByHashRequest)},
  { 147, -1, sizeof(::rpcpb::GetTransactionByContractRequest)},
  { 153, -1, sizeof(::rpcpb::BlockResponse)},
  { 174, -1, sizeof(::rpcpb::TransactionResponse)},
  { 196, -1, sizeof(::rpcpb::NewAccountRequest)},
  { 202, -1, sizeof(::rpcpb::NewAccountResponse)},
  { 208, -1, sizeof(::rpcpb::UnlockAccountRequest)},
  { 216, -1, sizeof(::rpcpb::UnlockAccountResponse)},
  { 222, -1, sizeof(::rpcpb::LockAccountRequest)},
  { 228, -1, sizeof(::rpcpb::LockAccountResponse)},
  { 234, -1, sizeof(::rpcpb::SignHashRequest)},
  { 242, -1, sizeof(::rpcpb::SignHashResponse)},
  { 248, -1, sizeof(::rpcpb::GenerateRandomSeedRequest)},
  { 256, -1, sizeof(::rpcpb::GenerateRandomSeedResponse)},
  { 263, -1, sizeof(::rpcpb::SignTransactionPassphraseRequest)},
  { 270, -1, sizeof(::rpcpb::SignTransactionPassphraseResponse)},
  { 276, -1, sizeof(::rpcpb::SendTransactionPassphraseRequest)},
  { 283, -1, sizeof(::rpcpb::GasPriceResponse)},
  { 289, -1, sizeof(::rpcpb::HashRequest)},
  { 295, -1, sizeof(::rpcpb::GasResponse)},
  { 302, -1, sizeof(::rpcpb::EventsResponse)},
  { 308, -1, sizeof(::rpcpb::Event)},
  { 315, -1, sizeof(::rpcpb::PprofRequest)},
  { 321, -1, sizeof(::rpcpb::PprofResponse)},
  { 327, -1, sizeof(::rpcpb::GetConfigResponse)},
  { 333, -1, sizeof(::rpcpb::NVMDeployRequest)},
  { 342, -1, sizeof(::rpcpb::NVMDataRequest)},
  { 352, -1, sizeof(::rpcpb::NVMResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_SubscribeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_SubscribeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_NonParamsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_NodeInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_RouteTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_GetNebStateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_AccountsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_GetAccountStateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_GetAccountStateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_CallResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_ByBlockHeightRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_GetDynastyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_TransactionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_ContractRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_SendRawTransactionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_SendTransactionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_GetBlockByHashRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_GetBlockByHeightRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_GetTransactionByHashRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_GetTransactionByContractRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_BlockResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_TransactionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_NewAccountRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_NewAccountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_UnlockAccountRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_UnlockAccountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_LockAccountRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_LockAccountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_SignHashRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_SignHashResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_GenerateRandomSeedRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_GenerateRandomSeedResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_SignTransactionPassphraseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_SignTransactionPassphraseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_SendTransactionPassphraseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_GasPriceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_HashRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_GasResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_EventsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_Event_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_PprofRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_PprofResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_GetConfigResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_NVMDeployRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_NVMDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcpb::_NVMResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "rpc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 46);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\trpc.proto\022\005rpcpb\032\034google/api/annotatio"
      "ns.proto\0328github.com/nebulasio/go-nebula"
      "s/consensus/pb/state.proto\0323github.com/n"
      "ebulasio/go-nebulas/core/pb/block.proto\032"
      "6github.com/nebulasio/go-nebulas/neblet/"
      "pb/config.proto\"\"\n\020SubscribeRequest\022\016\n\006t"
      "opics\030\001 \003(\t\"0\n\021SubscribeResponse\022\r\n\005topi"
      "c\030\001 \001(\t\022\014\n\004data\030\002 \001(\t\"\022\n\020NonParamsReques"
      "t\"\303\001\n\020NodeInfoResponse\022\n\n\002id\030\001 \001(\t\022\020\n\010ch"
      "ain_id\030\002 \001(\r\022\020\n\010coinbase\030\003 \001(\t\022\022\n\npeer_c"
      "ount\030\004 \001(\r\022\024\n\014synchronized\030\005 \001(\010\022\023\n\013buck"
      "et_size\030\006 \001(\005\022\030\n\020protocol_version\030\n \001(\t\022"
      "&\n\013route_table\030\013 \003(\0132\021.rpcpb.RouteTable\""
      ")\n\nRouteTable\022\n\n\002id\030\001 \001(\t\022\017\n\007address\030\002 \003"
      "(\t\"\223\001\n\023GetNebStateResponse\022\020\n\010chain_id\030\001"
      " \001(\r\022\014\n\004tail\030\002 \001(\t\022\013\n\003lib\030\003 \001(\t\022\016\n\006heigh"
      "t\030\004 \001(\004\022\030\n\020protocol_version\030\006 \001(\t\022\024\n\014syn"
      "chronized\030\007 \001(\010\022\017\n\007version\030\010 \001(\t\"%\n\020Acco"
      "untsResponse\022\021\n\taddresses\030\001 \003(\t\"9\n\026GetAc"
      "countStateRequest\022\017\n\007address\030\001 \001(\t\022\016\n\006he"
      "ight\030\002 \001(\004\"G\n\027GetAccountStateResponse\022\017\n"
      "\007balance\030\001 \001(\t\022\r\n\005nonce\030\002 \001(\004\022\014\n\004type\030\003 "
      "\001(\r\"I\n\014CallResponse\022\016\n\006result\030\001 \001(\t\022\023\n\013e"
      "xecute_err\030\002 \001(\t\022\024\n\014estimate_gas\030\003 \001(\t\"&"
      "\n\024ByBlockHeightRequest\022\016\n\006height\030\001 \001(\004\"$"
      "\n\022GetDynastyResponse\022\016\n\006miners\030\001 \003(\t\"\272\001\n"
      "\022TransactionRequest\022\014\n\004from\030\001 \001(\t\022\n\n\002to\030"
      "\002 \001(\t\022\r\n\005value\030\003 \001(\t\022\r\n\005nonce\030\004 \001(\004\022\021\n\tg"
      "as_price\030\005 \001(\t\022\021\n\tgas_limit\030\006 \001(\t\022(\n\010con"
      "tract\030\007 \001(\0132\026.rpcpb.ContractRequest\022\016\n\006b"
      "inary\030\n \001(\014\022\014\n\004type\030\024 \001(\t\"V\n\017ContractReq"
      "uest\022\016\n\006source\030\001 \001(\t\022\023\n\013source_type\030\002 \001("
      "\t\022\020\n\010function\030\003 \001(\t\022\014\n\004args\030\004 \001(\t\")\n\031Sen"
      "dRawTransactionRequest\022\014\n\004data\030\001 \001(\014\"C\n\027"
      "SendTransactionResponse\022\016\n\006txhash\030\001 \001(\t\022"
      "\030\n\020contract_address\030\002 \001(\t\"D\n\025GetBlockByH"
      "ashRequest\022\014\n\004hash\030\001 \001(\t\022\035\n\025full_fill_tr"
      "ansaction\030\002 \001(\010\"H\n\027GetBlockByHeightReque"
      "st\022\016\n\006height\030\001 \001(\004\022\035\n\025full_fill_transact"
      "ion\030\002 \001(\010\"+\n\033GetTransactionByHashRequest"
      "\022\014\n\004hash\030\001 \001(\t\"2\n\037GetTransactionByContra"
      "ctRequest\022\017\n\007address\030\001 \001(\t\"\366\002\n\rBlockResp"
      "onse\022\014\n\004hash\030\001 \001(\t\022\023\n\013parent_hash\030\002 \001(\t\022"
      "\016\n\006height\030\003 \001(\004\022\r\n\005nonce\030\004 \001(\004\022\020\n\010coinba"
      "se\030\005 \001(\t\022\021\n\ttimestamp\030\006 \001(\003\022\020\n\010chain_id\030"
      "\007 \001(\r\022\022\n\nstate_root\030\010 \001(\t\022\020\n\010txs_root\030\t "
      "\001(\t\022\023\n\013events_root\030\n \001(\t\0222\n\016consensus_ro"
      "ot\030\013 \001(\0132\032.consensuspb.ConsensusRoot\022\r\n\005"
      "miner\030\014 \001(\t\022\022\n\nrandomSeed\030\r \001(\t\022\023\n\013rando"
      "mProof\030\016 \001(\t\022\023\n\013is_finality\030\017 \001(\010\0220\n\014tra"
      "nsactions\030d \003(\0132\032.rpcpb.TransactionRespo"
      "nse\"\302\002\n\023TransactionResponse\022\014\n\004hash\030\001 \001("
      "\t\022\017\n\007chainId\030\002 \001(\r\022\014\n\004from\030\003 \001(\t\022\n\n\002to\030\004"
      " \001(\t\022\r\n\005value\030\005 \001(\t\022\r\n\005nonce\030\006 \001(\004\022\021\n\tti"
      "mestamp\030\007 \001(\003\022\014\n\004type\030\010 \001(\t\022\014\n\004data\030\t \001("
      "\014\022\021\n\tgas_price\030\n \001(\t\022\021\n\tgas_limit\030\013 \001(\t\022"
      "\030\n\020contract_address\030\014 \001(\t\022\016\n\006status\030\r \001("
      "\005\022\020\n\010gas_used\030\016 \001(\t\022\025\n\rexecute_error\030\017 \001"
      "(\t\022\026\n\016execute_result\030\020 \001(\t\022\024\n\014block_heig"
      "ht\030\021 \001(\004\"\'\n\021NewAccountRequest\022\022\n\npassphr"
      "ase\030\001 \001(\t\"%\n\022NewAccountResponse\022\017\n\007addre"
      "ss\030\001 \001(\t\"M\n\024UnlockAccountRequest\022\017\n\007addr"
      "ess\030\001 \001(\t\022\022\n\npassphrase\030\002 \001(\t\022\020\n\010duratio"
      "n\030\003 \001(\004\"\'\n\025UnlockAccountResponse\022\016\n\006resu"
      "lt\030\001 \001(\010\"%\n\022LockAccountRequest\022\017\n\007addres"
      "s\030\001 \001(\t\"%\n\023LockAccountResponse\022\016\n\006result"
      "\030\001 \001(\010\"=\n\017SignHashRequest\022\017\n\007address\030\001 \001"
      "(\t\022\014\n\004hash\030\002 \001(\014\022\013\n\003alg\030\003 \001(\r\" \n\020SignHas"
      "hResponse\022\014\n\004data\030\001 \001(\014\"X\n\031GenerateRando"
      "mSeedRequest\022\017\n\007address\030\001 \001(\t\022\023\n\013parent_"
      "seed\030\002 \001(\014\022\025\n\rancestor_hash\030\003 \001(\014\"A\n\032Gen"
      "erateRandomSeedResponse\022\020\n\010vrf_seed\030\001 \001("
      "\014\022\021\n\tvrf_proof\030\002 \001(\014\"f\n SignTransactionP"
      "assphraseRequest\022.\n\013transaction\030\001 \001(\0132\031."
      "rpcpb.TransactionRequest\022\022\n\npassphrase\030\002"
      " \001(\t\"1\n!SignTransactionPassphraseRespons"
      "e\022\014\n\004data\030\001 \001(\014\"f\n SendTransactionPassph"
      "raseRequest\022.\n\013transaction\030\001 \001(\0132\031.rpcpb"
      ".TransactionRequest\022\022\n\npassphrase\030\002 \001(\t\""
      "%\n\020GasPriceResponse\022\021\n\tgas_price\030\001 \001(\t\"\033"
      "\n\013HashRequest\022\014\n\004hash\030\001 \001(\t\"\'\n\013GasRespon"
      "se\022\013\n\003gas\030\001 \001(\t\022\013\n\003err\030\002 \001(\t\".\n\016EventsRe"
      "sponse\022\034\n\006events\030\001 \003(\0132\014.rpcpb.Event\"$\n\005"
      "Event\022\r\n\005topic\030\001 \001(\t\022\014\n\004data\030\002 \001(\t\"\036\n\014Pp"
      "rofRequest\022\016\n\006listen\030\001 \001(\t\"\037\n\rPprofRespo"
      "nse\022\016\n\006result\030\001 \001(\010\"5\n\021GetConfigResponse"
      "\022 \n\006config\030\001 \001(\0132\020.nebletpb.Config\"]\n\020NV"
      "MDeployRequest\022\022\n\nscript_src\030\001 \001(\t\022\021\n\tfr"
      "om_addr\030\002 \001(\t\022\024\n\014block_height\030\003 \001(\003\022\014\n\004t"
      "ype\030\004 \001(\t\"|\n\016NVMDataRequest\022\024\n\014request_t"
      "ype\030\001 \001(\t\022\022\n\nscript_src\030\002 \001(\t\022\025\n\rfunctio"
      "n_name\030\003 \001(\t\022\025\n\rcontract_addr\030\004 \001(\t\022\022\n\ne"
      "xtra_data\030\005 \001(\t\"*\n\013NVMResponse\022\016\n\006result"
      "\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t2\340\013\n\nApiService\022]\n\013Ge"
      "tNebState\022\027.rpcpb.NonParamsRequest\032\032.rpc"
      "pb.GetNebStateResponse\"\031\202\323\344\223\002\023\022\021/v1/user"
      "/nebstate\022^\n\027LatestIrreversibleBlock\022\027.r"
      "pcpb.NonParamsRequest\032\024.rpcpb.BlockRespo"
      "nse\"\024\202\323\344\223\002\016\022\014/v1/user/lib\022r\n\017GetAccountS"
      "tate\022\035.rpcpb.GetAccountStateRequest\032\036.rp"
      "cpb.GetAccountStateResponse\" \202\323\344\223\002\032\"\025/v1"
      "/user/accountstate:\001*\022P\n\004Call\022\031.rpcpb.Tr"
      "ansactionRequest\032\023.rpcpb.CallResponse\"\030\202"
      "\323\344\223\002\022\"\r/v1/user/call:\001*\022z\n\022SendRawTransa"
      "ction\022 .rpcpb.SendRawTransactionRequest\032"
      "\036.rpcpb.SendTransactionResponse\"\"\202\323\344\223\002\034\""
      "\027/v1/user/rawtransaction:\001*\022h\n\016GetBlockB"
      "yHash\022\034.rpcpb.GetBlockByHashRequest\032\024.rp"
      "cpb.BlockResponse\"\"\202\323\344\223\002\034\"\027/v1/user/getB"
      "lockByHash:\001*\022n\n\020GetBlockByHeight\022\036.rpcp"
      "b.GetBlockByHeightRequest\032\024.rpcpb.BlockR"
      "esponse\"$\202\323\344\223\002\036\"\031/v1/user/getBlockByHeig"
      "ht:\001*\022\202\001\n\025GetTransactionReceipt\022\".rpcpb."
      "GetTransactionByHashRequest\032\032.rpcpb.Tran"
      "sactionResponse\")\202\323\344\223\002#\"\036/v1/user/getTra"
      "nsactionReceipt:\001*\022\214\001\n\030GetTransactionByC"
      "ontract\022&.rpcpb.GetTransactionByContract"
      "Request\032\032.rpcpb.TransactionResponse\",\202\323\344"
      "\223\002&\"!/v1/user/getTransactionByContract:\001"
      "*\022_\n\tSubscribe\022\027.rpcpb.SubscribeRequest\032"
      "\030.rpcpb.SubscribeResponse\"\035\202\323\344\223\002\027\"\022/v1/u"
      "ser/subscribe:\001*0\001\022]\n\013GetGasPrice\022\027.rpcp"
      "b.NonParamsRequest\032\027.rpcpb.GasPriceRespo"
      "nse\"\034\202\323\344\223\002\026\022\024/v1/user/getGasPrice\022]\n\013Est"
      "imateGas\022\031.rpcpb.TransactionRequest\032\022.rp"
      "cpb.GasResponse\"\037\202\323\344\223\002\031\"\024/v1/user/estima"
      "teGas:\001*\022a\n\017GetEventsByHash\022\022.rpcpb.Hash"
      "Request\032\025.rpcpb.EventsResponse\"#\202\323\344\223\002\035\"\030"
      "/v1/user/getEventsByHash:\001*\022a\n\nGetDynast"
      "y\022\033.rpcpb.ByBlockHeightRequest\032\031.rpcpb.G"
      "etDynastyResponse\"\033\202\323\344\223\002\025\"\020/v1/user/dyna"
      "sty:\001*2\260\n\n\014AdminService\022X\n\010Accounts\022\027.rp"
      "cpb.NonParamsRequest\032\027.rpcpb.AccountsRes"
      "ponse\"\032\202\323\344\223\002\024\022\022/v1/admin/accounts\022c\n\nNew"
      "Account\022\030.rpcpb.NewAccountRequest\032\031.rpcp"
      "b.NewAccountResponse\" \202\323\344\223\002\032\"\025/v1/admin/"
      "account/new:\001*\022o\n\rUnlockAccount\022\033.rpcpb."
      "UnlockAccountRequest\032\034.rpcpb.UnlockAccou"
      "ntResponse\"#\202\323\344\223\002\035\"\030/v1/admin/account/un"
      "lock:\001*\022g\n\013LockAccount\022\031.rpcpb.LockAccou"
      "ntRequest\032\032.rpcpb.LockAccountResponse\"!\202"
      "\323\344\223\002\033\"\026/v1/admin/account/lock:\001*\022n\n\017Send"
      "Transaction\022\031.rpcpb.TransactionRequest\032\036"
      ".rpcpb.SendTransactionResponse\" \202\323\344\223\002\032\"\025"
      "/v1/admin/transaction:\001*\022[\n\010SignHash\022\026.r"
      "pcpb.SignHashRequest\032\027.rpcpb.SignHashRes"
      "ponse\"\036\202\323\344\223\002\030\"\023/v1/admin/sign/hash:\001*\022\202\001"
      "\n\022GenerateRandomSeed\022 .rpcpb.GenerateRan"
      "domSeedRequest\032!.rpcpb.GenerateRandomSee"
      "dResponse\"\'\202\323\344\223\002!\"\034/v1/admin/generateRan"
      "domSeed:\001*\022\215\001\n\035SignTransactionWithPassph"
      "rase\022\'.rpcpb.SignTransactionPassphraseRe"
      "quest\032(.rpcpb.SignTransactionPassphraseR"
      "esponse\"\031\202\323\344\223\002\023\"\016/v1/admin/sign:\001*\022\230\001\n\035S"
      "endTransactionWithPassphrase\022\'.rpcpb.Sen"
      "dTransactionPassphraseRequest\032\036.rpcpb.Se"
      "ndTransactionResponse\".\202\323\344\223\002(\"#/v1/admin"
      "/transactionWithPassphrase:\001*\022S\n\nStartPp"
      "rof\022\023.rpcpb.PprofRequest\032\024.rpcpb.PprofRe"
      "sponse\"\032\202\323\344\223\002\024\"\017/v1/admin/pprof:\001*\022[\n\tGe"
      "tConfig\022\027.rpcpb.NonParamsRequest\032\030.rpcpb"
      ".GetConfigResponse\"\033\202\323\344\223\002\025\022\023/v1/admin/ge"
      "tConfig\022X\n\010NodeInfo\022\027.rpcpb.NonParamsReq"
      "uest\032\027.rpcpb.NodeInfoResponse\"\032\202\323\344\223\002\024\022\022/"
      "v1/admin/nodeinfo2\226\001\n\nNVMService\022D\n\023Depl"
      "oySmartContract\022\027.rpcpb.NVMDeployRequest"
      "\032\022.rpcpb.NVMResponse\"\000\022B\n\017NVMDataExchang"
      "e\022\025.rpcpb.NVMDataRequest\032\022.rpcpb.NVMResp"
      "onse\"\000(\0010\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6738);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rpc.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_github_2ecom_2fnebulasio_2fgo_2dnebulas_2fconsensus_2fpb_2fstate_2eproto::AddDescriptors();
  ::protobuf_github_2ecom_2fnebulasio_2fgo_2dnebulas_2fcore_2fpb_2fblock_2eproto::AddDescriptors();
  ::protobuf_github_2ecom_2fnebulasio_2fgo_2dnebulas_2fneblet_2fpb_2fconfig_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_rpc_2eproto
namespace rpcpb {

// ===================================================================

void SubscribeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeRequest::kTopicsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeRequest::SubscribeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsSubscribeRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.SubscribeRequest)
}
SubscribeRequest::SubscribeRequest(const SubscribeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      topics_(from.topics_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rpcpb.SubscribeRequest)
}

void SubscribeRequest::SharedCtor() {
  _cached_size_ = 0;
}

SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.SubscribeRequest)
  SharedDtor();
}

void SubscribeRequest::SharedDtor() {
}

void SubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeRequest& SubscribeRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsSubscribeRequest();
  return *internal_default_instance();
}

SubscribeRequest* SubscribeRequest::New(::google::protobuf::Arena* arena) const {
  SubscribeRequest* n = new SubscribeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topics_.Clear();
  _internal_metadata_.Clear();
}

bool SubscribeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.SubscribeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string topics = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_topics()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topics(this->topics_size() - 1).data(),
            static_cast<int>(this->topics(this->topics_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.SubscribeRequest.topics"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.SubscribeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.SubscribeRequest)
  return false;
#undef DO_
}

void SubscribeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string topics = 1;
  for (int i = 0, n = this->topics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topics(i).data(), static_cast<int>(this->topics(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.SubscribeRequest.topics");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->topics(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.SubscribeRequest)
}

::google::protobuf::uint8* SubscribeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string topics = 1;
  for (int i = 0, n = this->topics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topics(i).data(), static_cast<int>(this->topics(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.SubscribeRequest.topics");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->topics(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.SubscribeRequest)
  return target;
}

size_t SubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.SubscribeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string topics = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->topics_size());
  for (int i = 0, n = this->topics_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->topics(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.SubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.SubscribeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.SubscribeRequest)
    MergeFrom(*source);
  }
}

void SubscribeRequest::MergeFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.SubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  topics_.MergeFrom(from.topics_);
}

void SubscribeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeRequest::CopyFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeRequest::IsInitialized() const {
  return true;
}

void SubscribeRequest::Swap(SubscribeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeRequest::InternalSwap(SubscribeRequest* other) {
  using std::swap;
  topics_.InternalSwap(&other->topics_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubscribeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeResponse::kTopicFieldNumber;
const int SubscribeResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeResponse::SubscribeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsSubscribeResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.SubscribeResponse)
}
SubscribeResponse::SubscribeResponse(const SubscribeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.SubscribeResponse)
}

void SubscribeResponse::SharedCtor() {
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SubscribeResponse::~SubscribeResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.SubscribeResponse)
  SharedDtor();
}

void SubscribeResponse::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SubscribeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeResponse& SubscribeResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsSubscribeResponse();
  return *internal_default_instance();
}

SubscribeResponse* SubscribeResponse::New(::google::protobuf::Arena* arena) const {
  SubscribeResponse* n = new SubscribeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.SubscribeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SubscribeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.SubscribeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.SubscribeResponse.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.SubscribeResponse.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.SubscribeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.SubscribeResponse)
  return false;
#undef DO_
}

void SubscribeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.SubscribeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.SubscribeResponse.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.SubscribeResponse.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.SubscribeResponse)
}

::google::protobuf::uint8* SubscribeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.SubscribeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.SubscribeResponse.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.SubscribeResponse.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.SubscribeResponse)
  return target;
}

size_t SubscribeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.SubscribeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // string data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.SubscribeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.SubscribeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.SubscribeResponse)
    MergeFrom(*source);
  }
}

void SubscribeResponse::MergeFrom(const SubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.SubscribeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void SubscribeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.SubscribeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeResponse::CopyFrom(const SubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.SubscribeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeResponse::IsInitialized() const {
  return true;
}

void SubscribeResponse::Swap(SubscribeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeResponse::InternalSwap(SubscribeResponse* other) {
  using std::swap;
  topic_.Swap(&other->topic_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribeResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NonParamsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NonParamsRequest::NonParamsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsNonParamsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.NonParamsRequest)
}
NonParamsRequest::NonParamsRequest(const NonParamsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rpcpb.NonParamsRequest)
}

void NonParamsRequest::SharedCtor() {
  _cached_size_ = 0;
}

NonParamsRequest::~NonParamsRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.NonParamsRequest)
  SharedDtor();
}

void NonParamsRequest::SharedDtor() {
}

void NonParamsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NonParamsRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NonParamsRequest& NonParamsRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsNonParamsRequest();
  return *internal_default_instance();
}

NonParamsRequest* NonParamsRequest::New(::google::protobuf::Arena* arena) const {
  NonParamsRequest* n = new NonParamsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NonParamsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.NonParamsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool NonParamsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.NonParamsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.NonParamsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.NonParamsRequest)
  return false;
#undef DO_
}

void NonParamsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.NonParamsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.NonParamsRequest)
}

::google::protobuf::uint8* NonParamsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.NonParamsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.NonParamsRequest)
  return target;
}

size_t NonParamsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.NonParamsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NonParamsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.NonParamsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NonParamsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NonParamsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.NonParamsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.NonParamsRequest)
    MergeFrom(*source);
  }
}

void NonParamsRequest::MergeFrom(const NonParamsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.NonParamsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void NonParamsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.NonParamsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NonParamsRequest::CopyFrom(const NonParamsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.NonParamsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NonParamsRequest::IsInitialized() const {
  return true;
}

void NonParamsRequest::Swap(NonParamsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NonParamsRequest::InternalSwap(NonParamsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NonParamsRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NodeInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeInfoResponse::kIdFieldNumber;
const int NodeInfoResponse::kChainIdFieldNumber;
const int NodeInfoResponse::kCoinbaseFieldNumber;
const int NodeInfoResponse::kPeerCountFieldNumber;
const int NodeInfoResponse::kSynchronizedFieldNumber;
const int NodeInfoResponse::kBucketSizeFieldNumber;
const int NodeInfoResponse::kProtocolVersionFieldNumber;
const int NodeInfoResponse::kRouteTableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeInfoResponse::NodeInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsNodeInfoResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.NodeInfoResponse)
}
NodeInfoResponse::NodeInfoResponse(const NodeInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      route_table_(from.route_table_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  coinbase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.coinbase().size() > 0) {
    coinbase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coinbase_);
  }
  protocol_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.protocol_version().size() > 0) {
    protocol_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocol_version_);
  }
  ::memcpy(&chain_id_, &from.chain_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&bucket_size_) -
    reinterpret_cast<char*>(&chain_id_)) + sizeof(bucket_size_));
  // @@protoc_insertion_point(copy_constructor:rpcpb.NodeInfoResponse)
}

void NodeInfoResponse::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coinbase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocol_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&chain_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bucket_size_) -
      reinterpret_cast<char*>(&chain_id_)) + sizeof(bucket_size_));
  _cached_size_ = 0;
}

NodeInfoResponse::~NodeInfoResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.NodeInfoResponse)
  SharedDtor();
}

void NodeInfoResponse::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coinbase_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocol_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NodeInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeInfoResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeInfoResponse& NodeInfoResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsNodeInfoResponse();
  return *internal_default_instance();
}

NodeInfoResponse* NodeInfoResponse::New(::google::protobuf::Arena* arena) const {
  NodeInfoResponse* n = new NodeInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.NodeInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  route_table_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coinbase_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocol_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&chain_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bucket_size_) -
      reinterpret_cast<char*>(&chain_id_)) + sizeof(bucket_size_));
  _internal_metadata_.Clear();
}

bool NodeInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.NodeInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.NodeInfoResponse.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 chain_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chain_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string coinbase = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_coinbase()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->coinbase().data(), static_cast<int>(this->coinbase().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.NodeInfoResponse.coinbase"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 peer_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &peer_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool synchronized = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &synchronized_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bucket_size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bucket_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string protocol_version = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protocol_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->protocol_version().data(), static_cast<int>(this->protocol_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.NodeInfoResponse.protocol_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rpcpb.RouteTable route_table = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_route_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.NodeInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.NodeInfoResponse)
  return false;
#undef DO_
}

void NodeInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.NodeInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NodeInfoResponse.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // uint32 chain_id = 2;
  if (this->chain_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->chain_id(), output);
  }

  // string coinbase = 3;
  if (this->coinbase().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coinbase().data(), static_cast<int>(this->coinbase().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NodeInfoResponse.coinbase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->coinbase(), output);
  }

  // uint32 peer_count = 4;
  if (this->peer_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->peer_count(), output);
  }

  // bool synchronized = 5;
  if (this->synchronized() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->synchronized(), output);
  }

  // int32 bucket_size = 6;
  if (this->bucket_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->bucket_size(), output);
  }

  // string protocol_version = 10;
  if (this->protocol_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocol_version().data(), static_cast<int>(this->protocol_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NodeInfoResponse.protocol_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->protocol_version(), output);
  }

  // repeated .rpcpb.RouteTable route_table = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->route_table_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->route_table(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.NodeInfoResponse)
}

::google::protobuf::uint8* NodeInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.NodeInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NodeInfoResponse.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // uint32 chain_id = 2;
  if (this->chain_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->chain_id(), target);
  }

  // string coinbase = 3;
  if (this->coinbase().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coinbase().data(), static_cast<int>(this->coinbase().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NodeInfoResponse.coinbase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->coinbase(), target);
  }

  // uint32 peer_count = 4;
  if (this->peer_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->peer_count(), target);
  }

  // bool synchronized = 5;
  if (this->synchronized() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->synchronized(), target);
  }

  // int32 bucket_size = 6;
  if (this->bucket_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->bucket_size(), target);
  }

  // string protocol_version = 10;
  if (this->protocol_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocol_version().data(), static_cast<int>(this->protocol_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NodeInfoResponse.protocol_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->protocol_version(), target);
  }

  // repeated .rpcpb.RouteTable route_table = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->route_table_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->route_table(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.NodeInfoResponse)
  return target;
}

size_t NodeInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.NodeInfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rpcpb.RouteTable route_table = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->route_table_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->route_table(static_cast<int>(i)));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string coinbase = 3;
  if (this->coinbase().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->coinbase());
  }

  // string protocol_version = 10;
  if (this->protocol_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocol_version());
  }

  // uint32 chain_id = 2;
  if (this->chain_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chain_id());
  }

  // uint32 peer_count = 4;
  if (this->peer_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->peer_count());
  }

  // bool synchronized = 5;
  if (this->synchronized() != 0) {
    total_size += 1 + 1;
  }

  // int32 bucket_size = 6;
  if (this->bucket_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bucket_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.NodeInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.NodeInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.NodeInfoResponse)
    MergeFrom(*source);
  }
}

void NodeInfoResponse::MergeFrom(const NodeInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.NodeInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  route_table_.MergeFrom(from.route_table_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.coinbase().size() > 0) {

    coinbase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coinbase_);
  }
  if (from.protocol_version().size() > 0) {

    protocol_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocol_version_);
  }
  if (from.chain_id() != 0) {
    set_chain_id(from.chain_id());
  }
  if (from.peer_count() != 0) {
    set_peer_count(from.peer_count());
  }
  if (from.synchronized() != 0) {
    set_synchronized(from.synchronized());
  }
  if (from.bucket_size() != 0) {
    set_bucket_size(from.bucket_size());
  }
}

void NodeInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.NodeInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeInfoResponse::CopyFrom(const NodeInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.NodeInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeInfoResponse::IsInitialized() const {
  return true;
}

void NodeInfoResponse::Swap(NodeInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeInfoResponse::InternalSwap(NodeInfoResponse* other) {
  using std::swap;
  route_table_.InternalSwap(&other->route_table_);
  id_.Swap(&other->id_);
  coinbase_.Swap(&other->coinbase_);
  protocol_version_.Swap(&other->protocol_version_);
  swap(chain_id_, other->chain_id_);
  swap(peer_count_, other->peer_count_);
  swap(synchronized_, other->synchronized_);
  swap(bucket_size_, other->bucket_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeInfoResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RouteTable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RouteTable::kIdFieldNumber;
const int RouteTable::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RouteTable::RouteTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsRouteTable();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.RouteTable)
}
RouteTable::RouteTable(const RouteTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      address_(from.address_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.RouteTable)
}

void RouteTable::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RouteTable::~RouteTable() {
  // @@protoc_insertion_point(destructor:rpcpb.RouteTable)
  SharedDtor();
}

void RouteTable::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RouteTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RouteTable::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RouteTable& RouteTable::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsRouteTable();
  return *internal_default_instance();
}

RouteTable* RouteTable::New(::google::protobuf::Arena* arena) const {
  RouteTable* n = new RouteTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RouteTable::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.RouteTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RouteTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.RouteTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.RouteTable.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address(this->address_size() - 1).data(),
            static_cast<int>(this->address(this->address_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.RouteTable.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.RouteTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.RouteTable)
  return false;
#undef DO_
}

void RouteTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.RouteTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.RouteTable.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // repeated string address = 2;
  for (int i = 0, n = this->address_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address(i).data(), static_cast<int>(this->address(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.RouteTable.address");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->address(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.RouteTable)
}

::google::protobuf::uint8* RouteTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.RouteTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.RouteTable.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // repeated string address = 2;
  for (int i = 0, n = this->address_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address(i).data(), static_cast<int>(this->address(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.RouteTable.address");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->address(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.RouteTable)
  return target;
}

size_t RouteTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.RouteTable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string address = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->address_size());
  for (int i = 0, n = this->address_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->address(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RouteTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.RouteTable)
  GOOGLE_DCHECK_NE(&from, this);
  const RouteTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RouteTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.RouteTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.RouteTable)
    MergeFrom(*source);
  }
}

void RouteTable::MergeFrom(const RouteTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.RouteTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_.MergeFrom(from.address_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void RouteTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.RouteTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RouteTable::CopyFrom(const RouteTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.RouteTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RouteTable::IsInitialized() const {
  return true;
}

void RouteTable::Swap(RouteTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RouteTable::InternalSwap(RouteTable* other) {
  using std::swap;
  address_.InternalSwap(&other->address_);
  id_.Swap(&other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RouteTable::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetNebStateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNebStateResponse::kChainIdFieldNumber;
const int GetNebStateResponse::kTailFieldNumber;
const int GetNebStateResponse::kLibFieldNumber;
const int GetNebStateResponse::kHeightFieldNumber;
const int GetNebStateResponse::kProtocolVersionFieldNumber;
const int GetNebStateResponse::kSynchronizedFieldNumber;
const int GetNebStateResponse::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNebStateResponse::GetNebStateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsGetNebStateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.GetNebStateResponse)
}
GetNebStateResponse::GetNebStateResponse(const GetNebStateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tail().size() > 0) {
    tail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tail_);
  }
  lib_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lib().size() > 0) {
    lib_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lib_);
  }
  protocol_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.protocol_version().size() > 0) {
    protocol_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocol_version_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&synchronized_) -
    reinterpret_cast<char*>(&height_)) + sizeof(synchronized_));
  // @@protoc_insertion_point(copy_constructor:rpcpb.GetNebStateResponse)
}

void GetNebStateResponse::SharedCtor() {
  tail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lib_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocol_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&synchronized_) -
      reinterpret_cast<char*>(&height_)) + sizeof(synchronized_));
  _cached_size_ = 0;
}

GetNebStateResponse::~GetNebStateResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.GetNebStateResponse)
  SharedDtor();
}

void GetNebStateResponse::SharedDtor() {
  tail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lib_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocol_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetNebStateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNebStateResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetNebStateResponse& GetNebStateResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsGetNebStateResponse();
  return *internal_default_instance();
}

GetNebStateResponse* GetNebStateResponse::New(::google::protobuf::Arena* arena) const {
  GetNebStateResponse* n = new GetNebStateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNebStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.GetNebStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lib_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocol_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&synchronized_) -
      reinterpret_cast<char*>(&height_)) + sizeof(synchronized_));
  _internal_metadata_.Clear();
}

bool GetNebStateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.GetNebStateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 chain_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chain_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tail = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tail().data(), static_cast<int>(this->tail().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.GetNebStateResponse.tail"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lib = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lib()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lib().data(), static_cast<int>(this->lib().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.GetNebStateResponse.lib"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string protocol_version = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protocol_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->protocol_version().data(), static_cast<int>(this->protocol_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.GetNebStateResponse.protocol_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool synchronized = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &synchronized_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.GetNebStateResponse.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.GetNebStateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.GetNebStateResponse)
  return false;
#undef DO_
}

void GetNebStateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.GetNebStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 chain_id = 1;
  if (this->chain_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chain_id(), output);
  }

  // string tail = 2;
  if (this->tail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tail().data(), static_cast<int>(this->tail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetNebStateResponse.tail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tail(), output);
  }

  // string lib = 3;
  if (this->lib().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lib().data(), static_cast<int>(this->lib().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetNebStateResponse.lib");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->lib(), output);
  }

  // uint64 height = 4;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->height(), output);
  }

  // string protocol_version = 6;
  if (this->protocol_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocol_version().data(), static_cast<int>(this->protocol_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetNebStateResponse.protocol_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->protocol_version(), output);
  }

  // bool synchronized = 7;
  if (this->synchronized() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->synchronized(), output);
  }

  // string version = 8;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetNebStateResponse.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.GetNebStateResponse)
}

::google::protobuf::uint8* GetNebStateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.GetNebStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 chain_id = 1;
  if (this->chain_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chain_id(), target);
  }

  // string tail = 2;
  if (this->tail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tail().data(), static_cast<int>(this->tail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetNebStateResponse.tail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tail(), target);
  }

  // string lib = 3;
  if (this->lib().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lib().data(), static_cast<int>(this->lib().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetNebStateResponse.lib");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->lib(), target);
  }

  // uint64 height = 4;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->height(), target);
  }

  // string protocol_version = 6;
  if (this->protocol_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocol_version().data(), static_cast<int>(this->protocol_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetNebStateResponse.protocol_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->protocol_version(), target);
  }

  // bool synchronized = 7;
  if (this->synchronized() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->synchronized(), target);
  }

  // string version = 8;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetNebStateResponse.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.GetNebStateResponse)
  return target;
}

size_t GetNebStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.GetNebStateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string tail = 2;
  if (this->tail().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tail());
  }

  // string lib = 3;
  if (this->lib().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lib());
  }

  // string protocol_version = 6;
  if (this->protocol_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocol_version());
  }

  // string version = 8;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // uint64 height = 4;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->height());
  }

  // uint32 chain_id = 1;
  if (this->chain_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chain_id());
  }

  // bool synchronized = 7;
  if (this->synchronized() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNebStateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.GetNebStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNebStateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNebStateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.GetNebStateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.GetNebStateResponse)
    MergeFrom(*source);
  }
}

void GetNebStateResponse::MergeFrom(const GetNebStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.GetNebStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tail().size() > 0) {

    tail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tail_);
  }
  if (from.lib().size() > 0) {

    lib_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lib_);
  }
  if (from.protocol_version().size() > 0) {

    protocol_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocol_version_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.chain_id() != 0) {
    set_chain_id(from.chain_id());
  }
  if (from.synchronized() != 0) {
    set_synchronized(from.synchronized());
  }
}

void GetNebStateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.GetNebStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNebStateResponse::CopyFrom(const GetNebStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.GetNebStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNebStateResponse::IsInitialized() const {
  return true;
}

void GetNebStateResponse::Swap(GetNebStateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNebStateResponse::InternalSwap(GetNebStateResponse* other) {
  using std::swap;
  tail_.Swap(&other->tail_);
  lib_.Swap(&other->lib_);
  protocol_version_.Swap(&other->protocol_version_);
  version_.Swap(&other->version_);
  swap(height_, other->height_);
  swap(chain_id_, other->chain_id_);
  swap(synchronized_, other->synchronized_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNebStateResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountsResponse::kAddressesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountsResponse::AccountsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAccountsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.AccountsResponse)
}
AccountsResponse::AccountsResponse(const AccountsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      addresses_(from.addresses_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rpcpb.AccountsResponse)
}

void AccountsResponse::SharedCtor() {
  _cached_size_ = 0;
}

AccountsResponse::~AccountsResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.AccountsResponse)
  SharedDtor();
}

void AccountsResponse::SharedDtor() {
}

void AccountsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountsResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountsResponse& AccountsResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAccountsResponse();
  return *internal_default_instance();
}

AccountsResponse* AccountsResponse::New(::google::protobuf::Arena* arena) const {
  AccountsResponse* n = new AccountsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.AccountsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_.Clear();
  _internal_metadata_.Clear();
}

bool AccountsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.AccountsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string addresses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_addresses()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addresses(this->addresses_size() - 1).data(),
            static_cast<int>(this->addresses(this->addresses_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.AccountsResponse.addresses"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.AccountsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.AccountsResponse)
  return false;
#undef DO_
}

void AccountsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.AccountsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string addresses = 1;
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addresses(i).data(), static_cast<int>(this->addresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.AccountsResponse.addresses");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->addresses(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.AccountsResponse)
}

::google::protobuf::uint8* AccountsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.AccountsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string addresses = 1;
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addresses(i).data(), static_cast<int>(this->addresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.AccountsResponse.addresses");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->addresses(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.AccountsResponse)
  return target;
}

size_t AccountsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.AccountsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string addresses = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->addresses_size());
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->addresses(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.AccountsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.AccountsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.AccountsResponse)
    MergeFrom(*source);
  }
}

void AccountsResponse::MergeFrom(const AccountsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.AccountsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_.MergeFrom(from.addresses_);
}

void AccountsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.AccountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountsResponse::CopyFrom(const AccountsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.AccountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountsResponse::IsInitialized() const {
  return true;
}

void AccountsResponse::Swap(AccountsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountsResponse::InternalSwap(AccountsResponse* other) {
  using std::swap;
  addresses_.InternalSwap(&other->addresses_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountsResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAccountStateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAccountStateRequest::kAddressFieldNumber;
const int GetAccountStateRequest::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAccountStateRequest::GetAccountStateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsGetAccountStateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.GetAccountStateRequest)
}
GetAccountStateRequest::GetAccountStateRequest(const GetAccountStateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  height_ = from.height_;
  // @@protoc_insertion_point(copy_constructor:rpcpb.GetAccountStateRequest)
}

void GetAccountStateRequest::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  height_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

GetAccountStateRequest::~GetAccountStateRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.GetAccountStateRequest)
  SharedDtor();
}

void GetAccountStateRequest::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAccountStateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAccountStateRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAccountStateRequest& GetAccountStateRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsGetAccountStateRequest();
  return *internal_default_instance();
}

GetAccountStateRequest* GetAccountStateRequest::New(::google::protobuf::Arena* arena) const {
  GetAccountStateRequest* n = new GetAccountStateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAccountStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.GetAccountStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  height_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetAccountStateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.GetAccountStateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.GetAccountStateRequest.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.GetAccountStateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.GetAccountStateRequest)
  return false;
#undef DO_
}

void GetAccountStateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.GetAccountStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetAccountStateRequest.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // uint64 height = 2;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->height(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.GetAccountStateRequest)
}

::google::protobuf::uint8* GetAccountStateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.GetAccountStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetAccountStateRequest.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // uint64 height = 2;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->height(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.GetAccountStateRequest)
  return target;
}

size_t GetAccountStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.GetAccountStateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // uint64 height = 2;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAccountStateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.GetAccountStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccountStateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAccountStateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.GetAccountStateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.GetAccountStateRequest)
    MergeFrom(*source);
  }
}

void GetAccountStateRequest::MergeFrom(const GetAccountStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.GetAccountStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void GetAccountStateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.GetAccountStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccountStateRequest::CopyFrom(const GetAccountStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.GetAccountStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccountStateRequest::IsInitialized() const {
  return true;
}

void GetAccountStateRequest::Swap(GetAccountStateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAccountStateRequest::InternalSwap(GetAccountStateRequest* other) {
  using std::swap;
  address_.Swap(&other->address_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAccountStateRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAccountStateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAccountStateResponse::kBalanceFieldNumber;
const int GetAccountStateResponse::kNonceFieldNumber;
const int GetAccountStateResponse::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAccountStateResponse::GetAccountStateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsGetAccountStateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.GetAccountStateResponse)
}
GetAccountStateResponse::GetAccountStateResponse(const GetAccountStateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  balance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.balance().size() > 0) {
    balance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.balance_);
  }
  ::memcpy(&nonce_, &from.nonce_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&nonce_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:rpcpb.GetAccountStateResponse)
}

void GetAccountStateResponse::SharedCtor() {
  balance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nonce_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&nonce_)) + sizeof(type_));
  _cached_size_ = 0;
}

GetAccountStateResponse::~GetAccountStateResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.GetAccountStateResponse)
  SharedDtor();
}

void GetAccountStateResponse::SharedDtor() {
  balance_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAccountStateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAccountStateResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAccountStateResponse& GetAccountStateResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsGetAccountStateResponse();
  return *internal_default_instance();
}

GetAccountStateResponse* GetAccountStateResponse::New(::google::protobuf::Arena* arena) const {
  GetAccountStateResponse* n = new GetAccountStateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAccountStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.GetAccountStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  balance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nonce_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&nonce_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool GetAccountStateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.GetAccountStateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string balance = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_balance()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->balance().data(), static_cast<int>(this->balance().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.GetAccountStateResponse.balance"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 nonce = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.GetAccountStateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.GetAccountStateResponse)
  return false;
#undef DO_
}

void GetAccountStateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.GetAccountStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string balance = 1;
  if (this->balance().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->balance().data(), static_cast<int>(this->balance().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetAccountStateResponse.balance");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->balance(), output);
  }

  // uint64 nonce = 2;
  if (this->nonce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->nonce(), output);
  }

  // uint32 type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.GetAccountStateResponse)
}

::google::protobuf::uint8* GetAccountStateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.GetAccountStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string balance = 1;
  if (this->balance().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->balance().data(), static_cast<int>(this->balance().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetAccountStateResponse.balance");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->balance(), target);
  }

  // uint64 nonce = 2;
  if (this->nonce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->nonce(), target);
  }

  // uint32 type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.GetAccountStateResponse)
  return target;
}

size_t GetAccountStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.GetAccountStateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string balance = 1;
  if (this->balance().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->balance());
  }

  // uint64 nonce = 2;
  if (this->nonce() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nonce());
  }

  // uint32 type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAccountStateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.GetAccountStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccountStateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAccountStateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.GetAccountStateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.GetAccountStateResponse)
    MergeFrom(*source);
  }
}

void GetAccountStateResponse::MergeFrom(const GetAccountStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.GetAccountStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.balance().size() > 0) {

    balance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.balance_);
  }
  if (from.nonce() != 0) {
    set_nonce(from.nonce());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void GetAccountStateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.GetAccountStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccountStateResponse::CopyFrom(const GetAccountStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.GetAccountStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccountStateResponse::IsInitialized() const {
  return true;
}

void GetAccountStateResponse::Swap(GetAccountStateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAccountStateResponse::InternalSwap(GetAccountStateResponse* other) {
  using std::swap;
  balance_.Swap(&other->balance_);
  swap(nonce_, other->nonce_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAccountStateResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CallResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallResponse::kResultFieldNumber;
const int CallResponse::kExecuteErrFieldNumber;
const int CallResponse::kEstimateGasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallResponse::CallResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsCallResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.CallResponse)
}
CallResponse::CallResponse(const CallResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result().size() > 0) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  execute_err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.execute_err().size() > 0) {
    execute_err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.execute_err_);
  }
  estimate_gas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.estimate_gas().size() > 0) {
    estimate_gas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.estimate_gas_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.CallResponse)
}

void CallResponse::SharedCtor() {
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  execute_err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  estimate_gas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CallResponse::~CallResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.CallResponse)
  SharedDtor();
}

void CallResponse::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  execute_err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  estimate_gas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CallResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallResponse& CallResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsCallResponse();
  return *internal_default_instance();
}

CallResponse* CallResponse::New(::google::protobuf::Arena* arena) const {
  CallResponse* n = new CallResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  execute_err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  estimate_gas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CallResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.CallResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result().data(), static_cast<int>(this->result().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.CallResponse.result"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string execute_err = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_execute_err()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->execute_err().data(), static_cast<int>(this->execute_err().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.CallResponse.execute_err"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string estimate_gas = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_estimate_gas()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->estimate_gas().data(), static_cast<int>(this->estimate_gas().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.CallResponse.estimate_gas"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.CallResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.CallResponse)
  return false;
#undef DO_
}

void CallResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.CallResponse.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->result(), output);
  }

  // string execute_err = 2;
  if (this->execute_err().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->execute_err().data(), static_cast<int>(this->execute_err().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.CallResponse.execute_err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->execute_err(), output);
  }

  // string estimate_gas = 3;
  if (this->estimate_gas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->estimate_gas().data(), static_cast<int>(this->estimate_gas().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.CallResponse.estimate_gas");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->estimate_gas(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.CallResponse)
}

::google::protobuf::uint8* CallResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.CallResponse.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->result(), target);
  }

  // string execute_err = 2;
  if (this->execute_err().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->execute_err().data(), static_cast<int>(this->execute_err().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.CallResponse.execute_err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->execute_err(), target);
  }

  // string estimate_gas = 3;
  if (this->estimate_gas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->estimate_gas().data(), static_cast<int>(this->estimate_gas().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.CallResponse.estimate_gas");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->estimate_gas(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.CallResponse)
  return target;
}

size_t CallResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.CallResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  // string execute_err = 2;
  if (this->execute_err().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->execute_err());
  }

  // string estimate_gas = 3;
  if (this->estimate_gas().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->estimate_gas());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.CallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CallResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.CallResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.CallResponse)
    MergeFrom(*source);
  }
}

void CallResponse::MergeFrom(const CallResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.CallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {

    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  if (from.execute_err().size() > 0) {

    execute_err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.execute_err_);
  }
  if (from.estimate_gas().size() > 0) {

    estimate_gas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.estimate_gas_);
  }
}

void CallResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.CallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallResponse::CopyFrom(const CallResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.CallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallResponse::IsInitialized() const {
  return true;
}

void CallResponse::Swap(CallResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallResponse::InternalSwap(CallResponse* other) {
  using std::swap;
  result_.Swap(&other->result_);
  execute_err_.Swap(&other->execute_err_);
  estimate_gas_.Swap(&other->estimate_gas_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ByBlockHeightRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ByBlockHeightRequest::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ByBlockHeightRequest::ByBlockHeightRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsByBlockHeightRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.ByBlockHeightRequest)
}
ByBlockHeightRequest::ByBlockHeightRequest(const ByBlockHeightRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  height_ = from.height_;
  // @@protoc_insertion_point(copy_constructor:rpcpb.ByBlockHeightRequest)
}

void ByBlockHeightRequest::SharedCtor() {
  height_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ByBlockHeightRequest::~ByBlockHeightRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.ByBlockHeightRequest)
  SharedDtor();
}

void ByBlockHeightRequest::SharedDtor() {
}

void ByBlockHeightRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ByBlockHeightRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ByBlockHeightRequest& ByBlockHeightRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsByBlockHeightRequest();
  return *internal_default_instance();
}

ByBlockHeightRequest* ByBlockHeightRequest::New(::google::protobuf::Arena* arena) const {
  ByBlockHeightRequest* n = new ByBlockHeightRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ByBlockHeightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.ByBlockHeightRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  height_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ByBlockHeightRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.ByBlockHeightRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 height = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.ByBlockHeightRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.ByBlockHeightRequest)
  return false;
#undef DO_
}

void ByBlockHeightRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.ByBlockHeightRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 height = 1;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->height(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.ByBlockHeightRequest)
}

::google::protobuf::uint8* ByBlockHeightRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.ByBlockHeightRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 height = 1;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->height(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.ByBlockHeightRequest)
  return target;
}

size_t ByBlockHeightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.ByBlockHeightRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 height = 1;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ByBlockHeightRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.ByBlockHeightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ByBlockHeightRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ByBlockHeightRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.ByBlockHeightRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.ByBlockHeightRequest)
    MergeFrom(*source);
  }
}

void ByBlockHeightRequest::MergeFrom(const ByBlockHeightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.ByBlockHeightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.height() != 0) {
    set_height(from.height());
  }
}

void ByBlockHeightRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.ByBlockHeightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ByBlockHeightRequest::CopyFrom(const ByBlockHeightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.ByBlockHeightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ByBlockHeightRequest::IsInitialized() const {
  return true;
}

void ByBlockHeightRequest::Swap(ByBlockHeightRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ByBlockHeightRequest::InternalSwap(ByBlockHeightRequest* other) {
  using std::swap;
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ByBlockHeightRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDynastyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDynastyResponse::kMinersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDynastyResponse::GetDynastyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsGetDynastyResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.GetDynastyResponse)
}
GetDynastyResponse::GetDynastyResponse(const GetDynastyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      miners_(from.miners_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rpcpb.GetDynastyResponse)
}

void GetDynastyResponse::SharedCtor() {
  _cached_size_ = 0;
}

GetDynastyResponse::~GetDynastyResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.GetDynastyResponse)
  SharedDtor();
}

void GetDynastyResponse::SharedDtor() {
}

void GetDynastyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDynastyResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDynastyResponse& GetDynastyResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsGetDynastyResponse();
  return *internal_default_instance();
}

GetDynastyResponse* GetDynastyResponse::New(::google::protobuf::Arena* arena) const {
  GetDynastyResponse* n = new GetDynastyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDynastyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.GetDynastyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  miners_.Clear();
  _internal_metadata_.Clear();
}

bool GetDynastyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.GetDynastyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string miners = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_miners()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->miners(this->miners_size() - 1).data(),
            static_cast<int>(this->miners(this->miners_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.GetDynastyResponse.miners"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.GetDynastyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.GetDynastyResponse)
  return false;
#undef DO_
}

void GetDynastyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.GetDynastyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string miners = 1;
  for (int i = 0, n = this->miners_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->miners(i).data(), static_cast<int>(this->miners(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetDynastyResponse.miners");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->miners(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.GetDynastyResponse)
}

::google::protobuf::uint8* GetDynastyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.GetDynastyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string miners = 1;
  for (int i = 0, n = this->miners_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->miners(i).data(), static_cast<int>(this->miners(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetDynastyResponse.miners");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->miners(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.GetDynastyResponse)
  return target;
}

size_t GetDynastyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.GetDynastyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string miners = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->miners_size());
  for (int i = 0, n = this->miners_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->miners(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDynastyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.GetDynastyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDynastyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDynastyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.GetDynastyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.GetDynastyResponse)
    MergeFrom(*source);
  }
}

void GetDynastyResponse::MergeFrom(const GetDynastyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.GetDynastyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  miners_.MergeFrom(from.miners_);
}

void GetDynastyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.GetDynastyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDynastyResponse::CopyFrom(const GetDynastyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.GetDynastyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDynastyResponse::IsInitialized() const {
  return true;
}

void GetDynastyResponse::Swap(GetDynastyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDynastyResponse::InternalSwap(GetDynastyResponse* other) {
  using std::swap;
  miners_.InternalSwap(&other->miners_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetDynastyResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransactionRequest::InitAsDefaultInstance() {
  ::rpcpb::_TransactionRequest_default_instance_._instance.get_mutable()->contract_ = const_cast< ::rpcpb::ContractRequest*>(
      ::rpcpb::ContractRequest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionRequest::kFromFieldNumber;
const int TransactionRequest::kToFieldNumber;
const int TransactionRequest::kValueFieldNumber;
const int TransactionRequest::kNonceFieldNumber;
const int TransactionRequest::kGasPriceFieldNumber;
const int TransactionRequest::kGasLimitFieldNumber;
const int TransactionRequest::kContractFieldNumber;
const int TransactionRequest::kBinaryFieldNumber;
const int TransactionRequest::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionRequest::TransactionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsTransactionRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.TransactionRequest)
}
TransactionRequest::TransactionRequest(const TransactionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  gas_price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gas_price().size() > 0) {
    gas_price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_price_);
  }
  gas_limit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gas_limit().size() > 0) {
    gas_limit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_limit_);
  }
  binary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.binary().size() > 0) {
    binary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binary_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_contract()) {
    contract_ = new ::rpcpb::ContractRequest(*from.contract_);
  } else {
    contract_ = NULL;
  }
  nonce_ = from.nonce_;
  // @@protoc_insertion_point(copy_constructor:rpcpb.TransactionRequest)
}

void TransactionRequest::SharedCtor() {
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_limit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&contract_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nonce_) -
      reinterpret_cast<char*>(&contract_)) + sizeof(nonce_));
  _cached_size_ = 0;
}

TransactionRequest::~TransactionRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.TransactionRequest)
  SharedDtor();
}

void TransactionRequest::SharedDtor() {
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_limit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binary_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete contract_;
}

void TransactionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransactionRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionRequest& TransactionRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsTransactionRequest();
  return *internal_default_instance();
}

TransactionRequest* TransactionRequest::New(::google::protobuf::Arena* arena) const {
  TransactionRequest* n = new TransactionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.TransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_limit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && contract_ != NULL) {
    delete contract_;
  }
  contract_ = NULL;
  nonce_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool TransactionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.TransactionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.TransactionRequest.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.TransactionRequest.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.TransactionRequest.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 nonce = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gas_price = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gas_price()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gas_price().data(), static_cast<int>(this->gas_price().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.TransactionRequest.gas_price"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gas_limit = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gas_limit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gas_limit().data(), static_cast<int>(this->gas_limit().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.TransactionRequest.gas_limit"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rpcpb.ContractRequest contract = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_contract()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes binary = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_binary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.TransactionRequest.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.TransactionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.TransactionRequest)
  return false;
#undef DO_
}

void TransactionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.TransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionRequest.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from(), output);
  }

  // string to = 2;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionRequest.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to(), output);
  }

  // string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionRequest.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  // uint64 nonce = 4;
  if (this->nonce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->nonce(), output);
  }

  // string gas_price = 5;
  if (this->gas_price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_price().data(), static_cast<int>(this->gas_price().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionRequest.gas_price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->gas_price(), output);
  }

  // string gas_limit = 6;
  if (this->gas_limit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_limit().data(), static_cast<int>(this->gas_limit().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionRequest.gas_limit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->gas_limit(), output);
  }

  // .rpcpb.ContractRequest contract = 7;
  if (this->has_contract()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->contract_, output);
  }

  // bytes binary = 10;
  if (this->binary().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->binary(), output);
  }

  // string type = 20;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionRequest.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.TransactionRequest)
}

::google::protobuf::uint8* TransactionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.TransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionRequest.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from(), target);
  }

  // string to = 2;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionRequest.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to(), target);
  }

  // string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionRequest.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  // uint64 nonce = 4;
  if (this->nonce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->nonce(), target);
  }

  // string gas_price = 5;
  if (this->gas_price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_price().data(), static_cast<int>(this->gas_price().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionRequest.gas_price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->gas_price(), target);
  }

  // string gas_limit = 6;
  if (this->gas_limit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_limit().data(), static_cast<int>(this->gas_limit().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionRequest.gas_limit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->gas_limit(), target);
  }

  // .rpcpb.ContractRequest contract = 7;
  if (this->has_contract()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->contract_, deterministic, target);
  }

  // bytes binary = 10;
  if (this->binary().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->binary(), target);
  }

  // string type = 20;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionRequest.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.TransactionRequest)
  return target;
}

size_t TransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.TransactionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from = 1;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // string to = 2;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // string value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // string gas_price = 5;
  if (this->gas_price().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gas_price());
  }

  // string gas_limit = 6;
  if (this->gas_limit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gas_limit());
  }

  // bytes binary = 10;
  if (this->binary().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->binary());
  }

  // string type = 20;
  if (this->type().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // .rpcpb.ContractRequest contract = 7;
  if (this->has_contract()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->contract_);
  }

  // uint64 nonce = 4;
  if (this->nonce() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nonce());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransactionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.TransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.TransactionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.TransactionRequest)
    MergeFrom(*source);
  }
}

void TransactionRequest::MergeFrom(const TransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.TransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.gas_price().size() > 0) {

    gas_price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_price_);
  }
  if (from.gas_limit().size() > 0) {

    gas_limit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_limit_);
  }
  if (from.binary().size() > 0) {

    binary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binary_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_contract()) {
    mutable_contract()->::rpcpb::ContractRequest::MergeFrom(from.contract());
  }
  if (from.nonce() != 0) {
    set_nonce(from.nonce());
  }
}

void TransactionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.TransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionRequest::CopyFrom(const TransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.TransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionRequest::IsInitialized() const {
  return true;
}

void TransactionRequest::Swap(TransactionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionRequest::InternalSwap(TransactionRequest* other) {
  using std::swap;
  from_.Swap(&other->from_);
  to_.Swap(&other->to_);
  value_.Swap(&other->value_);
  gas_price_.Swap(&other->gas_price_);
  gas_limit_.Swap(&other->gas_limit_);
  binary_.Swap(&other->binary_);
  type_.Swap(&other->type_);
  swap(contract_, other->contract_);
  swap(nonce_, other->nonce_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransactionRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContractRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContractRequest::kSourceFieldNumber;
const int ContractRequest::kSourceTypeFieldNumber;
const int ContractRequest::kFunctionFieldNumber;
const int ContractRequest::kArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContractRequest::ContractRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsContractRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.ContractRequest)
}
ContractRequest::ContractRequest(const ContractRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source().size() > 0) {
    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  source_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source_type().size() > 0) {
    source_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_type_);
  }
  function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.function().size() > 0) {
    function_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_);
  }
  args_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.args().size() > 0) {
    args_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.args_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.ContractRequest)
}

void ContractRequest::SharedCtor() {
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ContractRequest::~ContractRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.ContractRequest)
  SharedDtor();
}

void ContractRequest::SharedDtor() {
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContractRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContractRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContractRequest& ContractRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsContractRequest();
  return *internal_default_instance();
}

ContractRequest* ContractRequest::New(::google::protobuf::Arena* arena) const {
  ContractRequest* n = new ContractRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContractRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.ContractRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ContractRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.ContractRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source().data(), static_cast<int>(this->source().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.ContractRequest.source"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_type().data(), static_cast<int>(this->source_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.ContractRequest.source_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string function = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->function().data(), static_cast<int>(this->function().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.ContractRequest.function"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string args = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_args()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->args().data(), static_cast<int>(this->args().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.ContractRequest.args"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.ContractRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.ContractRequest)
  return false;
#undef DO_
}

void ContractRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.ContractRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string source = 1;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.ContractRequest.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source(), output);
  }

  // string source_type = 2;
  if (this->source_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_type().data(), static_cast<int>(this->source_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.ContractRequest.source_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->source_type(), output);
  }

  // string function = 3;
  if (this->function().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function().data(), static_cast<int>(this->function().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.ContractRequest.function");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->function(), output);
  }

  // string args = 4;
  if (this->args().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args().data(), static_cast<int>(this->args().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.ContractRequest.args");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->args(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.ContractRequest)
}

::google::protobuf::uint8* ContractRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.ContractRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string source = 1;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.ContractRequest.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->source(), target);
  }

  // string source_type = 2;
  if (this->source_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_type().data(), static_cast<int>(this->source_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.ContractRequest.source_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->source_type(), target);
  }

  // string function = 3;
  if (this->function().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function().data(), static_cast<int>(this->function().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.ContractRequest.function");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->function(), target);
  }

  // string args = 4;
  if (this->args().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args().data(), static_cast<int>(this->args().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.ContractRequest.args");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->args(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.ContractRequest)
  return target;
}

size_t ContractRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.ContractRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string source = 1;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source());
  }

  // string source_type = 2;
  if (this->source_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_type());
  }

  // string function = 3;
  if (this->function().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->function());
  }

  // string args = 4;
  if (this->args().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->args());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContractRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.ContractRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ContractRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContractRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.ContractRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.ContractRequest)
    MergeFrom(*source);
  }
}

void ContractRequest::MergeFrom(const ContractRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.ContractRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.source().size() > 0) {

    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  if (from.source_type().size() > 0) {

    source_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_type_);
  }
  if (from.function().size() > 0) {

    function_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_);
  }
  if (from.args().size() > 0) {

    args_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.args_);
  }
}

void ContractRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.ContractRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContractRequest::CopyFrom(const ContractRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.ContractRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContractRequest::IsInitialized() const {
  return true;
}

void ContractRequest::Swap(ContractRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContractRequest::InternalSwap(ContractRequest* other) {
  using std::swap;
  source_.Swap(&other->source_);
  source_type_.Swap(&other->source_type_);
  function_.Swap(&other->function_);
  args_.Swap(&other->args_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContractRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendRawTransactionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendRawTransactionRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendRawTransactionRequest::SendRawTransactionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsSendRawTransactionRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.SendRawTransactionRequest)
}
SendRawTransactionRequest::SendRawTransactionRequest(const SendRawTransactionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.SendRawTransactionRequest)
}

void SendRawTransactionRequest::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SendRawTransactionRequest::~SendRawTransactionRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.SendRawTransactionRequest)
  SharedDtor();
}

void SendRawTransactionRequest::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendRawTransactionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendRawTransactionRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendRawTransactionRequest& SendRawTransactionRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsSendRawTransactionRequest();
  return *internal_default_instance();
}

SendRawTransactionRequest* SendRawTransactionRequest::New(::google::protobuf::Arena* arena) const {
  SendRawTransactionRequest* n = new SendRawTransactionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendRawTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.SendRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SendRawTransactionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.SendRawTransactionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.SendRawTransactionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.SendRawTransactionRequest)
  return false;
#undef DO_
}

void SendRawTransactionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.SendRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.SendRawTransactionRequest)
}

::google::protobuf::uint8* SendRawTransactionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.SendRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.SendRawTransactionRequest)
  return target;
}

size_t SendRawTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.SendRawTransactionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendRawTransactionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.SendRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendRawTransactionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendRawTransactionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.SendRawTransactionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.SendRawTransactionRequest)
    MergeFrom(*source);
  }
}

void SendRawTransactionRequest::MergeFrom(const SendRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.SendRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void SendRawTransactionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.SendRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendRawTransactionRequest::CopyFrom(const SendRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.SendRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendRawTransactionRequest::IsInitialized() const {
  return true;
}

void SendRawTransactionRequest::Swap(SendRawTransactionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendRawTransactionRequest::InternalSwap(SendRawTransactionRequest* other) {
  using std::swap;
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendRawTransactionRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendTransactionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendTransactionResponse::kTxhashFieldNumber;
const int SendTransactionResponse::kContractAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendTransactionResponse::SendTransactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsSendTransactionResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.SendTransactionResponse)
}
SendTransactionResponse::SendTransactionResponse(const SendTransactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  txhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.txhash().size() > 0) {
    txhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txhash_);
  }
  contract_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contract_address().size() > 0) {
    contract_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_address_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.SendTransactionResponse)
}

void SendTransactionResponse::SharedCtor() {
  txhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SendTransactionResponse::~SendTransactionResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.SendTransactionResponse)
  SharedDtor();
}

void SendTransactionResponse::SharedDtor() {
  txhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendTransactionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendTransactionResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendTransactionResponse& SendTransactionResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsSendTransactionResponse();
  return *internal_default_instance();
}

SendTransactionResponse* SendTransactionResponse::New(::google::protobuf::Arena* arena) const {
  SendTransactionResponse* n = new SendTransactionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.SendTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SendTransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.SendTransactionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string txhash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_txhash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->txhash().data(), static_cast<int>(this->txhash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.SendTransactionResponse.txhash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contract_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract_address().data(), static_cast<int>(this->contract_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.SendTransactionResponse.contract_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.SendTransactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.SendTransactionResponse)
  return false;
#undef DO_
}

void SendTransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.SendTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string txhash = 1;
  if (this->txhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txhash().data(), static_cast<int>(this->txhash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.SendTransactionResponse.txhash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->txhash(), output);
  }

  // string contract_address = 2;
  if (this->contract_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract_address().data(), static_cast<int>(this->contract_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.SendTransactionResponse.contract_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contract_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.SendTransactionResponse)
}

::google::protobuf::uint8* SendTransactionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.SendTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string txhash = 1;
  if (this->txhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txhash().data(), static_cast<int>(this->txhash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.SendTransactionResponse.txhash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->txhash(), target);
  }

  // string contract_address = 2;
  if (this->contract_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract_address().data(), static_cast<int>(this->contract_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.SendTransactionResponse.contract_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contract_address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.SendTransactionResponse)
  return target;
}

size_t SendTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.SendTransactionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string txhash = 1;
  if (this->txhash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->txhash());
  }

  // string contract_address = 2;
  if (this->contract_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract_address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendTransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.SendTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SendTransactionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendTransactionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.SendTransactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.SendTransactionResponse)
    MergeFrom(*source);
  }
}

void SendTransactionResponse::MergeFrom(const SendTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.SendTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.txhash().size() > 0) {

    txhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txhash_);
  }
  if (from.contract_address().size() > 0) {

    contract_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_address_);
  }
}

void SendTransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.SendTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendTransactionResponse::CopyFrom(const SendTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.SendTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendTransactionResponse::IsInitialized() const {
  return true;
}

void SendTransactionResponse::Swap(SendTransactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendTransactionResponse::InternalSwap(SendTransactionResponse* other) {
  using std::swap;
  txhash_.Swap(&other->txhash_);
  contract_address_.Swap(&other->contract_address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendTransactionResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBlockByHashRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBlockByHashRequest::kHashFieldNumber;
const int GetBlockByHashRequest::kFullFillTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBlockByHashRequest::GetBlockByHashRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsGetBlockByHashRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.GetBlockByHashRequest)
}
GetBlockByHashRequest::GetBlockByHashRequest(const GetBlockByHashRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  full_fill_transaction_ = from.full_fill_transaction_;
  // @@protoc_insertion_point(copy_constructor:rpcpb.GetBlockByHashRequest)
}

void GetBlockByHashRequest::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_fill_transaction_ = false;
  _cached_size_ = 0;
}

GetBlockByHashRequest::~GetBlockByHashRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.GetBlockByHashRequest)
  SharedDtor();
}

void GetBlockByHashRequest::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetBlockByHashRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBlockByHashRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBlockByHashRequest& GetBlockByHashRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsGetBlockByHashRequest();
  return *internal_default_instance();
}

GetBlockByHashRequest* GetBlockByHashRequest::New(::google::protobuf::Arena* arena) const {
  GetBlockByHashRequest* n = new GetBlockByHashRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBlockByHashRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.GetBlockByHashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_fill_transaction_ = false;
  _internal_metadata_.Clear();
}

bool GetBlockByHashRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.GetBlockByHashRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash().data(), static_cast<int>(this->hash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.GetBlockByHashRequest.hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool full_fill_transaction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &full_fill_transaction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.GetBlockByHashRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.GetBlockByHashRequest)
  return false;
#undef DO_
}

void GetBlockByHashRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.GetBlockByHashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetBlockByHashRequest.hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hash(), output);
  }

  // bool full_fill_transaction = 2;
  if (this->full_fill_transaction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->full_fill_transaction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.GetBlockByHashRequest)
}

::google::protobuf::uint8* GetBlockByHashRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.GetBlockByHashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetBlockByHashRequest.hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hash(), target);
  }

  // bool full_fill_transaction = 2;
  if (this->full_fill_transaction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->full_fill_transaction(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.GetBlockByHashRequest)
  return target;
}

size_t GetBlockByHashRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.GetBlockByHashRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash());
  }

  // bool full_fill_transaction = 2;
  if (this->full_fill_transaction() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBlockByHashRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.GetBlockByHashRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockByHashRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBlockByHashRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.GetBlockByHashRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.GetBlockByHashRequest)
    MergeFrom(*source);
  }
}

void GetBlockByHashRequest::MergeFrom(const GetBlockByHashRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.GetBlockByHashRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.full_fill_transaction() != 0) {
    set_full_fill_transaction(from.full_fill_transaction());
  }
}

void GetBlockByHashRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.GetBlockByHashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockByHashRequest::CopyFrom(const GetBlockByHashRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.GetBlockByHashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockByHashRequest::IsInitialized() const {
  return true;
}

void GetBlockByHashRequest::Swap(GetBlockByHashRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBlockByHashRequest::InternalSwap(GetBlockByHashRequest* other) {
  using std::swap;
  hash_.Swap(&other->hash_);
  swap(full_fill_transaction_, other->full_fill_transaction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBlockByHashRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBlockByHeightRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBlockByHeightRequest::kHeightFieldNumber;
const int GetBlockByHeightRequest::kFullFillTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBlockByHeightRequest::GetBlockByHeightRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsGetBlockByHeightRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.GetBlockByHeightRequest)
}
GetBlockByHeightRequest::GetBlockByHeightRequest(const GetBlockByHeightRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&full_fill_transaction_) -
    reinterpret_cast<char*>(&height_)) + sizeof(full_fill_transaction_));
  // @@protoc_insertion_point(copy_constructor:rpcpb.GetBlockByHeightRequest)
}

void GetBlockByHeightRequest::SharedCtor() {
  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&full_fill_transaction_) -
      reinterpret_cast<char*>(&height_)) + sizeof(full_fill_transaction_));
  _cached_size_ = 0;
}

GetBlockByHeightRequest::~GetBlockByHeightRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.GetBlockByHeightRequest)
  SharedDtor();
}

void GetBlockByHeightRequest::SharedDtor() {
}

void GetBlockByHeightRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBlockByHeightRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBlockByHeightRequest& GetBlockByHeightRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsGetBlockByHeightRequest();
  return *internal_default_instance();
}

GetBlockByHeightRequest* GetBlockByHeightRequest::New(::google::protobuf::Arena* arena) const {
  GetBlockByHeightRequest* n = new GetBlockByHeightRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBlockByHeightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.GetBlockByHeightRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&full_fill_transaction_) -
      reinterpret_cast<char*>(&height_)) + sizeof(full_fill_transaction_));
  _internal_metadata_.Clear();
}

bool GetBlockByHeightRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.GetBlockByHeightRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 height = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool full_fill_transaction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &full_fill_transaction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.GetBlockByHeightRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.GetBlockByHeightRequest)
  return false;
#undef DO_
}

void GetBlockByHeightRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.GetBlockByHeightRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 height = 1;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->height(), output);
  }

  // bool full_fill_transaction = 2;
  if (this->full_fill_transaction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->full_fill_transaction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.GetBlockByHeightRequest)
}

::google::protobuf::uint8* GetBlockByHeightRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.GetBlockByHeightRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 height = 1;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->height(), target);
  }

  // bool full_fill_transaction = 2;
  if (this->full_fill_transaction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->full_fill_transaction(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.GetBlockByHeightRequest)
  return target;
}

size_t GetBlockByHeightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.GetBlockByHeightRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 height = 1;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->height());
  }

  // bool full_fill_transaction = 2;
  if (this->full_fill_transaction() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBlockByHeightRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.GetBlockByHeightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockByHeightRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBlockByHeightRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.GetBlockByHeightRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.GetBlockByHeightRequest)
    MergeFrom(*source);
  }
}

void GetBlockByHeightRequest::MergeFrom(const GetBlockByHeightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.GetBlockByHeightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.full_fill_transaction() != 0) {
    set_full_fill_transaction(from.full_fill_transaction());
  }
}

void GetBlockByHeightRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.GetBlockByHeightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockByHeightRequest::CopyFrom(const GetBlockByHeightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.GetBlockByHeightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockByHeightRequest::IsInitialized() const {
  return true;
}

void GetBlockByHeightRequest::Swap(GetBlockByHeightRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBlockByHeightRequest::InternalSwap(GetBlockByHeightRequest* other) {
  using std::swap;
  swap(height_, other->height_);
  swap(full_fill_transaction_, other->full_fill_transaction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBlockByHeightRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTransactionByHashRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTransactionByHashRequest::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTransactionByHashRequest::GetTransactionByHashRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsGetTransactionByHashRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.GetTransactionByHashRequest)
}
GetTransactionByHashRequest::GetTransactionByHashRequest(const GetTransactionByHashRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.GetTransactionByHashRequest)
}

void GetTransactionByHashRequest::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetTransactionByHashRequest::~GetTransactionByHashRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.GetTransactionByHashRequest)
  SharedDtor();
}

void GetTransactionByHashRequest::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetTransactionByHashRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetTransactionByHashRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTransactionByHashRequest& GetTransactionByHashRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsGetTransactionByHashRequest();
  return *internal_default_instance();
}

GetTransactionByHashRequest* GetTransactionByHashRequest::New(::google::protobuf::Arena* arena) const {
  GetTransactionByHashRequest* n = new GetTransactionByHashRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetTransactionByHashRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.GetTransactionByHashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetTransactionByHashRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.GetTransactionByHashRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash().data(), static_cast<int>(this->hash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.GetTransactionByHashRequest.hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.GetTransactionByHashRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.GetTransactionByHashRequest)
  return false;
#undef DO_
}

void GetTransactionByHashRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.GetTransactionByHashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetTransactionByHashRequest.hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.GetTransactionByHashRequest)
}

::google::protobuf::uint8* GetTransactionByHashRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.GetTransactionByHashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetTransactionByHashRequest.hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hash(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.GetTransactionByHashRequest)
  return target;
}

size_t GetTransactionByHashRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.GetTransactionByHashRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetTransactionByHashRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.GetTransactionByHashRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTransactionByHashRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTransactionByHashRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.GetTransactionByHashRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.GetTransactionByHashRequest)
    MergeFrom(*source);
  }
}

void GetTransactionByHashRequest::MergeFrom(const GetTransactionByHashRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.GetTransactionByHashRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
}

void GetTransactionByHashRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.GetTransactionByHashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTransactionByHashRequest::CopyFrom(const GetTransactionByHashRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.GetTransactionByHashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTransactionByHashRequest::IsInitialized() const {
  return true;
}

void GetTransactionByHashRequest::Swap(GetTransactionByHashRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTransactionByHashRequest::InternalSwap(GetTransactionByHashRequest* other) {
  using std::swap;
  hash_.Swap(&other->hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetTransactionByHashRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTransactionByContractRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTransactionByContractRequest::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTransactionByContractRequest::GetTransactionByContractRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsGetTransactionByContractRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.GetTransactionByContractRequest)
}
GetTransactionByContractRequest::GetTransactionByContractRequest(const GetTransactionByContractRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.GetTransactionByContractRequest)
}

void GetTransactionByContractRequest::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetTransactionByContractRequest::~GetTransactionByContractRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.GetTransactionByContractRequest)
  SharedDtor();
}

void GetTransactionByContractRequest::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetTransactionByContractRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetTransactionByContractRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTransactionByContractRequest& GetTransactionByContractRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsGetTransactionByContractRequest();
  return *internal_default_instance();
}

GetTransactionByContractRequest* GetTransactionByContractRequest::New(::google::protobuf::Arena* arena) const {
  GetTransactionByContractRequest* n = new GetTransactionByContractRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetTransactionByContractRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.GetTransactionByContractRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetTransactionByContractRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.GetTransactionByContractRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.GetTransactionByContractRequest.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.GetTransactionByContractRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.GetTransactionByContractRequest)
  return false;
#undef DO_
}

void GetTransactionByContractRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.GetTransactionByContractRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetTransactionByContractRequest.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.GetTransactionByContractRequest)
}

::google::protobuf::uint8* GetTransactionByContractRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.GetTransactionByContractRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GetTransactionByContractRequest.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.GetTransactionByContractRequest)
  return target;
}

size_t GetTransactionByContractRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.GetTransactionByContractRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetTransactionByContractRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.GetTransactionByContractRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTransactionByContractRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTransactionByContractRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.GetTransactionByContractRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.GetTransactionByContractRequest)
    MergeFrom(*source);
  }
}

void GetTransactionByContractRequest::MergeFrom(const GetTransactionByContractRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.GetTransactionByContractRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void GetTransactionByContractRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.GetTransactionByContractRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTransactionByContractRequest::CopyFrom(const GetTransactionByContractRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.GetTransactionByContractRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTransactionByContractRequest::IsInitialized() const {
  return true;
}

void GetTransactionByContractRequest::Swap(GetTransactionByContractRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTransactionByContractRequest::InternalSwap(GetTransactionByContractRequest* other) {
  using std::swap;
  address_.Swap(&other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetTransactionByContractRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BlockResponse::InitAsDefaultInstance() {
  ::rpcpb::_BlockResponse_default_instance_._instance.get_mutable()->consensus_root_ = const_cast< ::consensuspb::ConsensusRoot*>(
      ::consensuspb::ConsensusRoot::internal_default_instance());
}
void BlockResponse::clear_consensus_root() {
  if (GetArenaNoVirtual() == NULL && consensus_root_ != NULL) {
    delete consensus_root_;
  }
  consensus_root_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockResponse::kHashFieldNumber;
const int BlockResponse::kParentHashFieldNumber;
const int BlockResponse::kHeightFieldNumber;
const int BlockResponse::kNonceFieldNumber;
const int BlockResponse::kCoinbaseFieldNumber;
const int BlockResponse::kTimestampFieldNumber;
const int BlockResponse::kChainIdFieldNumber;
const int BlockResponse::kStateRootFieldNumber;
const int BlockResponse::kTxsRootFieldNumber;
const int BlockResponse::kEventsRootFieldNumber;
const int BlockResponse::kConsensusRootFieldNumber;
const int BlockResponse::kMinerFieldNumber;
const int BlockResponse::kRandomSeedFieldNumber;
const int BlockResponse::kRandomProofFieldNumber;
const int BlockResponse::kIsFinalityFieldNumber;
const int BlockResponse::kTransactionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockResponse::BlockResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsBlockResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.BlockResponse)
}
BlockResponse::BlockResponse(const BlockResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      transactions_(from.transactions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  parent_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent_hash().size() > 0) {
    parent_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_hash_);
  }
  coinbase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.coinbase().size() > 0) {
    coinbase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coinbase_);
  }
  state_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state_root().size() > 0) {
    state_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_root_);
  }
  txs_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.txs_root().size() > 0) {
    txs_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txs_root_);
  }
  events_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.events_root().size() > 0) {
    events_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.events_root_);
  }
  miner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.miner().size() > 0) {
    miner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.miner_);
  }
  randomseed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.randomseed().size() > 0) {
    randomseed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.randomseed_);
  }
  randomproof_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.randomproof().size() > 0) {
    randomproof_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.randomproof_);
  }
  if (from.has_consensus_root()) {
    consensus_root_ = new ::consensuspb::ConsensusRoot(*from.consensus_root_);
  } else {
    consensus_root_ = NULL;
  }
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_finality_) -
    reinterpret_cast<char*>(&height_)) + sizeof(is_finality_));
  // @@protoc_insertion_point(copy_constructor:rpcpb.BlockResponse)
}

void BlockResponse::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coinbase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txs_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  events_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  miner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  randomseed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  randomproof_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&consensus_root_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_finality_) -
      reinterpret_cast<char*>(&consensus_root_)) + sizeof(is_finality_));
  _cached_size_ = 0;
}

BlockResponse::~BlockResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.BlockResponse)
  SharedDtor();
}

void BlockResponse::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coinbase_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_root_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txs_root_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  events_root_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  miner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  randomseed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  randomproof_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete consensus_root_;
}

void BlockResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockResponse& BlockResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsBlockResponse();
  return *internal_default_instance();
}

BlockResponse* BlockResponse::New(::google::protobuf::Arena* arena) const {
  BlockResponse* n = new BlockResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.BlockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transactions_.Clear();
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coinbase_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_root_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txs_root_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  events_root_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  miner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  randomseed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  randomproof_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && consensus_root_ != NULL) {
    delete consensus_root_;
  }
  consensus_root_ = NULL;
  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_finality_) -
      reinterpret_cast<char*>(&height_)) + sizeof(is_finality_));
  _internal_metadata_.Clear();
}

bool BlockResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.BlockResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash().data(), static_cast<int>(this->hash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.BlockResponse.hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent_hash().data(), static_cast<int>(this->parent_hash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.BlockResponse.parent_hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 nonce = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string coinbase = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_coinbase()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->coinbase().data(), static_cast<int>(this->coinbase().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.BlockResponse.coinbase"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 chain_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chain_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string state_root = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state_root()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->state_root().data(), static_cast<int>(this->state_root().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.BlockResponse.state_root"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string txs_root = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_txs_root()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->txs_root().data(), static_cast<int>(this->txs_root().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.BlockResponse.txs_root"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string events_root = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_events_root()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->events_root().data(), static_cast<int>(this->events_root().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.BlockResponse.events_root"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .consensuspb.ConsensusRoot consensus_root = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_consensus_root()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string miner = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_miner()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->miner().data(), static_cast<int>(this->miner().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.BlockResponse.miner"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string randomSeed = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_randomseed()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->randomseed().data(), static_cast<int>(this->randomseed().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.BlockResponse.randomSeed"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string randomProof = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_randomproof()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->randomproof().data(), static_cast<int>(this->randomproof().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.BlockResponse.randomProof"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_finality = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_finality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rpcpb.TransactionResponse transactions = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_transactions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.BlockResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.BlockResponse)
  return false;
#undef DO_
}

void BlockResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.BlockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hash(), output);
  }

  // string parent_hash = 2;
  if (this->parent_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent_hash().data(), static_cast<int>(this->parent_hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.parent_hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->parent_hash(), output);
  }

  // uint64 height = 3;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->height(), output);
  }

  // uint64 nonce = 4;
  if (this->nonce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->nonce(), output);
  }

  // string coinbase = 5;
  if (this->coinbase().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coinbase().data(), static_cast<int>(this->coinbase().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.coinbase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->coinbase(), output);
  }

  // int64 timestamp = 6;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->timestamp(), output);
  }

  // uint32 chain_id = 7;
  if (this->chain_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->chain_id(), output);
  }

  // string state_root = 8;
  if (this->state_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->state_root().data(), static_cast<int>(this->state_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.state_root");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->state_root(), output);
  }

  // string txs_root = 9;
  if (this->txs_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txs_root().data(), static_cast<int>(this->txs_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.txs_root");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->txs_root(), output);
  }

  // string events_root = 10;
  if (this->events_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->events_root().data(), static_cast<int>(this->events_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.events_root");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->events_root(), output);
  }

  // .consensuspb.ConsensusRoot consensus_root = 11;
  if (this->has_consensus_root()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->consensus_root_, output);
  }

  // string miner = 12;
  if (this->miner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->miner().data(), static_cast<int>(this->miner().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.miner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->miner(), output);
  }

  // string randomSeed = 13;
  if (this->randomseed().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->randomseed().data(), static_cast<int>(this->randomseed().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.randomSeed");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->randomseed(), output);
  }

  // string randomProof = 14;
  if (this->randomproof().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->randomproof().data(), static_cast<int>(this->randomproof().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.randomProof");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->randomproof(), output);
  }

  // bool is_finality = 15;
  if (this->is_finality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_finality(), output);
  }

  // repeated .rpcpb.TransactionResponse transactions = 100;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transactions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->transactions(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.BlockResponse)
}

::google::protobuf::uint8* BlockResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.BlockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hash(), target);
  }

  // string parent_hash = 2;
  if (this->parent_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent_hash().data(), static_cast<int>(this->parent_hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.parent_hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->parent_hash(), target);
  }

  // uint64 height = 3;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->height(), target);
  }

  // uint64 nonce = 4;
  if (this->nonce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->nonce(), target);
  }

  // string coinbase = 5;
  if (this->coinbase().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coinbase().data(), static_cast<int>(this->coinbase().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.coinbase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->coinbase(), target);
  }

  // int64 timestamp = 6;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->timestamp(), target);
  }

  // uint32 chain_id = 7;
  if (this->chain_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->chain_id(), target);
  }

  // string state_root = 8;
  if (this->state_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->state_root().data(), static_cast<int>(this->state_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.state_root");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->state_root(), target);
  }

  // string txs_root = 9;
  if (this->txs_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txs_root().data(), static_cast<int>(this->txs_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.txs_root");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->txs_root(), target);
  }

  // string events_root = 10;
  if (this->events_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->events_root().data(), static_cast<int>(this->events_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.events_root");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->events_root(), target);
  }

  // .consensuspb.ConsensusRoot consensus_root = 11;
  if (this->has_consensus_root()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *this->consensus_root_, deterministic, target);
  }

  // string miner = 12;
  if (this->miner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->miner().data(), static_cast<int>(this->miner().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.miner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->miner(), target);
  }

  // string randomSeed = 13;
  if (this->randomseed().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->randomseed().data(), static_cast<int>(this->randomseed().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.randomSeed");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->randomseed(), target);
  }

  // string randomProof = 14;
  if (this->randomproof().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->randomproof().data(), static_cast<int>(this->randomproof().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.BlockResponse.randomProof");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->randomproof(), target);
  }

  // bool is_finality = 15;
  if (this->is_finality() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_finality(), target);
  }

  // repeated .rpcpb.TransactionResponse transactions = 100;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transactions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        100, this->transactions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.BlockResponse)
  return target;
}

size_t BlockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.BlockResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rpcpb.TransactionResponse transactions = 100;
  {
    unsigned int count = static_cast<unsigned int>(this->transactions_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->transactions(static_cast<int>(i)));
    }
  }

  // string hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash());
  }

  // string parent_hash = 2;
  if (this->parent_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent_hash());
  }

  // string coinbase = 5;
  if (this->coinbase().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->coinbase());
  }

  // string state_root = 8;
  if (this->state_root().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->state_root());
  }

  // string txs_root = 9;
  if (this->txs_root().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->txs_root());
  }

  // string events_root = 10;
  if (this->events_root().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->events_root());
  }

  // string miner = 12;
  if (this->miner().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->miner());
  }

  // string randomSeed = 13;
  if (this->randomseed().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->randomseed());
  }

  // string randomProof = 14;
  if (this->randomproof().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->randomproof());
  }

  // .consensuspb.ConsensusRoot consensus_root = 11;
  if (this->has_consensus_root()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->consensus_root_);
  }

  // uint64 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->height());
  }

  // uint64 nonce = 4;
  if (this->nonce() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nonce());
  }

  // int64 timestamp = 6;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // uint32 chain_id = 7;
  if (this->chain_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chain_id());
  }

  // bool is_finality = 15;
  if (this->is_finality() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.BlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.BlockResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.BlockResponse)
    MergeFrom(*source);
  }
}

void BlockResponse::MergeFrom(const BlockResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.BlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transactions_.MergeFrom(from.transactions_);
  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.parent_hash().size() > 0) {

    parent_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_hash_);
  }
  if (from.coinbase().size() > 0) {

    coinbase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coinbase_);
  }
  if (from.state_root().size() > 0) {

    state_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_root_);
  }
  if (from.txs_root().size() > 0) {

    txs_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txs_root_);
  }
  if (from.events_root().size() > 0) {

    events_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.events_root_);
  }
  if (from.miner().size() > 0) {

    miner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.miner_);
  }
  if (from.randomseed().size() > 0) {

    randomseed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.randomseed_);
  }
  if (from.randomproof().size() > 0) {

    randomproof_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.randomproof_);
  }
  if (from.has_consensus_root()) {
    mutable_consensus_root()->::consensuspb::ConsensusRoot::MergeFrom(from.consensus_root());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.nonce() != 0) {
    set_nonce(from.nonce());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.chain_id() != 0) {
    set_chain_id(from.chain_id());
  }
  if (from.is_finality() != 0) {
    set_is_finality(from.is_finality());
  }
}

void BlockResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.BlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockResponse::CopyFrom(const BlockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.BlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockResponse::IsInitialized() const {
  return true;
}

void BlockResponse::Swap(BlockResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockResponse::InternalSwap(BlockResponse* other) {
  using std::swap;
  transactions_.InternalSwap(&other->transactions_);
  hash_.Swap(&other->hash_);
  parent_hash_.Swap(&other->parent_hash_);
  coinbase_.Swap(&other->coinbase_);
  state_root_.Swap(&other->state_root_);
  txs_root_.Swap(&other->txs_root_);
  events_root_.Swap(&other->events_root_);
  miner_.Swap(&other->miner_);
  randomseed_.Swap(&other->randomseed_);
  randomproof_.Swap(&other->randomproof_);
  swap(consensus_root_, other->consensus_root_);
  swap(height_, other->height_);
  swap(nonce_, other->nonce_);
  swap(timestamp_, other->timestamp_);
  swap(chain_id_, other->chain_id_);
  swap(is_finality_, other->is_finality_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransactionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionResponse::kHashFieldNumber;
const int TransactionResponse::kChainIdFieldNumber;
const int TransactionResponse::kFromFieldNumber;
const int TransactionResponse::kToFieldNumber;
const int TransactionResponse::kValueFieldNumber;
const int TransactionResponse::kNonceFieldNumber;
const int TransactionResponse::kTimestampFieldNumber;
const int TransactionResponse::kTypeFieldNumber;
const int TransactionResponse::kDataFieldNumber;
const int TransactionResponse::kGasPriceFieldNumber;
const int TransactionResponse::kGasLimitFieldNumber;
const int TransactionResponse::kContractAddressFieldNumber;
const int TransactionResponse::kStatusFieldNumber;
const int TransactionResponse::kGasUsedFieldNumber;
const int TransactionResponse::kExecuteErrorFieldNumber;
const int TransactionResponse::kExecuteResultFieldNumber;
const int TransactionResponse::kBlockHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionResponse::TransactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsTransactionResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.TransactionResponse)
}
TransactionResponse::TransactionResponse(const TransactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  gas_price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gas_price().size() > 0) {
    gas_price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_price_);
  }
  gas_limit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gas_limit().size() > 0) {
    gas_limit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_limit_);
  }
  contract_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contract_address().size() > 0) {
    contract_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_address_);
  }
  gas_used_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gas_used().size() > 0) {
    gas_used_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_used_);
  }
  execute_error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.execute_error().size() > 0) {
    execute_error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.execute_error_);
  }
  execute_result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.execute_result().size() > 0) {
    execute_result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.execute_result_);
  }
  ::memcpy(&nonce_, &from.nonce_,
    static_cast<size_t>(reinterpret_cast<char*>(&block_height_) -
    reinterpret_cast<char*>(&nonce_)) + sizeof(block_height_));
  // @@protoc_insertion_point(copy_constructor:rpcpb.TransactionResponse)
}

void TransactionResponse::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_limit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_used_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  execute_error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  execute_result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nonce_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&block_height_) -
      reinterpret_cast<char*>(&nonce_)) + sizeof(block_height_));
  _cached_size_ = 0;
}

TransactionResponse::~TransactionResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.TransactionResponse)
  SharedDtor();
}

void TransactionResponse::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_limit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_used_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  execute_error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  execute_result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransactionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransactionResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionResponse& TransactionResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsTransactionResponse();
  return *internal_default_instance();
}

TransactionResponse* TransactionResponse::New(::google::protobuf::Arena* arena) const {
  TransactionResponse* n = new TransactionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.TransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_limit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_used_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  execute_error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  execute_result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nonce_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&block_height_) -
      reinterpret_cast<char*>(&nonce_)) + sizeof(block_height_));
  _internal_metadata_.Clear();
}

bool TransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.TransactionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash().data(), static_cast<int>(this->hash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.TransactionResponse.hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 chainId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chainid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.TransactionResponse.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.TransactionResponse.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.TransactionResponse.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 nonce = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.TransactionResponse.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gas_price = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gas_price()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gas_price().data(), static_cast<int>(this->gas_price().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.TransactionResponse.gas_price"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gas_limit = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gas_limit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gas_limit().data(), static_cast<int>(this->gas_limit().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.TransactionResponse.gas_limit"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contract_address = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract_address().data(), static_cast<int>(this->contract_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.TransactionResponse.contract_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gas_used = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gas_used()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gas_used().data(), static_cast<int>(this->gas_used().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.TransactionResponse.gas_used"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string execute_error = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_execute_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->execute_error().data(), static_cast<int>(this->execute_error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.TransactionResponse.execute_error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string execute_result = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_execute_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->execute_result().data(), static_cast<int>(this->execute_result().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.TransactionResponse.execute_result"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 block_height = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &block_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.TransactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.TransactionResponse)
  return false;
#undef DO_
}

void TransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.TransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hash(), output);
  }

  // uint32 chainId = 2;
  if (this->chainid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->chainid(), output);
  }

  // string from = 3;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from(), output);
  }

  // string to = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->to(), output);
  }

  // string value = 5;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->value(), output);
  }

  // uint64 nonce = 6;
  if (this->nonce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->nonce(), output);
  }

  // int64 timestamp = 7;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->timestamp(), output);
  }

  // string type = 8;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->type(), output);
  }

  // bytes data = 9;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->data(), output);
  }

  // string gas_price = 10;
  if (this->gas_price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_price().data(), static_cast<int>(this->gas_price().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.gas_price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->gas_price(), output);
  }

  // string gas_limit = 11;
  if (this->gas_limit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_limit().data(), static_cast<int>(this->gas_limit().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.gas_limit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->gas_limit(), output);
  }

  // string contract_address = 12;
  if (this->contract_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract_address().data(), static_cast<int>(this->contract_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.contract_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->contract_address(), output);
  }

  // int32 status = 13;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->status(), output);
  }

  // string gas_used = 14;
  if (this->gas_used().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_used().data(), static_cast<int>(this->gas_used().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.gas_used");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->gas_used(), output);
  }

  // string execute_error = 15;
  if (this->execute_error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->execute_error().data(), static_cast<int>(this->execute_error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.execute_error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->execute_error(), output);
  }

  // string execute_result = 16;
  if (this->execute_result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->execute_result().data(), static_cast<int>(this->execute_result().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.execute_result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->execute_result(), output);
  }

  // uint64 block_height = 17;
  if (this->block_height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(17, this->block_height(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.TransactionResponse)
}

::google::protobuf::uint8* TransactionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.TransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hash(), target);
  }

  // uint32 chainId = 2;
  if (this->chainid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->chainid(), target);
  }

  // string from = 3;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from(), target);
  }

  // string to = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->to(), target);
  }

  // string value = 5;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->value(), target);
  }

  // uint64 nonce = 6;
  if (this->nonce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->nonce(), target);
  }

  // int64 timestamp = 7;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->timestamp(), target);
  }

  // string type = 8;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->type(), target);
  }

  // bytes data = 9;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->data(), target);
  }

  // string gas_price = 10;
  if (this->gas_price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_price().data(), static_cast<int>(this->gas_price().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.gas_price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->gas_price(), target);
  }

  // string gas_limit = 11;
  if (this->gas_limit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_limit().data(), static_cast<int>(this->gas_limit().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.gas_limit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->gas_limit(), target);
  }

  // string contract_address = 12;
  if (this->contract_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract_address().data(), static_cast<int>(this->contract_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.contract_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->contract_address(), target);
  }

  // int32 status = 13;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->status(), target);
  }

  // string gas_used = 14;
  if (this->gas_used().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_used().data(), static_cast<int>(this->gas_used().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.gas_used");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->gas_used(), target);
  }

  // string execute_error = 15;
  if (this->execute_error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->execute_error().data(), static_cast<int>(this->execute_error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.execute_error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->execute_error(), target);
  }

  // string execute_result = 16;
  if (this->execute_result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->execute_result().data(), static_cast<int>(this->execute_result().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.TransactionResponse.execute_result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->execute_result(), target);
  }

  // uint64 block_height = 17;
  if (this->block_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(17, this->block_height(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.TransactionResponse)
  return target;
}

size_t TransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.TransactionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash());
  }

  // string from = 3;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // string to = 4;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // string value = 5;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // string type = 8;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // bytes data = 9;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // string gas_price = 10;
  if (this->gas_price().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gas_price());
  }

  // string gas_limit = 11;
  if (this->gas_limit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gas_limit());
  }

  // string contract_address = 12;
  if (this->contract_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract_address());
  }

  // string gas_used = 14;
  if (this->gas_used().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gas_used());
  }

  // string execute_error = 15;
  if (this->execute_error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->execute_error());
  }

  // string execute_result = 16;
  if (this->execute_result().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->execute_result());
  }

  // uint64 nonce = 6;
  if (this->nonce() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nonce());
  }

  // int64 timestamp = 7;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // uint32 chainId = 2;
  if (this->chainid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chainid());
  }

  // int32 status = 13;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // uint64 block_height = 17;
  if (this->block_height() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->block_height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.TransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.TransactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.TransactionResponse)
    MergeFrom(*source);
  }
}

void TransactionResponse::MergeFrom(const TransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.TransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.gas_price().size() > 0) {

    gas_price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_price_);
  }
  if (from.gas_limit().size() > 0) {

    gas_limit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_limit_);
  }
  if (from.contract_address().size() > 0) {

    contract_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_address_);
  }
  if (from.gas_used().size() > 0) {

    gas_used_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_used_);
  }
  if (from.execute_error().size() > 0) {

    execute_error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.execute_error_);
  }
  if (from.execute_result().size() > 0) {

    execute_result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.execute_result_);
  }
  if (from.nonce() != 0) {
    set_nonce(from.nonce());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.chainid() != 0) {
    set_chainid(from.chainid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.block_height() != 0) {
    set_block_height(from.block_height());
  }
}

void TransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.TransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionResponse::CopyFrom(const TransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.TransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionResponse::IsInitialized() const {
  return true;
}

void TransactionResponse::Swap(TransactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionResponse::InternalSwap(TransactionResponse* other) {
  using std::swap;
  hash_.Swap(&other->hash_);
  from_.Swap(&other->from_);
  to_.Swap(&other->to_);
  value_.Swap(&other->value_);
  type_.Swap(&other->type_);
  data_.Swap(&other->data_);
  gas_price_.Swap(&other->gas_price_);
  gas_limit_.Swap(&other->gas_limit_);
  contract_address_.Swap(&other->contract_address_);
  gas_used_.Swap(&other->gas_used_);
  execute_error_.Swap(&other->execute_error_);
  execute_result_.Swap(&other->execute_result_);
  swap(nonce_, other->nonce_);
  swap(timestamp_, other->timestamp_);
  swap(chainid_, other->chainid_);
  swap(status_, other->status_);
  swap(block_height_, other->block_height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransactionResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NewAccountRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewAccountRequest::kPassphraseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewAccountRequest::NewAccountRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsNewAccountRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.NewAccountRequest)
}
NewAccountRequest::NewAccountRequest(const NewAccountRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  passphrase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passphrase().size() > 0) {
    passphrase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passphrase_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.NewAccountRequest)
}

void NewAccountRequest::SharedCtor() {
  passphrase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

NewAccountRequest::~NewAccountRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.NewAccountRequest)
  SharedDtor();
}

void NewAccountRequest::SharedDtor() {
  passphrase_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NewAccountRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewAccountRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewAccountRequest& NewAccountRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsNewAccountRequest();
  return *internal_default_instance();
}

NewAccountRequest* NewAccountRequest::New(::google::protobuf::Arena* arena) const {
  NewAccountRequest* n = new NewAccountRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.NewAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  passphrase_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool NewAccountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.NewAccountRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string passphrase = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passphrase()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passphrase().data(), static_cast<int>(this->passphrase().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.NewAccountRequest.passphrase"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.NewAccountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.NewAccountRequest)
  return false;
#undef DO_
}

void NewAccountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.NewAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string passphrase = 1;
  if (this->passphrase().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passphrase().data(), static_cast<int>(this->passphrase().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NewAccountRequest.passphrase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->passphrase(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.NewAccountRequest)
}

::google::protobuf::uint8* NewAccountRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.NewAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string passphrase = 1;
  if (this->passphrase().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passphrase().data(), static_cast<int>(this->passphrase().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NewAccountRequest.passphrase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->passphrase(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.NewAccountRequest)
  return target;
}

size_t NewAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.NewAccountRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string passphrase = 1;
  if (this->passphrase().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passphrase());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewAccountRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.NewAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NewAccountRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewAccountRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.NewAccountRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.NewAccountRequest)
    MergeFrom(*source);
  }
}

void NewAccountRequest::MergeFrom(const NewAccountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.NewAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.passphrase().size() > 0) {

    passphrase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passphrase_);
  }
}

void NewAccountRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.NewAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewAccountRequest::CopyFrom(const NewAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.NewAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewAccountRequest::IsInitialized() const {
  return true;
}

void NewAccountRequest::Swap(NewAccountRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewAccountRequest::InternalSwap(NewAccountRequest* other) {
  using std::swap;
  passphrase_.Swap(&other->passphrase_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewAccountRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NewAccountResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewAccountResponse::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewAccountResponse::NewAccountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsNewAccountResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.NewAccountResponse)
}
NewAccountResponse::NewAccountResponse(const NewAccountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.NewAccountResponse)
}

void NewAccountResponse::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

NewAccountResponse::~NewAccountResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.NewAccountResponse)
  SharedDtor();
}

void NewAccountResponse::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NewAccountResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewAccountResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewAccountResponse& NewAccountResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsNewAccountResponse();
  return *internal_default_instance();
}

NewAccountResponse* NewAccountResponse::New(::google::protobuf::Arena* arena) const {
  NewAccountResponse* n = new NewAccountResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewAccountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.NewAccountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool NewAccountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.NewAccountResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.NewAccountResponse.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.NewAccountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.NewAccountResponse)
  return false;
#undef DO_
}

void NewAccountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.NewAccountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NewAccountResponse.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.NewAccountResponse)
}

::google::protobuf::uint8* NewAccountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.NewAccountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NewAccountResponse.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.NewAccountResponse)
  return target;
}

size_t NewAccountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.NewAccountResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewAccountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.NewAccountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const NewAccountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewAccountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.NewAccountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.NewAccountResponse)
    MergeFrom(*source);
  }
}

void NewAccountResponse::MergeFrom(const NewAccountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.NewAccountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void NewAccountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.NewAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewAccountResponse::CopyFrom(const NewAccountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.NewAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewAccountResponse::IsInitialized() const {
  return true;
}

void NewAccountResponse::Swap(NewAccountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewAccountResponse::InternalSwap(NewAccountResponse* other) {
  using std::swap;
  address_.Swap(&other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewAccountResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnlockAccountRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnlockAccountRequest::kAddressFieldNumber;
const int UnlockAccountRequest::kPassphraseFieldNumber;
const int UnlockAccountRequest::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnlockAccountRequest::UnlockAccountRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsUnlockAccountRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.UnlockAccountRequest)
}
UnlockAccountRequest::UnlockAccountRequest(const UnlockAccountRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  passphrase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passphrase().size() > 0) {
    passphrase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passphrase_);
  }
  duration_ = from.duration_;
  // @@protoc_insertion_point(copy_constructor:rpcpb.UnlockAccountRequest)
}

void UnlockAccountRequest::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passphrase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

UnlockAccountRequest::~UnlockAccountRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.UnlockAccountRequest)
  SharedDtor();
}

void UnlockAccountRequest::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passphrase_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnlockAccountRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockAccountRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnlockAccountRequest& UnlockAccountRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsUnlockAccountRequest();
  return *internal_default_instance();
}

UnlockAccountRequest* UnlockAccountRequest::New(::google::protobuf::Arena* arena) const {
  UnlockAccountRequest* n = new UnlockAccountRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnlockAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.UnlockAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passphrase_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool UnlockAccountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.UnlockAccountRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.UnlockAccountRequest.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string passphrase = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passphrase()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passphrase().data(), static_cast<int>(this->passphrase().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.UnlockAccountRequest.passphrase"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.UnlockAccountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.UnlockAccountRequest)
  return false;
#undef DO_
}

void UnlockAccountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.UnlockAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.UnlockAccountRequest.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // string passphrase = 2;
  if (this->passphrase().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passphrase().data(), static_cast<int>(this->passphrase().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.UnlockAccountRequest.passphrase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->passphrase(), output);
  }

  // uint64 duration = 3;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->duration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.UnlockAccountRequest)
}

::google::protobuf::uint8* UnlockAccountRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.UnlockAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.UnlockAccountRequest.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // string passphrase = 2;
  if (this->passphrase().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passphrase().data(), static_cast<int>(this->passphrase().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.UnlockAccountRequest.passphrase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->passphrase(), target);
  }

  // uint64 duration = 3;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->duration(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.UnlockAccountRequest)
  return target;
}

size_t UnlockAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.UnlockAccountRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string passphrase = 2;
  if (this->passphrase().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passphrase());
  }

  // uint64 duration = 3;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->duration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockAccountRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.UnlockAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnlockAccountRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnlockAccountRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.UnlockAccountRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.UnlockAccountRequest)
    MergeFrom(*source);
  }
}

void UnlockAccountRequest::MergeFrom(const UnlockAccountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.UnlockAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.passphrase().size() > 0) {

    passphrase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passphrase_);
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
}

void UnlockAccountRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.UnlockAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockAccountRequest::CopyFrom(const UnlockAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.UnlockAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockAccountRequest::IsInitialized() const {
  return true;
}

void UnlockAccountRequest::Swap(UnlockAccountRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnlockAccountRequest::InternalSwap(UnlockAccountRequest* other) {
  using std::swap;
  address_.Swap(&other->address_);
  passphrase_.Swap(&other->passphrase_);
  swap(duration_, other->duration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnlockAccountRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnlockAccountResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnlockAccountResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnlockAccountResponse::UnlockAccountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsUnlockAccountResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.UnlockAccountResponse)
}
UnlockAccountResponse::UnlockAccountResponse(const UnlockAccountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:rpcpb.UnlockAccountResponse)
}

void UnlockAccountResponse::SharedCtor() {
  result_ = false;
  _cached_size_ = 0;
}

UnlockAccountResponse::~UnlockAccountResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.UnlockAccountResponse)
  SharedDtor();
}

void UnlockAccountResponse::SharedDtor() {
}

void UnlockAccountResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockAccountResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnlockAccountResponse& UnlockAccountResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsUnlockAccountResponse();
  return *internal_default_instance();
}

UnlockAccountResponse* UnlockAccountResponse::New(::google::protobuf::Arena* arena) const {
  UnlockAccountResponse* n = new UnlockAccountResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnlockAccountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.UnlockAccountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear();
}

bool UnlockAccountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.UnlockAccountResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.UnlockAccountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.UnlockAccountResponse)
  return false;
#undef DO_
}

void UnlockAccountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.UnlockAccountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.UnlockAccountResponse)
}

::google::protobuf::uint8* UnlockAccountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.UnlockAccountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.UnlockAccountResponse)
  return target;
}

size_t UnlockAccountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.UnlockAccountResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockAccountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.UnlockAccountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UnlockAccountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnlockAccountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.UnlockAccountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.UnlockAccountResponse)
    MergeFrom(*source);
  }
}

void UnlockAccountResponse::MergeFrom(const UnlockAccountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.UnlockAccountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void UnlockAccountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.UnlockAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockAccountResponse::CopyFrom(const UnlockAccountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.UnlockAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockAccountResponse::IsInitialized() const {
  return true;
}

void UnlockAccountResponse::Swap(UnlockAccountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnlockAccountResponse::InternalSwap(UnlockAccountResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnlockAccountResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LockAccountRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockAccountRequest::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockAccountRequest::LockAccountRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsLockAccountRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.LockAccountRequest)
}
LockAccountRequest::LockAccountRequest(const LockAccountRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.LockAccountRequest)
}

void LockAccountRequest::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LockAccountRequest::~LockAccountRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.LockAccountRequest)
  SharedDtor();
}

void LockAccountRequest::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LockAccountRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockAccountRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LockAccountRequest& LockAccountRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsLockAccountRequest();
  return *internal_default_instance();
}

LockAccountRequest* LockAccountRequest::New(::google::protobuf::Arena* arena) const {
  LockAccountRequest* n = new LockAccountRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LockAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.LockAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LockAccountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.LockAccountRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.LockAccountRequest.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.LockAccountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.LockAccountRequest)
  return false;
#undef DO_
}

void LockAccountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.LockAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.LockAccountRequest.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.LockAccountRequest)
}

::google::protobuf::uint8* LockAccountRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.LockAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.LockAccountRequest.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.LockAccountRequest)
  return target;
}

size_t LockAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.LockAccountRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockAccountRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.LockAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LockAccountRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LockAccountRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.LockAccountRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.LockAccountRequest)
    MergeFrom(*source);
  }
}

void LockAccountRequest::MergeFrom(const LockAccountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.LockAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void LockAccountRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.LockAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockAccountRequest::CopyFrom(const LockAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.LockAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockAccountRequest::IsInitialized() const {
  return true;
}

void LockAccountRequest::Swap(LockAccountRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockAccountRequest::InternalSwap(LockAccountRequest* other) {
  using std::swap;
  address_.Swap(&other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LockAccountRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LockAccountResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockAccountResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockAccountResponse::LockAccountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsLockAccountResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.LockAccountResponse)
}
LockAccountResponse::LockAccountResponse(const LockAccountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:rpcpb.LockAccountResponse)
}

void LockAccountResponse::SharedCtor() {
  result_ = false;
  _cached_size_ = 0;
}

LockAccountResponse::~LockAccountResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.LockAccountResponse)
  SharedDtor();
}

void LockAccountResponse::SharedDtor() {
}

void LockAccountResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockAccountResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LockAccountResponse& LockAccountResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsLockAccountResponse();
  return *internal_default_instance();
}

LockAccountResponse* LockAccountResponse::New(::google::protobuf::Arena* arena) const {
  LockAccountResponse* n = new LockAccountResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LockAccountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.LockAccountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear();
}

bool LockAccountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.LockAccountResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.LockAccountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.LockAccountResponse)
  return false;
#undef DO_
}

void LockAccountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.LockAccountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.LockAccountResponse)
}

::google::protobuf::uint8* LockAccountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.LockAccountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.LockAccountResponse)
  return target;
}

size_t LockAccountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.LockAccountResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockAccountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.LockAccountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LockAccountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LockAccountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.LockAccountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.LockAccountResponse)
    MergeFrom(*source);
  }
}

void LockAccountResponse::MergeFrom(const LockAccountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.LockAccountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void LockAccountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.LockAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockAccountResponse::CopyFrom(const LockAccountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.LockAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockAccountResponse::IsInitialized() const {
  return true;
}

void LockAccountResponse::Swap(LockAccountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockAccountResponse::InternalSwap(LockAccountResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LockAccountResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignHashRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignHashRequest::kAddressFieldNumber;
const int SignHashRequest::kHashFieldNumber;
const int SignHashRequest::kAlgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignHashRequest::SignHashRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsSignHashRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.SignHashRequest)
}
SignHashRequest::SignHashRequest(const SignHashRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  alg_ = from.alg_;
  // @@protoc_insertion_point(copy_constructor:rpcpb.SignHashRequest)
}

void SignHashRequest::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alg_ = 0u;
  _cached_size_ = 0;
}

SignHashRequest::~SignHashRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.SignHashRequest)
  SharedDtor();
}

void SignHashRequest::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignHashRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignHashRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignHashRequest& SignHashRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsSignHashRequest();
  return *internal_default_instance();
}

SignHashRequest* SignHashRequest::New(::google::protobuf::Arena* arena) const {
  SignHashRequest* n = new SignHashRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SignHashRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.SignHashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alg_ = 0u;
  _internal_metadata_.Clear();
}

bool SignHashRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.SignHashRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.SignHashRequest.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 alg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &alg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.SignHashRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.SignHashRequest)
  return false;
#undef DO_
}

void SignHashRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.SignHashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.SignHashRequest.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // bytes hash = 2;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->hash(), output);
  }

  // uint32 alg = 3;
  if (this->alg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->alg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.SignHashRequest)
}

::google::protobuf::uint8* SignHashRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.SignHashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.SignHashRequest.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // bytes hash = 2;
  if (this->hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->hash(), target);
  }

  // uint32 alg = 3;
  if (this->alg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->alg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.SignHashRequest)
  return target;
}

size_t SignHashRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.SignHashRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // bytes hash = 2;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  // uint32 alg = 3;
  if (this->alg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->alg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignHashRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.SignHashRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SignHashRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignHashRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.SignHashRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.SignHashRequest)
    MergeFrom(*source);
  }
}

void SignHashRequest::MergeFrom(const SignHashRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.SignHashRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.alg() != 0) {
    set_alg(from.alg());
  }
}

void SignHashRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.SignHashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignHashRequest::CopyFrom(const SignHashRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.SignHashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignHashRequest::IsInitialized() const {
  return true;
}

void SignHashRequest::Swap(SignHashRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignHashRequest::InternalSwap(SignHashRequest* other) {
  using std::swap;
  address_.Swap(&other->address_);
  hash_.Swap(&other->hash_);
  swap(alg_, other->alg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignHashRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignHashResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignHashResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignHashResponse::SignHashResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsSignHashResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.SignHashResponse)
}
SignHashResponse::SignHashResponse(const SignHashResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.SignHashResponse)
}

void SignHashResponse::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SignHashResponse::~SignHashResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.SignHashResponse)
  SharedDtor();
}

void SignHashResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignHashResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignHashResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignHashResponse& SignHashResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsSignHashResponse();
  return *internal_default_instance();
}

SignHashResponse* SignHashResponse::New(::google::protobuf::Arena* arena) const {
  SignHashResponse* n = new SignHashResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SignHashResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.SignHashResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SignHashResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.SignHashResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.SignHashResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.SignHashResponse)
  return false;
#undef DO_
}

void SignHashResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.SignHashResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.SignHashResponse)
}

::google::protobuf::uint8* SignHashResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.SignHashResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.SignHashResponse)
  return target;
}

size_t SignHashResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.SignHashResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignHashResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.SignHashResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SignHashResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignHashResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.SignHashResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.SignHashResponse)
    MergeFrom(*source);
  }
}

void SignHashResponse::MergeFrom(const SignHashResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.SignHashResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void SignHashResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.SignHashResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignHashResponse::CopyFrom(const SignHashResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.SignHashResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignHashResponse::IsInitialized() const {
  return true;
}

void SignHashResponse::Swap(SignHashResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignHashResponse::InternalSwap(SignHashResponse* other) {
  using std::swap;
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignHashResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenerateRandomSeedRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenerateRandomSeedRequest::kAddressFieldNumber;
const int GenerateRandomSeedRequest::kParentSeedFieldNumber;
const int GenerateRandomSeedRequest::kAncestorHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenerateRandomSeedRequest::GenerateRandomSeedRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsGenerateRandomSeedRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.GenerateRandomSeedRequest)
}
GenerateRandomSeedRequest::GenerateRandomSeedRequest(const GenerateRandomSeedRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  parent_seed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent_seed().size() > 0) {
    parent_seed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_seed_);
  }
  ancestor_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ancestor_hash().size() > 0) {
    ancestor_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ancestor_hash_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.GenerateRandomSeedRequest)
}

void GenerateRandomSeedRequest::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_seed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ancestor_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GenerateRandomSeedRequest::~GenerateRandomSeedRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.GenerateRandomSeedRequest)
  SharedDtor();
}

void GenerateRandomSeedRequest::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_seed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ancestor_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GenerateRandomSeedRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GenerateRandomSeedRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenerateRandomSeedRequest& GenerateRandomSeedRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsGenerateRandomSeedRequest();
  return *internal_default_instance();
}

GenerateRandomSeedRequest* GenerateRandomSeedRequest::New(::google::protobuf::Arena* arena) const {
  GenerateRandomSeedRequest* n = new GenerateRandomSeedRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GenerateRandomSeedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.GenerateRandomSeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_seed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ancestor_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GenerateRandomSeedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.GenerateRandomSeedRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.GenerateRandomSeedRequest.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes parent_seed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_parent_seed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ancestor_hash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ancestor_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.GenerateRandomSeedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.GenerateRandomSeedRequest)
  return false;
#undef DO_
}

void GenerateRandomSeedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.GenerateRandomSeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GenerateRandomSeedRequest.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // bytes parent_seed = 2;
  if (this->parent_seed().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->parent_seed(), output);
  }

  // bytes ancestor_hash = 3;
  if (this->ancestor_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ancestor_hash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.GenerateRandomSeedRequest)
}

::google::protobuf::uint8* GenerateRandomSeedRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.GenerateRandomSeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GenerateRandomSeedRequest.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // bytes parent_seed = 2;
  if (this->parent_seed().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->parent_seed(), target);
  }

  // bytes ancestor_hash = 3;
  if (this->ancestor_hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ancestor_hash(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.GenerateRandomSeedRequest)
  return target;
}

size_t GenerateRandomSeedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.GenerateRandomSeedRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // bytes parent_seed = 2;
  if (this->parent_seed().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->parent_seed());
  }

  // bytes ancestor_hash = 3;
  if (this->ancestor_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ancestor_hash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenerateRandomSeedRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.GenerateRandomSeedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateRandomSeedRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenerateRandomSeedRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.GenerateRandomSeedRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.GenerateRandomSeedRequest)
    MergeFrom(*source);
  }
}

void GenerateRandomSeedRequest::MergeFrom(const GenerateRandomSeedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.GenerateRandomSeedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.parent_seed().size() > 0) {

    parent_seed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_seed_);
  }
  if (from.ancestor_hash().size() > 0) {

    ancestor_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ancestor_hash_);
  }
}

void GenerateRandomSeedRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.GenerateRandomSeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateRandomSeedRequest::CopyFrom(const GenerateRandomSeedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.GenerateRandomSeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateRandomSeedRequest::IsInitialized() const {
  return true;
}

void GenerateRandomSeedRequest::Swap(GenerateRandomSeedRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenerateRandomSeedRequest::InternalSwap(GenerateRandomSeedRequest* other) {
  using std::swap;
  address_.Swap(&other->address_);
  parent_seed_.Swap(&other->parent_seed_);
  ancestor_hash_.Swap(&other->ancestor_hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GenerateRandomSeedRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenerateRandomSeedResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenerateRandomSeedResponse::kVrfSeedFieldNumber;
const int GenerateRandomSeedResponse::kVrfProofFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenerateRandomSeedResponse::GenerateRandomSeedResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsGenerateRandomSeedResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.GenerateRandomSeedResponse)
}
GenerateRandomSeedResponse::GenerateRandomSeedResponse(const GenerateRandomSeedResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrf_seed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrf_seed().size() > 0) {
    vrf_seed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrf_seed_);
  }
  vrf_proof_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrf_proof().size() > 0) {
    vrf_proof_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrf_proof_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.GenerateRandomSeedResponse)
}

void GenerateRandomSeedResponse::SharedCtor() {
  vrf_seed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vrf_proof_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GenerateRandomSeedResponse::~GenerateRandomSeedResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.GenerateRandomSeedResponse)
  SharedDtor();
}

void GenerateRandomSeedResponse::SharedDtor() {
  vrf_seed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vrf_proof_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GenerateRandomSeedResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GenerateRandomSeedResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenerateRandomSeedResponse& GenerateRandomSeedResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsGenerateRandomSeedResponse();
  return *internal_default_instance();
}

GenerateRandomSeedResponse* GenerateRandomSeedResponse::New(::google::protobuf::Arena* arena) const {
  GenerateRandomSeedResponse* n = new GenerateRandomSeedResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GenerateRandomSeedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.GenerateRandomSeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vrf_seed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vrf_proof_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GenerateRandomSeedResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.GenerateRandomSeedResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes vrf_seed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vrf_seed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes vrf_proof = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vrf_proof()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.GenerateRandomSeedResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.GenerateRandomSeedResponse)
  return false;
#undef DO_
}

void GenerateRandomSeedResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.GenerateRandomSeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes vrf_seed = 1;
  if (this->vrf_seed().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->vrf_seed(), output);
  }

  // bytes vrf_proof = 2;
  if (this->vrf_proof().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->vrf_proof(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.GenerateRandomSeedResponse)
}

::google::protobuf::uint8* GenerateRandomSeedResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.GenerateRandomSeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes vrf_seed = 1;
  if (this->vrf_seed().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->vrf_seed(), target);
  }

  // bytes vrf_proof = 2;
  if (this->vrf_proof().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->vrf_proof(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.GenerateRandomSeedResponse)
  return target;
}

size_t GenerateRandomSeedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.GenerateRandomSeedResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes vrf_seed = 1;
  if (this->vrf_seed().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->vrf_seed());
  }

  // bytes vrf_proof = 2;
  if (this->vrf_proof().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->vrf_proof());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenerateRandomSeedResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.GenerateRandomSeedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateRandomSeedResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenerateRandomSeedResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.GenerateRandomSeedResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.GenerateRandomSeedResponse)
    MergeFrom(*source);
  }
}

void GenerateRandomSeedResponse::MergeFrom(const GenerateRandomSeedResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.GenerateRandomSeedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vrf_seed().size() > 0) {

    vrf_seed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrf_seed_);
  }
  if (from.vrf_proof().size() > 0) {

    vrf_proof_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrf_proof_);
  }
}

void GenerateRandomSeedResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.GenerateRandomSeedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateRandomSeedResponse::CopyFrom(const GenerateRandomSeedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.GenerateRandomSeedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateRandomSeedResponse::IsInitialized() const {
  return true;
}

void GenerateRandomSeedResponse::Swap(GenerateRandomSeedResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenerateRandomSeedResponse::InternalSwap(GenerateRandomSeedResponse* other) {
  using std::swap;
  vrf_seed_.Swap(&other->vrf_seed_);
  vrf_proof_.Swap(&other->vrf_proof_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GenerateRandomSeedResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignTransactionPassphraseRequest::InitAsDefaultInstance() {
  ::rpcpb::_SignTransactionPassphraseRequest_default_instance_._instance.get_mutable()->transaction_ = const_cast< ::rpcpb::TransactionRequest*>(
      ::rpcpb::TransactionRequest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignTransactionPassphraseRequest::kTransactionFieldNumber;
const int SignTransactionPassphraseRequest::kPassphraseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignTransactionPassphraseRequest::SignTransactionPassphraseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsSignTransactionPassphraseRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.SignTransactionPassphraseRequest)
}
SignTransactionPassphraseRequest::SignTransactionPassphraseRequest(const SignTransactionPassphraseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  passphrase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passphrase().size() > 0) {
    passphrase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passphrase_);
  }
  if (from.has_transaction()) {
    transaction_ = new ::rpcpb::TransactionRequest(*from.transaction_);
  } else {
    transaction_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.SignTransactionPassphraseRequest)
}

void SignTransactionPassphraseRequest::SharedCtor() {
  passphrase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transaction_ = NULL;
  _cached_size_ = 0;
}

SignTransactionPassphraseRequest::~SignTransactionPassphraseRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.SignTransactionPassphraseRequest)
  SharedDtor();
}

void SignTransactionPassphraseRequest::SharedDtor() {
  passphrase_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete transaction_;
}

void SignTransactionPassphraseRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignTransactionPassphraseRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignTransactionPassphraseRequest& SignTransactionPassphraseRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsSignTransactionPassphraseRequest();
  return *internal_default_instance();
}

SignTransactionPassphraseRequest* SignTransactionPassphraseRequest::New(::google::protobuf::Arena* arena) const {
  SignTransactionPassphraseRequest* n = new SignTransactionPassphraseRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SignTransactionPassphraseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.SignTransactionPassphraseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  passphrase_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && transaction_ != NULL) {
    delete transaction_;
  }
  transaction_ = NULL;
  _internal_metadata_.Clear();
}

bool SignTransactionPassphraseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.SignTransactionPassphraseRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .rpcpb.TransactionRequest transaction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string passphrase = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passphrase()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passphrase().data(), static_cast<int>(this->passphrase().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.SignTransactionPassphraseRequest.passphrase"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.SignTransactionPassphraseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.SignTransactionPassphraseRequest)
  return false;
#undef DO_
}

void SignTransactionPassphraseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.SignTransactionPassphraseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rpcpb.TransactionRequest transaction = 1;
  if (this->has_transaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->transaction_, output);
  }

  // string passphrase = 2;
  if (this->passphrase().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passphrase().data(), static_cast<int>(this->passphrase().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.SignTransactionPassphraseRequest.passphrase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->passphrase(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.SignTransactionPassphraseRequest)
}

::google::protobuf::uint8* SignTransactionPassphraseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.SignTransactionPassphraseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rpcpb.TransactionRequest transaction = 1;
  if (this->has_transaction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->transaction_, deterministic, target);
  }

  // string passphrase = 2;
  if (this->passphrase().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passphrase().data(), static_cast<int>(this->passphrase().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.SignTransactionPassphraseRequest.passphrase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->passphrase(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.SignTransactionPassphraseRequest)
  return target;
}

size_t SignTransactionPassphraseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.SignTransactionPassphraseRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string passphrase = 2;
  if (this->passphrase().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passphrase());
  }

  // .rpcpb.TransactionRequest transaction = 1;
  if (this->has_transaction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->transaction_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignTransactionPassphraseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.SignTransactionPassphraseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SignTransactionPassphraseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignTransactionPassphraseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.SignTransactionPassphraseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.SignTransactionPassphraseRequest)
    MergeFrom(*source);
  }
}

void SignTransactionPassphraseRequest::MergeFrom(const SignTransactionPassphraseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.SignTransactionPassphraseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.passphrase().size() > 0) {

    passphrase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passphrase_);
  }
  if (from.has_transaction()) {
    mutable_transaction()->::rpcpb::TransactionRequest::MergeFrom(from.transaction());
  }
}

void SignTransactionPassphraseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.SignTransactionPassphraseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignTransactionPassphraseRequest::CopyFrom(const SignTransactionPassphraseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.SignTransactionPassphraseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignTransactionPassphraseRequest::IsInitialized() const {
  return true;
}

void SignTransactionPassphraseRequest::Swap(SignTransactionPassphraseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignTransactionPassphraseRequest::InternalSwap(SignTransactionPassphraseRequest* other) {
  using std::swap;
  passphrase_.Swap(&other->passphrase_);
  swap(transaction_, other->transaction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignTransactionPassphraseRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignTransactionPassphraseResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignTransactionPassphraseResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignTransactionPassphraseResponse::SignTransactionPassphraseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsSignTransactionPassphraseResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.SignTransactionPassphraseResponse)
}
SignTransactionPassphraseResponse::SignTransactionPassphraseResponse(const SignTransactionPassphraseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.SignTransactionPassphraseResponse)
}

void SignTransactionPassphraseResponse::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SignTransactionPassphraseResponse::~SignTransactionPassphraseResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.SignTransactionPassphraseResponse)
  SharedDtor();
}

void SignTransactionPassphraseResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignTransactionPassphraseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignTransactionPassphraseResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignTransactionPassphraseResponse& SignTransactionPassphraseResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsSignTransactionPassphraseResponse();
  return *internal_default_instance();
}

SignTransactionPassphraseResponse* SignTransactionPassphraseResponse::New(::google::protobuf::Arena* arena) const {
  SignTransactionPassphraseResponse* n = new SignTransactionPassphraseResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SignTransactionPassphraseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.SignTransactionPassphraseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SignTransactionPassphraseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.SignTransactionPassphraseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.SignTransactionPassphraseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.SignTransactionPassphraseResponse)
  return false;
#undef DO_
}

void SignTransactionPassphraseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.SignTransactionPassphraseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.SignTransactionPassphraseResponse)
}

::google::protobuf::uint8* SignTransactionPassphraseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.SignTransactionPassphraseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.SignTransactionPassphraseResponse)
  return target;
}

size_t SignTransactionPassphraseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.SignTransactionPassphraseResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignTransactionPassphraseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.SignTransactionPassphraseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SignTransactionPassphraseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignTransactionPassphraseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.SignTransactionPassphraseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.SignTransactionPassphraseResponse)
    MergeFrom(*source);
  }
}

void SignTransactionPassphraseResponse::MergeFrom(const SignTransactionPassphraseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.SignTransactionPassphraseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void SignTransactionPassphraseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.SignTransactionPassphraseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignTransactionPassphraseResponse::CopyFrom(const SignTransactionPassphraseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.SignTransactionPassphraseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignTransactionPassphraseResponse::IsInitialized() const {
  return true;
}

void SignTransactionPassphraseResponse::Swap(SignTransactionPassphraseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignTransactionPassphraseResponse::InternalSwap(SignTransactionPassphraseResponse* other) {
  using std::swap;
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignTransactionPassphraseResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendTransactionPassphraseRequest::InitAsDefaultInstance() {
  ::rpcpb::_SendTransactionPassphraseRequest_default_instance_._instance.get_mutable()->transaction_ = const_cast< ::rpcpb::TransactionRequest*>(
      ::rpcpb::TransactionRequest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendTransactionPassphraseRequest::kTransactionFieldNumber;
const int SendTransactionPassphraseRequest::kPassphraseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendTransactionPassphraseRequest::SendTransactionPassphraseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsSendTransactionPassphraseRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.SendTransactionPassphraseRequest)
}
SendTransactionPassphraseRequest::SendTransactionPassphraseRequest(const SendTransactionPassphraseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  passphrase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passphrase().size() > 0) {
    passphrase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passphrase_);
  }
  if (from.has_transaction()) {
    transaction_ = new ::rpcpb::TransactionRequest(*from.transaction_);
  } else {
    transaction_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.SendTransactionPassphraseRequest)
}

void SendTransactionPassphraseRequest::SharedCtor() {
  passphrase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transaction_ = NULL;
  _cached_size_ = 0;
}

SendTransactionPassphraseRequest::~SendTransactionPassphraseRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.SendTransactionPassphraseRequest)
  SharedDtor();
}

void SendTransactionPassphraseRequest::SharedDtor() {
  passphrase_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete transaction_;
}

void SendTransactionPassphraseRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendTransactionPassphraseRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendTransactionPassphraseRequest& SendTransactionPassphraseRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsSendTransactionPassphraseRequest();
  return *internal_default_instance();
}

SendTransactionPassphraseRequest* SendTransactionPassphraseRequest::New(::google::protobuf::Arena* arena) const {
  SendTransactionPassphraseRequest* n = new SendTransactionPassphraseRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendTransactionPassphraseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.SendTransactionPassphraseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  passphrase_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && transaction_ != NULL) {
    delete transaction_;
  }
  transaction_ = NULL;
  _internal_metadata_.Clear();
}

bool SendTransactionPassphraseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.SendTransactionPassphraseRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .rpcpb.TransactionRequest transaction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string passphrase = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passphrase()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passphrase().data(), static_cast<int>(this->passphrase().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.SendTransactionPassphraseRequest.passphrase"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.SendTransactionPassphraseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.SendTransactionPassphraseRequest)
  return false;
#undef DO_
}

void SendTransactionPassphraseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.SendTransactionPassphraseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rpcpb.TransactionRequest transaction = 1;
  if (this->has_transaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->transaction_, output);
  }

  // string passphrase = 2;
  if (this->passphrase().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passphrase().data(), static_cast<int>(this->passphrase().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.SendTransactionPassphraseRequest.passphrase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->passphrase(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.SendTransactionPassphraseRequest)
}

::google::protobuf::uint8* SendTransactionPassphraseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.SendTransactionPassphraseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rpcpb.TransactionRequest transaction = 1;
  if (this->has_transaction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->transaction_, deterministic, target);
  }

  // string passphrase = 2;
  if (this->passphrase().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passphrase().data(), static_cast<int>(this->passphrase().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.SendTransactionPassphraseRequest.passphrase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->passphrase(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.SendTransactionPassphraseRequest)
  return target;
}

size_t SendTransactionPassphraseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.SendTransactionPassphraseRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string passphrase = 2;
  if (this->passphrase().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passphrase());
  }

  // .rpcpb.TransactionRequest transaction = 1;
  if (this->has_transaction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->transaction_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendTransactionPassphraseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.SendTransactionPassphraseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendTransactionPassphraseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendTransactionPassphraseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.SendTransactionPassphraseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.SendTransactionPassphraseRequest)
    MergeFrom(*source);
  }
}

void SendTransactionPassphraseRequest::MergeFrom(const SendTransactionPassphraseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.SendTransactionPassphraseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.passphrase().size() > 0) {

    passphrase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passphrase_);
  }
  if (from.has_transaction()) {
    mutable_transaction()->::rpcpb::TransactionRequest::MergeFrom(from.transaction());
  }
}

void SendTransactionPassphraseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.SendTransactionPassphraseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendTransactionPassphraseRequest::CopyFrom(const SendTransactionPassphraseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.SendTransactionPassphraseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendTransactionPassphraseRequest::IsInitialized() const {
  return true;
}

void SendTransactionPassphraseRequest::Swap(SendTransactionPassphraseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendTransactionPassphraseRequest::InternalSwap(SendTransactionPassphraseRequest* other) {
  using std::swap;
  passphrase_.Swap(&other->passphrase_);
  swap(transaction_, other->transaction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendTransactionPassphraseRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GasPriceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GasPriceResponse::kGasPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GasPriceResponse::GasPriceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsGasPriceResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.GasPriceResponse)
}
GasPriceResponse::GasPriceResponse(const GasPriceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gas_price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gas_price().size() > 0) {
    gas_price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_price_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.GasPriceResponse)
}

void GasPriceResponse::SharedCtor() {
  gas_price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GasPriceResponse::~GasPriceResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.GasPriceResponse)
  SharedDtor();
}

void GasPriceResponse::SharedDtor() {
  gas_price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GasPriceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GasPriceResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GasPriceResponse& GasPriceResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsGasPriceResponse();
  return *internal_default_instance();
}

GasPriceResponse* GasPriceResponse::New(::google::protobuf::Arena* arena) const {
  GasPriceResponse* n = new GasPriceResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GasPriceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.GasPriceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gas_price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GasPriceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.GasPriceResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string gas_price = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gas_price()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gas_price().data(), static_cast<int>(this->gas_price().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.GasPriceResponse.gas_price"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.GasPriceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.GasPriceResponse)
  return false;
#undef DO_
}

void GasPriceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.GasPriceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gas_price = 1;
  if (this->gas_price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_price().data(), static_cast<int>(this->gas_price().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GasPriceResponse.gas_price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gas_price(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.GasPriceResponse)
}

::google::protobuf::uint8* GasPriceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.GasPriceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gas_price = 1;
  if (this->gas_price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas_price().data(), static_cast<int>(this->gas_price().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GasPriceResponse.gas_price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gas_price(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.GasPriceResponse)
  return target;
}

size_t GasPriceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.GasPriceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string gas_price = 1;
  if (this->gas_price().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gas_price());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GasPriceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.GasPriceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GasPriceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GasPriceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.GasPriceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.GasPriceResponse)
    MergeFrom(*source);
  }
}

void GasPriceResponse::MergeFrom(const GasPriceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.GasPriceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gas_price().size() > 0) {

    gas_price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_price_);
  }
}

void GasPriceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.GasPriceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GasPriceResponse::CopyFrom(const GasPriceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.GasPriceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GasPriceResponse::IsInitialized() const {
  return true;
}

void GasPriceResponse::Swap(GasPriceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GasPriceResponse::InternalSwap(GasPriceResponse* other) {
  using std::swap;
  gas_price_.Swap(&other->gas_price_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GasPriceResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HashRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HashRequest::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HashRequest::HashRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsHashRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.HashRequest)
}
HashRequest::HashRequest(const HashRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.HashRequest)
}

void HashRequest::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HashRequest::~HashRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.HashRequest)
  SharedDtor();
}

void HashRequest::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HashRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HashRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HashRequest& HashRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsHashRequest();
  return *internal_default_instance();
}

HashRequest* HashRequest::New(::google::protobuf::Arena* arena) const {
  HashRequest* n = new HashRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HashRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.HashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool HashRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.HashRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash().data(), static_cast<int>(this->hash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.HashRequest.hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.HashRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.HashRequest)
  return false;
#undef DO_
}

void HashRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.HashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.HashRequest.hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.HashRequest)
}

::google::protobuf::uint8* HashRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.HashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.HashRequest.hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hash(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.HashRequest)
  return target;
}

size_t HashRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.HashRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HashRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.HashRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HashRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HashRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.HashRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.HashRequest)
    MergeFrom(*source);
  }
}

void HashRequest::MergeFrom(const HashRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.HashRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
}

void HashRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.HashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HashRequest::CopyFrom(const HashRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.HashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HashRequest::IsInitialized() const {
  return true;
}

void HashRequest::Swap(HashRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HashRequest::InternalSwap(HashRequest* other) {
  using std::swap;
  hash_.Swap(&other->hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HashRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GasResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GasResponse::kGasFieldNumber;
const int GasResponse::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GasResponse::GasResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsGasResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.GasResponse)
}
GasResponse::GasResponse(const GasResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gas().size() > 0) {
    gas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_);
  }
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err().size() > 0) {
    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.GasResponse)
}

void GasResponse::SharedCtor() {
  gas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GasResponse::~GasResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.GasResponse)
  SharedDtor();
}

void GasResponse::SharedDtor() {
  gas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GasResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GasResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GasResponse& GasResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsGasResponse();
  return *internal_default_instance();
}

GasResponse* GasResponse::New(::google::protobuf::Arena* arena) const {
  GasResponse* n = new GasResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GasResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.GasResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GasResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.GasResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string gas = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gas()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gas().data(), static_cast<int>(this->gas().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.GasResponse.gas"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string err = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->err().data(), static_cast<int>(this->err().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.GasResponse.err"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.GasResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.GasResponse)
  return false;
#undef DO_
}

void GasResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.GasResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gas = 1;
  if (this->gas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas().data(), static_cast<int>(this->gas().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GasResponse.gas");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gas(), output);
  }

  // string err = 2;
  if (this->err().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GasResponse.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.GasResponse)
}

::google::protobuf::uint8* GasResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.GasResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gas = 1;
  if (this->gas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gas().data(), static_cast<int>(this->gas().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GasResponse.gas");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gas(), target);
  }

  // string err = 2;
  if (this->err().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.GasResponse.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.GasResponse)
  return target;
}

size_t GasResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.GasResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string gas = 1;
  if (this->gas().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gas());
  }

  // string err = 2;
  if (this->err().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GasResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.GasResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GasResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GasResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.GasResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.GasResponse)
    MergeFrom(*source);
  }
}

void GasResponse::MergeFrom(const GasResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.GasResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gas().size() > 0) {

    gas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_);
  }
  if (from.err().size() > 0) {

    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
}

void GasResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.GasResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GasResponse::CopyFrom(const GasResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.GasResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GasResponse::IsInitialized() const {
  return true;
}

void GasResponse::Swap(GasResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GasResponse::InternalSwap(GasResponse* other) {
  using std::swap;
  gas_.Swap(&other->gas_);
  err_.Swap(&other->err_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GasResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventsResponse::kEventsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventsResponse::EventsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsEventsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.EventsResponse)
}
EventsResponse::EventsResponse(const EventsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      events_(from.events_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rpcpb.EventsResponse)
}

void EventsResponse::SharedCtor() {
  _cached_size_ = 0;
}

EventsResponse::~EventsResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.EventsResponse)
  SharedDtor();
}

void EventsResponse::SharedDtor() {
}

void EventsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventsResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventsResponse& EventsResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsEventsResponse();
  return *internal_default_instance();
}

EventsResponse* EventsResponse::New(::google::protobuf::Arena* arena) const {
  EventsResponse* n = new EventsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EventsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.EventsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  _internal_metadata_.Clear();
}

bool EventsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.EventsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .rpcpb.Event events = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.EventsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.EventsResponse)
  return false;
#undef DO_
}

void EventsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.EventsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rpcpb.Event events = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->events(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.EventsResponse)
}

::google::protobuf::uint8* EventsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.EventsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rpcpb.Event events = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->events(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.EventsResponse)
  return target;
}

size_t EventsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.EventsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rpcpb.Event events = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->events(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.EventsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EventsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.EventsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.EventsResponse)
    MergeFrom(*source);
  }
}

void EventsResponse::MergeFrom(const EventsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.EventsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
}

void EventsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.EventsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventsResponse::CopyFrom(const EventsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.EventsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventsResponse::IsInitialized() const {
  return true;
}

void EventsResponse::Swap(EventsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventsResponse::InternalSwap(EventsResponse* other) {
  using std::swap;
  events_.InternalSwap(&other->events_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventsResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Event::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kTopicFieldNumber;
const int Event::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsEvent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.Event)
}
Event::Event(const Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.Event)
}

void Event::SharedCtor() {
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:rpcpb.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Event::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Event& Event::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsEvent();
  return *internal_default_instance();
}

Event* Event::New(::google::protobuf::Arena* arena) const {
  Event* n = new Event;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.Event)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.Event.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.Event.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.Event)
  return false;
#undef DO_
}

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.Event.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.Event.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.Event.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.Event.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.Event)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // string data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  using std::swap;
  topic_.Swap(&other->topic_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PprofRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PprofRequest::kListenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PprofRequest::PprofRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsPprofRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.PprofRequest)
}
PprofRequest::PprofRequest(const PprofRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  listen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.listen().size() > 0) {
    listen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listen_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.PprofRequest)
}

void PprofRequest::SharedCtor() {
  listen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PprofRequest::~PprofRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.PprofRequest)
  SharedDtor();
}

void PprofRequest::SharedDtor() {
  listen_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PprofRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PprofRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PprofRequest& PprofRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsPprofRequest();
  return *internal_default_instance();
}

PprofRequest* PprofRequest::New(::google::protobuf::Arena* arena) const {
  PprofRequest* n = new PprofRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PprofRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.PprofRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  listen_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PprofRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.PprofRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string listen = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_listen()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->listen().data(), static_cast<int>(this->listen().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.PprofRequest.listen"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.PprofRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.PprofRequest)
  return false;
#undef DO_
}

void PprofRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.PprofRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string listen = 1;
  if (this->listen().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listen().data(), static_cast<int>(this->listen().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.PprofRequest.listen");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->listen(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.PprofRequest)
}

::google::protobuf::uint8* PprofRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.PprofRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string listen = 1;
  if (this->listen().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listen().data(), static_cast<int>(this->listen().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.PprofRequest.listen");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->listen(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.PprofRequest)
  return target;
}

size_t PprofRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.PprofRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string listen = 1;
  if (this->listen().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PprofRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.PprofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PprofRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PprofRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.PprofRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.PprofRequest)
    MergeFrom(*source);
  }
}

void PprofRequest::MergeFrom(const PprofRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.PprofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.listen().size() > 0) {

    listen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listen_);
  }
}

void PprofRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.PprofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PprofRequest::CopyFrom(const PprofRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.PprofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PprofRequest::IsInitialized() const {
  return true;
}

void PprofRequest::Swap(PprofRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PprofRequest::InternalSwap(PprofRequest* other) {
  using std::swap;
  listen_.Swap(&other->listen_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PprofRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PprofResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PprofResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PprofResponse::PprofResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsPprofResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.PprofResponse)
}
PprofResponse::PprofResponse(const PprofResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:rpcpb.PprofResponse)
}

void PprofResponse::SharedCtor() {
  result_ = false;
  _cached_size_ = 0;
}

PprofResponse::~PprofResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.PprofResponse)
  SharedDtor();
}

void PprofResponse::SharedDtor() {
}

void PprofResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PprofResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PprofResponse& PprofResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsPprofResponse();
  return *internal_default_instance();
}

PprofResponse* PprofResponse::New(::google::protobuf::Arena* arena) const {
  PprofResponse* n = new PprofResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PprofResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.PprofResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear();
}

bool PprofResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.PprofResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.PprofResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.PprofResponse)
  return false;
#undef DO_
}

void PprofResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.PprofResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.PprofResponse)
}

::google::protobuf::uint8* PprofResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.PprofResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.PprofResponse)
  return target;
}

size_t PprofResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.PprofResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PprofResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.PprofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PprofResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PprofResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.PprofResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.PprofResponse)
    MergeFrom(*source);
  }
}

void PprofResponse::MergeFrom(const PprofResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.PprofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void PprofResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.PprofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PprofResponse::CopyFrom(const PprofResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.PprofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PprofResponse::IsInitialized() const {
  return true;
}

void PprofResponse::Swap(PprofResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PprofResponse::InternalSwap(PprofResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PprofResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetConfigResponse::InitAsDefaultInstance() {
  ::rpcpb::_GetConfigResponse_default_instance_._instance.get_mutable()->config_ = const_cast< ::nebletpb::Config*>(
      ::nebletpb::Config::internal_default_instance());
}
void GetConfigResponse::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetConfigResponse::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetConfigResponse::GetConfigResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsGetConfigResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.GetConfigResponse)
}
GetConfigResponse::GetConfigResponse(const GetConfigResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::nebletpb::Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.GetConfigResponse)
}

void GetConfigResponse::SharedCtor() {
  config_ = NULL;
  _cached_size_ = 0;
}

GetConfigResponse::~GetConfigResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.GetConfigResponse)
  SharedDtor();
}

void GetConfigResponse::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
}

void GetConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetConfigResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetConfigResponse& GetConfigResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsGetConfigResponse();
  return *internal_default_instance();
}

GetConfigResponse* GetConfigResponse::New(::google::protobuf::Arena* arena) const {
  GetConfigResponse* n = new GetConfigResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.GetConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool GetConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.GetConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .nebletpb.Config config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.GetConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.GetConfigResponse)
  return false;
#undef DO_
}

void GetConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.GetConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .nebletpb.Config config = 1;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.GetConfigResponse)
}

::google::protobuf::uint8* GetConfigResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.GetConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .nebletpb.Config config = 1;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.GetConfigResponse)
  return target;
}

size_t GetConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.GetConfigResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .nebletpb.Config config = 1;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.GetConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConfigResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetConfigResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.GetConfigResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.GetConfigResponse)
    MergeFrom(*source);
  }
}

void GetConfigResponse::MergeFrom(const GetConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.GetConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::nebletpb::Config::MergeFrom(from.config());
  }
}

void GetConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.GetConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConfigResponse::CopyFrom(const GetConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.GetConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConfigResponse::IsInitialized() const {
  return true;
}

void GetConfigResponse::Swap(GetConfigResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetConfigResponse::InternalSwap(GetConfigResponse* other) {
  using std::swap;
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetConfigResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NVMDeployRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NVMDeployRequest::kScriptSrcFieldNumber;
const int NVMDeployRequest::kFromAddrFieldNumber;
const int NVMDeployRequest::kBlockHeightFieldNumber;
const int NVMDeployRequest::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NVMDeployRequest::NVMDeployRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsNVMDeployRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.NVMDeployRequest)
}
NVMDeployRequest::NVMDeployRequest(const NVMDeployRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  script_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.script_src().size() > 0) {
    script_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_src_);
  }
  from_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_addr().size() > 0) {
    from_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_addr_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  block_height_ = from.block_height_;
  // @@protoc_insertion_point(copy_constructor:rpcpb.NVMDeployRequest)
}

void NVMDeployRequest::SharedCtor() {
  script_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  block_height_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

NVMDeployRequest::~NVMDeployRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.NVMDeployRequest)
  SharedDtor();
}

void NVMDeployRequest::SharedDtor() {
  script_src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NVMDeployRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NVMDeployRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NVMDeployRequest& NVMDeployRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsNVMDeployRequest();
  return *internal_default_instance();
}

NVMDeployRequest* NVMDeployRequest::New(::google::protobuf::Arena* arena) const {
  NVMDeployRequest* n = new NVMDeployRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NVMDeployRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.NVMDeployRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  script_src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  block_height_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool NVMDeployRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.NVMDeployRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string script_src = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_script_src()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->script_src().data(), static_cast<int>(this->script_src().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.NVMDeployRequest.script_src"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_addr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_addr().data(), static_cast<int>(this->from_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.NVMDeployRequest.from_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 block_height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &block_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.NVMDeployRequest.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.NVMDeployRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.NVMDeployRequest)
  return false;
#undef DO_
}

void NVMDeployRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.NVMDeployRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string script_src = 1;
  if (this->script_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_src().data(), static_cast<int>(this->script_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMDeployRequest.script_src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->script_src(), output);
  }

  // string from_addr = 2;
  if (this->from_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_addr().data(), static_cast<int>(this->from_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMDeployRequest.from_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_addr(), output);
  }

  // int64 block_height = 3;
  if (this->block_height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->block_height(), output);
  }

  // string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMDeployRequest.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.NVMDeployRequest)
}

::google::protobuf::uint8* NVMDeployRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.NVMDeployRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string script_src = 1;
  if (this->script_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_src().data(), static_cast<int>(this->script_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMDeployRequest.script_src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->script_src(), target);
  }

  // string from_addr = 2;
  if (this->from_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_addr().data(), static_cast<int>(this->from_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMDeployRequest.from_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_addr(), target);
  }

  // int64 block_height = 3;
  if (this->block_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->block_height(), target);
  }

  // string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMDeployRequest.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.NVMDeployRequest)
  return target;
}

size_t NVMDeployRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.NVMDeployRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string script_src = 1;
  if (this->script_src().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->script_src());
  }

  // string from_addr = 2;
  if (this->from_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_addr());
  }

  // string type = 4;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // int64 block_height = 3;
  if (this->block_height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->block_height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NVMDeployRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.NVMDeployRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NVMDeployRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NVMDeployRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.NVMDeployRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.NVMDeployRequest)
    MergeFrom(*source);
  }
}

void NVMDeployRequest::MergeFrom(const NVMDeployRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.NVMDeployRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.script_src().size() > 0) {

    script_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_src_);
  }
  if (from.from_addr().size() > 0) {

    from_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_addr_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.block_height() != 0) {
    set_block_height(from.block_height());
  }
}

void NVMDeployRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.NVMDeployRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NVMDeployRequest::CopyFrom(const NVMDeployRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.NVMDeployRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NVMDeployRequest::IsInitialized() const {
  return true;
}

void NVMDeployRequest::Swap(NVMDeployRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NVMDeployRequest::InternalSwap(NVMDeployRequest* other) {
  using std::swap;
  script_src_.Swap(&other->script_src_);
  from_addr_.Swap(&other->from_addr_);
  type_.Swap(&other->type_);
  swap(block_height_, other->block_height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NVMDeployRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NVMDataRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NVMDataRequest::kRequestTypeFieldNumber;
const int NVMDataRequest::kScriptSrcFieldNumber;
const int NVMDataRequest::kFunctionNameFieldNumber;
const int NVMDataRequest::kContractAddrFieldNumber;
const int NVMDataRequest::kExtraDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NVMDataRequest::NVMDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsNVMDataRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.NVMDataRequest)
}
NVMDataRequest::NVMDataRequest(const NVMDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_type().size() > 0) {
    request_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_type_);
  }
  script_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.script_src().size() > 0) {
    script_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_src_);
  }
  function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.function_name().size() > 0) {
    function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_name_);
  }
  contract_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contract_addr().size() > 0) {
    contract_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_addr_);
  }
  extra_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extra_data().size() > 0) {
    extra_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_data_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcpb.NVMDataRequest)
}

void NVMDataRequest::SharedCtor() {
  request_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

NVMDataRequest::~NVMDataRequest() {
  // @@protoc_insertion_point(destructor:rpcpb.NVMDataRequest)
  SharedDtor();
}

void NVMDataRequest::SharedDtor() {
  request_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NVMDataRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NVMDataRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NVMDataRequest& NVMDataRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsNVMDataRequest();
  return *internal_default_instance();
}

NVMDataRequest* NVMDataRequest::New(::google::protobuf::Arena* arena) const {
  NVMDataRequest* n = new NVMDataRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NVMDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.NVMDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  script_src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool NVMDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.NVMDataRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_type().data(), static_cast<int>(this->request_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.NVMDataRequest.request_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string script_src = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_script_src()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->script_src().data(), static_cast<int>(this->script_src().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.NVMDataRequest.script_src"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string function_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->function_name().data(), static_cast<int>(this->function_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.NVMDataRequest.function_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contract_addr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contract_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contract_addr().data(), static_cast<int>(this->contract_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.NVMDataRequest.contract_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extra_data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extra_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extra_data().data(), static_cast<int>(this->extra_data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.NVMDataRequest.extra_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.NVMDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.NVMDataRequest)
  return false;
#undef DO_
}

void NVMDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.NVMDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_type = 1;
  if (this->request_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_type().data(), static_cast<int>(this->request_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMDataRequest.request_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_type(), output);
  }

  // string script_src = 2;
  if (this->script_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_src().data(), static_cast<int>(this->script_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMDataRequest.script_src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->script_src(), output);
  }

  // string function_name = 3;
  if (this->function_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function_name().data(), static_cast<int>(this->function_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMDataRequest.function_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->function_name(), output);
  }

  // string contract_addr = 4;
  if (this->contract_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract_addr().data(), static_cast<int>(this->contract_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMDataRequest.contract_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->contract_addr(), output);
  }

  // string extra_data = 5;
  if (this->extra_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extra_data().data(), static_cast<int>(this->extra_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMDataRequest.extra_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->extra_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.NVMDataRequest)
}

::google::protobuf::uint8* NVMDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.NVMDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_type = 1;
  if (this->request_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_type().data(), static_cast<int>(this->request_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMDataRequest.request_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_type(), target);
  }

  // string script_src = 2;
  if (this->script_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_src().data(), static_cast<int>(this->script_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMDataRequest.script_src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->script_src(), target);
  }

  // string function_name = 3;
  if (this->function_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function_name().data(), static_cast<int>(this->function_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMDataRequest.function_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->function_name(), target);
  }

  // string contract_addr = 4;
  if (this->contract_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contract_addr().data(), static_cast<int>(this->contract_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMDataRequest.contract_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->contract_addr(), target);
  }

  // string extra_data = 5;
  if (this->extra_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extra_data().data(), static_cast<int>(this->extra_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMDataRequest.extra_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->extra_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.NVMDataRequest)
  return target;
}

size_t NVMDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.NVMDataRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_type = 1;
  if (this->request_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_type());
  }

  // string script_src = 2;
  if (this->script_src().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->script_src());
  }

  // string function_name = 3;
  if (this->function_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->function_name());
  }

  // string contract_addr = 4;
  if (this->contract_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contract_addr());
  }

  // string extra_data = 5;
  if (this->extra_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extra_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NVMDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.NVMDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NVMDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NVMDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.NVMDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.NVMDataRequest)
    MergeFrom(*source);
  }
}

void NVMDataRequest::MergeFrom(const NVMDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.NVMDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_type().size() > 0) {

    request_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_type_);
  }
  if (from.script_src().size() > 0) {

    script_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_src_);
  }
  if (from.function_name().size() > 0) {

    function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_name_);
  }
  if (from.contract_addr().size() > 0) {

    contract_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_addr_);
  }
  if (from.extra_data().size() > 0) {

    extra_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_data_);
  }
}

void NVMDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.NVMDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NVMDataRequest::CopyFrom(const NVMDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.NVMDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NVMDataRequest::IsInitialized() const {
  return true;
}

void NVMDataRequest::Swap(NVMDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NVMDataRequest::InternalSwap(NVMDataRequest* other) {
  using std::swap;
  request_type_.Swap(&other->request_type_);
  script_src_.Swap(&other->script_src_);
  function_name_.Swap(&other->function_name_);
  contract_addr_.Swap(&other->contract_addr_);
  extra_data_.Swap(&other->extra_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NVMDataRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NVMResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NVMResponse::kResultFieldNumber;
const int NVMResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NVMResponse::NVMResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsNVMResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcpb.NVMResponse)
}
NVMResponse::NVMResponse(const NVMResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:rpcpb.NVMResponse)
}

void NVMResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _cached_size_ = 0;
}

NVMResponse::~NVMResponse() {
  // @@protoc_insertion_point(destructor:rpcpb.NVMResponse)
  SharedDtor();
}

void NVMResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NVMResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NVMResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NVMResponse& NVMResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsNVMResponse();
  return *internal_default_instance();
}

NVMResponse* NVMResponse::New(::google::protobuf::Arena* arena) const {
  NVMResponse* n = new NVMResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NVMResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcpb.NVMResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _internal_metadata_.Clear();
}

bool NVMResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcpb.NVMResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcpb.NVMResponse.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcpb.NVMResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcpb.NVMResponse)
  return false;
#undef DO_
}

void NVMResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcpb.NVMResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcpb.NVMResponse)
}

::google::protobuf::uint8* NVMResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcpb.NVMResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcpb.NVMResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcpb.NVMResponse)
  return target;
}

size_t NVMResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcpb.NVMResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NVMResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcpb.NVMResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const NVMResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NVMResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcpb.NVMResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcpb.NVMResponse)
    MergeFrom(*source);
  }
}

void NVMResponse::MergeFrom(const NVMResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcpb.NVMResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void NVMResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcpb.NVMResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NVMResponse::CopyFrom(const NVMResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcpb.NVMResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NVMResponse::IsInitialized() const {
  return true;
}

void NVMResponse::Swap(NVMResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NVMResponse::InternalSwap(NVMResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NVMResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace rpcpb

// @@protoc_insertion_point(global_scope)
